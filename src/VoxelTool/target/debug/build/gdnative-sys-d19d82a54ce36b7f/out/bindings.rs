/* automatically generated by rust-bindgen 0.56.0 */

pub type __uint8_t = libc::c_uchar;
pub type __int32_t = libc::c_int;
pub type __uint32_t = libc::c_uint;
pub type __int64_t = libc::c_long;
pub type __uint64_t = libc::c_ulong;
pub const godot_error_GODOT_OK: godot_error = 0;
#[doc = "< Generic fail error"]
pub const godot_error_GODOT_FAILED: godot_error = 1;
#[doc = "< What is requested is unsupported/unavailable"]
pub const godot_error_GODOT_ERR_UNAVAILABLE: godot_error = 2;
#[doc = "< The object being used hasn't been properly set up yet"]
pub const godot_error_GODOT_ERR_UNCONFIGURED: godot_error = 3;
#[doc = "< Missing credentials for requested resource"]
pub const godot_error_GODOT_ERR_UNAUTHORIZED: godot_error = 4;
#[doc = "< Parameter given out of range (5)"]
pub const godot_error_GODOT_ERR_PARAMETER_RANGE_ERROR: godot_error = 5;
#[doc = "< Out of memory"]
pub const godot_error_GODOT_ERR_OUT_OF_MEMORY: godot_error = 6;
pub const godot_error_GODOT_ERR_FILE_NOT_FOUND: godot_error = 7;
pub const godot_error_GODOT_ERR_FILE_BAD_DRIVE: godot_error = 8;
pub const godot_error_GODOT_ERR_FILE_BAD_PATH: godot_error = 9;
pub const godot_error_GODOT_ERR_FILE_NO_PERMISSION: godot_error = 10;
pub const godot_error_GODOT_ERR_FILE_ALREADY_IN_USE: godot_error = 11;
pub const godot_error_GODOT_ERR_FILE_CANT_OPEN: godot_error = 12;
pub const godot_error_GODOT_ERR_FILE_CANT_WRITE: godot_error = 13;
pub const godot_error_GODOT_ERR_FILE_CANT_READ: godot_error = 14;
pub const godot_error_GODOT_ERR_FILE_UNRECOGNIZED: godot_error = 15;
pub const godot_error_GODOT_ERR_FILE_CORRUPT: godot_error = 16;
pub const godot_error_GODOT_ERR_FILE_MISSING_DEPENDENCIES: godot_error = 17;
pub const godot_error_GODOT_ERR_FILE_EOF: godot_error = 18;
#[doc = "< Can't open a resource/socket/file"]
pub const godot_error_GODOT_ERR_CANT_OPEN: godot_error = 19;
pub const godot_error_GODOT_ERR_CANT_CREATE: godot_error = 20;
pub const godot_error_GODOT_ERR_QUERY_FAILED: godot_error = 21;
pub const godot_error_GODOT_ERR_ALREADY_IN_USE: godot_error = 22;
#[doc = "< resource is locked"]
pub const godot_error_GODOT_ERR_LOCKED: godot_error = 23;
pub const godot_error_GODOT_ERR_TIMEOUT: godot_error = 24;
pub const godot_error_GODOT_ERR_CANT_CONNECT: godot_error = 25;
pub const godot_error_GODOT_ERR_CANT_RESOLVE: godot_error = 26;
pub const godot_error_GODOT_ERR_CONNECTION_ERROR: godot_error = 27;
pub const godot_error_GODOT_ERR_CANT_ACQUIRE_RESOURCE: godot_error = 28;
pub const godot_error_GODOT_ERR_CANT_FORK: godot_error = 29;
#[doc = "< Data passed is invalid (30)"]
pub const godot_error_GODOT_ERR_INVALID_DATA: godot_error = 30;
#[doc = "< Parameter passed is invalid"]
pub const godot_error_GODOT_ERR_INVALID_PARAMETER: godot_error = 31;
#[doc = "< When adding, item already exists"]
pub const godot_error_GODOT_ERR_ALREADY_EXISTS: godot_error = 32;
#[doc = "< When retrieving/erasing, it item does not exist"]
pub const godot_error_GODOT_ERR_DOES_NOT_EXIST: godot_error = 33;
#[doc = "< database is full"]
pub const godot_error_GODOT_ERR_DATABASE_CANT_READ: godot_error = 34;
#[doc = "< database is full (35)"]
pub const godot_error_GODOT_ERR_DATABASE_CANT_WRITE: godot_error = 35;
pub const godot_error_GODOT_ERR_COMPILATION_FAILED: godot_error = 36;
pub const godot_error_GODOT_ERR_METHOD_NOT_FOUND: godot_error = 37;
pub const godot_error_GODOT_ERR_LINK_FAILED: godot_error = 38;
pub const godot_error_GODOT_ERR_SCRIPT_FAILED: godot_error = 39;
pub const godot_error_GODOT_ERR_CYCLIC_LINK: godot_error = 40;
pub const godot_error_GODOT_ERR_INVALID_DECLARATION: godot_error = 41;
pub const godot_error_GODOT_ERR_DUPLICATE_SYMBOL: godot_error = 42;
pub const godot_error_GODOT_ERR_PARSE_ERROR: godot_error = 43;
pub const godot_error_GODOT_ERR_BUSY: godot_error = 44;
pub const godot_error_GODOT_ERR_SKIP: godot_error = 45;
#[doc = "< user requested help!!"]
pub const godot_error_GODOT_ERR_HELP: godot_error = 46;
#[doc = "< a bug in the software certainly happened, due to a double check failing or unexpected behavior."]
pub const godot_error_GODOT_ERR_BUG: godot_error = 47;
pub const godot_error_GODOT_ERR_PRINTER_ON_FIRE: godot_error = 48;
#[doc = " Error"]
pub type godot_error = libc::c_uint;
#[doc = " bool"]
pub type godot_bool = bool;
#[doc = " int"]
pub type godot_int = libc::c_int;
#[doc = " real"]
pub type godot_real = f32;
#[doc = " Object (forward declared)"]
pub type godot_object = libc::c_void;
pub type wchar_t = libc::c_int;
pub type godot_char_type = wchar_t;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_string {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_string() {
    assert_eq!(
        ::std::mem::size_of::<godot_string>(),
        8usize,
        concat!("Size of: ", stringify!(godot_string))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_string>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_string))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_string>()))._dont_touch_that as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_string),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_char_string {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_char_string() {
    assert_eq!(
        ::std::mem::size_of::<godot_char_string>(),
        8usize,
        concat!("Size of: ", stringify!(godot_char_string))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_char_string>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_char_string))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_char_string>()))._dont_touch_that as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_char_string),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_array {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_array() {
    assert_eq!(
        ::std::mem::size_of::<godot_array>(),
        8usize,
        concat!("Size of: ", stringify!(godot_array))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_array>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_array))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_array>()))._dont_touch_that as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_array),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_pool_array_read_access {
    pub _dont_touch_that: [u8; 1usize],
}
#[test]
fn bindgen_test_layout_godot_pool_array_read_access() {
    assert_eq!(
        ::std::mem::size_of::<godot_pool_array_read_access>(),
        1usize,
        concat!("Size of: ", stringify!(godot_pool_array_read_access))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_pool_array_read_access>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_pool_array_read_access))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pool_array_read_access>()))._dont_touch_that as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pool_array_read_access),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
pub type godot_pool_byte_array_read_access = godot_pool_array_read_access;
pub type godot_pool_int_array_read_access = godot_pool_array_read_access;
pub type godot_pool_real_array_read_access = godot_pool_array_read_access;
pub type godot_pool_string_array_read_access = godot_pool_array_read_access;
pub type godot_pool_vector2_array_read_access = godot_pool_array_read_access;
pub type godot_pool_vector3_array_read_access = godot_pool_array_read_access;
pub type godot_pool_color_array_read_access = godot_pool_array_read_access;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_pool_array_write_access {
    pub _dont_touch_that: [u8; 1usize],
}
#[test]
fn bindgen_test_layout_godot_pool_array_write_access() {
    assert_eq!(
        ::std::mem::size_of::<godot_pool_array_write_access>(),
        1usize,
        concat!("Size of: ", stringify!(godot_pool_array_write_access))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_pool_array_write_access>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_pool_array_write_access))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pool_array_write_access>()))._dont_touch_that as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pool_array_write_access),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
pub type godot_pool_byte_array_write_access = godot_pool_array_write_access;
pub type godot_pool_int_array_write_access = godot_pool_array_write_access;
pub type godot_pool_real_array_write_access = godot_pool_array_write_access;
pub type godot_pool_string_array_write_access = godot_pool_array_write_access;
pub type godot_pool_vector2_array_write_access = godot_pool_array_write_access;
pub type godot_pool_vector3_array_write_access = godot_pool_array_write_access;
pub type godot_pool_color_array_write_access = godot_pool_array_write_access;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_pool_byte_array {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_pool_byte_array() {
    assert_eq!(
        ::std::mem::size_of::<godot_pool_byte_array>(),
        8usize,
        concat!("Size of: ", stringify!(godot_pool_byte_array))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_pool_byte_array>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_pool_byte_array))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pool_byte_array>()))._dont_touch_that as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pool_byte_array),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_pool_int_array {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_pool_int_array() {
    assert_eq!(
        ::std::mem::size_of::<godot_pool_int_array>(),
        8usize,
        concat!("Size of: ", stringify!(godot_pool_int_array))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_pool_int_array>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_pool_int_array))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pool_int_array>()))._dont_touch_that as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pool_int_array),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_pool_real_array {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_pool_real_array() {
    assert_eq!(
        ::std::mem::size_of::<godot_pool_real_array>(),
        8usize,
        concat!("Size of: ", stringify!(godot_pool_real_array))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_pool_real_array>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_pool_real_array))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pool_real_array>()))._dont_touch_that as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pool_real_array),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_pool_string_array {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_pool_string_array() {
    assert_eq!(
        ::std::mem::size_of::<godot_pool_string_array>(),
        8usize,
        concat!("Size of: ", stringify!(godot_pool_string_array))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_pool_string_array>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_pool_string_array))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pool_string_array>()))._dont_touch_that as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pool_string_array),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_pool_vector2_array {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_pool_vector2_array() {
    assert_eq!(
        ::std::mem::size_of::<godot_pool_vector2_array>(),
        8usize,
        concat!("Size of: ", stringify!(godot_pool_vector2_array))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_pool_vector2_array>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_pool_vector2_array))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pool_vector2_array>()))._dont_touch_that as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pool_vector2_array),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_pool_vector3_array {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_pool_vector3_array() {
    assert_eq!(
        ::std::mem::size_of::<godot_pool_vector3_array>(),
        8usize,
        concat!("Size of: ", stringify!(godot_pool_vector3_array))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_pool_vector3_array>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_pool_vector3_array))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pool_vector3_array>()))._dont_touch_that as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pool_vector3_array),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_pool_color_array {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_pool_color_array() {
    assert_eq!(
        ::std::mem::size_of::<godot_pool_color_array>(),
        8usize,
        concat!("Size of: ", stringify!(godot_pool_color_array))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_pool_color_array>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_pool_color_array))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pool_color_array>()))._dont_touch_that as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pool_color_array),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_color {
    pub _dont_touch_that: [u8; 16usize],
}
#[test]
fn bindgen_test_layout_godot_color() {
    assert_eq!(
        ::std::mem::size_of::<godot_color>(),
        16usize,
        concat!("Size of: ", stringify!(godot_color))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_color>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_color))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_color>()))._dont_touch_that as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_color),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_vector2 {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_vector2() {
    assert_eq!(
        ::std::mem::size_of::<godot_vector2>(),
        8usize,
        concat!("Size of: ", stringify!(godot_vector2))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_vector2>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_vector2))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_vector2>()))._dont_touch_that as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_vector2),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_vector3 {
    pub _dont_touch_that: [u8; 12usize],
}
#[test]
fn bindgen_test_layout_godot_vector3() {
    assert_eq!(
        ::std::mem::size_of::<godot_vector3>(),
        12usize,
        concat!("Size of: ", stringify!(godot_vector3))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_vector3>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_vector3))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_vector3>()))._dont_touch_that as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_vector3),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct godot_basis {
    pub _dont_touch_that: [u8; 36usize],
}
#[test]
fn bindgen_test_layout_godot_basis() {
    assert_eq!(
        ::std::mem::size_of::<godot_basis>(),
        36usize,
        concat!("Size of: ", stringify!(godot_basis))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_basis>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_basis))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_basis>()))._dont_touch_that as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_basis),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
impl Default for godot_basis {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_quat {
    pub _dont_touch_that: [u8; 16usize],
}
#[test]
fn bindgen_test_layout_godot_quat() {
    assert_eq!(
        ::std::mem::size_of::<godot_quat>(),
        16usize,
        concat!("Size of: ", stringify!(godot_quat))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_quat>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_quat))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_quat>()))._dont_touch_that as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_quat),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
pub const godot_vector3_axis_GODOT_VECTOR3_AXIS_X: godot_vector3_axis = 0;
pub const godot_vector3_axis_GODOT_VECTOR3_AXIS_Y: godot_vector3_axis = 1;
pub const godot_vector3_axis_GODOT_VECTOR3_AXIS_Z: godot_vector3_axis = 2;
pub type godot_vector3_axis = libc::c_uint;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_variant {
    pub _dont_touch_that: [u8; 24usize],
}
#[test]
fn bindgen_test_layout_godot_variant() {
    assert_eq!(
        ::std::mem::size_of::<godot_variant>(),
        24usize,
        concat!("Size of: ", stringify!(godot_variant))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_variant>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_variant))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_variant>()))._dont_touch_that as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_variant),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
pub const godot_variant_type_GODOT_VARIANT_TYPE_NIL: godot_variant_type = 0;
pub const godot_variant_type_GODOT_VARIANT_TYPE_BOOL: godot_variant_type = 1;
pub const godot_variant_type_GODOT_VARIANT_TYPE_INT: godot_variant_type = 2;
pub const godot_variant_type_GODOT_VARIANT_TYPE_REAL: godot_variant_type = 3;
pub const godot_variant_type_GODOT_VARIANT_TYPE_STRING: godot_variant_type = 4;
pub const godot_variant_type_GODOT_VARIANT_TYPE_VECTOR2: godot_variant_type = 5;
pub const godot_variant_type_GODOT_VARIANT_TYPE_RECT2: godot_variant_type = 6;
pub const godot_variant_type_GODOT_VARIANT_TYPE_VECTOR3: godot_variant_type = 7;
pub const godot_variant_type_GODOT_VARIANT_TYPE_TRANSFORM2D: godot_variant_type = 8;
pub const godot_variant_type_GODOT_VARIANT_TYPE_PLANE: godot_variant_type = 9;
pub const godot_variant_type_GODOT_VARIANT_TYPE_QUAT: godot_variant_type = 10;
pub const godot_variant_type_GODOT_VARIANT_TYPE_AABB: godot_variant_type = 11;
pub const godot_variant_type_GODOT_VARIANT_TYPE_BASIS: godot_variant_type = 12;
pub const godot_variant_type_GODOT_VARIANT_TYPE_TRANSFORM: godot_variant_type = 13;
pub const godot_variant_type_GODOT_VARIANT_TYPE_COLOR: godot_variant_type = 14;
pub const godot_variant_type_GODOT_VARIANT_TYPE_NODE_PATH: godot_variant_type = 15;
pub const godot_variant_type_GODOT_VARIANT_TYPE_RID: godot_variant_type = 16;
pub const godot_variant_type_GODOT_VARIANT_TYPE_OBJECT: godot_variant_type = 17;
pub const godot_variant_type_GODOT_VARIANT_TYPE_DICTIONARY: godot_variant_type = 18;
pub const godot_variant_type_GODOT_VARIANT_TYPE_ARRAY: godot_variant_type = 19;
pub const godot_variant_type_GODOT_VARIANT_TYPE_POOL_BYTE_ARRAY: godot_variant_type = 20;
pub const godot_variant_type_GODOT_VARIANT_TYPE_POOL_INT_ARRAY: godot_variant_type = 21;
pub const godot_variant_type_GODOT_VARIANT_TYPE_POOL_REAL_ARRAY: godot_variant_type = 22;
pub const godot_variant_type_GODOT_VARIANT_TYPE_POOL_STRING_ARRAY: godot_variant_type = 23;
pub const godot_variant_type_GODOT_VARIANT_TYPE_POOL_VECTOR2_ARRAY: godot_variant_type = 24;
pub const godot_variant_type_GODOT_VARIANT_TYPE_POOL_VECTOR3_ARRAY: godot_variant_type = 25;
pub const godot_variant_type_GODOT_VARIANT_TYPE_POOL_COLOR_ARRAY: godot_variant_type = 26;
pub type godot_variant_type = libc::c_uint;
pub const godot_variant_call_error_error_GODOT_CALL_ERROR_CALL_OK: godot_variant_call_error_error =
    0;
pub const godot_variant_call_error_error_GODOT_CALL_ERROR_CALL_ERROR_INVALID_METHOD:
    godot_variant_call_error_error = 1;
pub const godot_variant_call_error_error_GODOT_CALL_ERROR_CALL_ERROR_INVALID_ARGUMENT:
    godot_variant_call_error_error = 2;
pub const godot_variant_call_error_error_GODOT_CALL_ERROR_CALL_ERROR_TOO_MANY_ARGUMENTS:
    godot_variant_call_error_error = 3;
pub const godot_variant_call_error_error_GODOT_CALL_ERROR_CALL_ERROR_TOO_FEW_ARGUMENTS:
    godot_variant_call_error_error = 4;
pub const godot_variant_call_error_error_GODOT_CALL_ERROR_CALL_ERROR_INSTANCE_IS_NULL:
    godot_variant_call_error_error = 5;
pub type godot_variant_call_error_error = libc::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_variant_call_error {
    pub error: godot_variant_call_error_error,
    pub argument: libc::c_int,
    pub expected: godot_variant_type,
}
#[test]
fn bindgen_test_layout_godot_variant_call_error() {
    assert_eq!(
        ::std::mem::size_of::<godot_variant_call_error>(),
        12usize,
        concat!("Size of: ", stringify!(godot_variant_call_error))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_variant_call_error>(),
        4usize,
        concat!("Alignment of ", stringify!(godot_variant_call_error))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_variant_call_error>())).error as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_variant_call_error),
            "::",
            stringify!(error)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_variant_call_error>())).argument as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_variant_call_error),
            "::",
            stringify!(argument)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_variant_call_error>())).expected as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_variant_call_error),
            "::",
            stringify!(expected)
        )
    );
}
impl Default for godot_variant_call_error {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const godot_variant_operator_GODOT_VARIANT_OP_EQUAL: godot_variant_operator = 0;
pub const godot_variant_operator_GODOT_VARIANT_OP_NOT_EQUAL: godot_variant_operator = 1;
pub const godot_variant_operator_GODOT_VARIANT_OP_LESS: godot_variant_operator = 2;
pub const godot_variant_operator_GODOT_VARIANT_OP_LESS_EQUAL: godot_variant_operator = 3;
pub const godot_variant_operator_GODOT_VARIANT_OP_GREATER: godot_variant_operator = 4;
pub const godot_variant_operator_GODOT_VARIANT_OP_GREATER_EQUAL: godot_variant_operator = 5;
pub const godot_variant_operator_GODOT_VARIANT_OP_ADD: godot_variant_operator = 6;
pub const godot_variant_operator_GODOT_VARIANT_OP_SUBTRACT: godot_variant_operator = 7;
pub const godot_variant_operator_GODOT_VARIANT_OP_MULTIPLY: godot_variant_operator = 8;
pub const godot_variant_operator_GODOT_VARIANT_OP_DIVIDE: godot_variant_operator = 9;
pub const godot_variant_operator_GODOT_VARIANT_OP_NEGATE: godot_variant_operator = 10;
pub const godot_variant_operator_GODOT_VARIANT_OP_POSITIVE: godot_variant_operator = 11;
pub const godot_variant_operator_GODOT_VARIANT_OP_MODULE: godot_variant_operator = 12;
pub const godot_variant_operator_GODOT_VARIANT_OP_STRING_CONCAT: godot_variant_operator = 13;
pub const godot_variant_operator_GODOT_VARIANT_OP_SHIFT_LEFT: godot_variant_operator = 14;
pub const godot_variant_operator_GODOT_VARIANT_OP_SHIFT_RIGHT: godot_variant_operator = 15;
pub const godot_variant_operator_GODOT_VARIANT_OP_BIT_AND: godot_variant_operator = 16;
pub const godot_variant_operator_GODOT_VARIANT_OP_BIT_OR: godot_variant_operator = 17;
pub const godot_variant_operator_GODOT_VARIANT_OP_BIT_XOR: godot_variant_operator = 18;
pub const godot_variant_operator_GODOT_VARIANT_OP_BIT_NEGATE: godot_variant_operator = 19;
pub const godot_variant_operator_GODOT_VARIANT_OP_AND: godot_variant_operator = 20;
pub const godot_variant_operator_GODOT_VARIANT_OP_OR: godot_variant_operator = 21;
pub const godot_variant_operator_GODOT_VARIANT_OP_XOR: godot_variant_operator = 22;
pub const godot_variant_operator_GODOT_VARIANT_OP_NOT: godot_variant_operator = 23;
pub const godot_variant_operator_GODOT_VARIANT_OP_IN: godot_variant_operator = 24;
pub const godot_variant_operator_GODOT_VARIANT_OP_MAX: godot_variant_operator = 25;
pub type godot_variant_operator = libc::c_uint;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_aabb {
    pub _dont_touch_that: [u8; 24usize],
}
#[test]
fn bindgen_test_layout_godot_aabb() {
    assert_eq!(
        ::std::mem::size_of::<godot_aabb>(),
        24usize,
        concat!("Size of: ", stringify!(godot_aabb))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_aabb>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_aabb))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_aabb>()))._dont_touch_that as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_aabb),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_plane {
    pub _dont_touch_that: [u8; 16usize],
}
#[test]
fn bindgen_test_layout_godot_plane() {
    assert_eq!(
        ::std::mem::size_of::<godot_plane>(),
        16usize,
        concat!("Size of: ", stringify!(godot_plane))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_plane>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_plane))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_plane>()))._dont_touch_that as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_plane),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_dictionary {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_dictionary() {
    assert_eq!(
        ::std::mem::size_of::<godot_dictionary>(),
        8usize,
        concat!("Size of: ", stringify!(godot_dictionary))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_dictionary>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_dictionary))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_dictionary>()))._dont_touch_that as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_dictionary),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_node_path {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_node_path() {
    assert_eq!(
        ::std::mem::size_of::<godot_node_path>(),
        8usize,
        concat!("Size of: ", stringify!(godot_node_path))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_node_path>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_node_path))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_node_path>()))._dont_touch_that as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_node_path),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_rect2 {
    pub _dont_touch_that: [u8; 16usize],
}
#[test]
fn bindgen_test_layout_godot_rect2() {
    assert_eq!(
        ::std::mem::size_of::<godot_rect2>(),
        16usize,
        concat!("Size of: ", stringify!(godot_rect2))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_rect2>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_rect2))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_rect2>()))._dont_touch_that as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_rect2),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_rid {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_rid() {
    assert_eq!(
        ::std::mem::size_of::<godot_rid>(),
        8usize,
        concat!("Size of: ", stringify!(godot_rid))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_rid>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_rid))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_rid>()))._dont_touch_that as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_rid),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct godot_transform {
    pub _dont_touch_that: [u8; 48usize],
}
#[test]
fn bindgen_test_layout_godot_transform() {
    assert_eq!(
        ::std::mem::size_of::<godot_transform>(),
        48usize,
        concat!("Size of: ", stringify!(godot_transform))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_transform>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_transform))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_transform>()))._dont_touch_that as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_transform),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
impl Default for godot_transform {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_transform2d {
    pub _dont_touch_that: [u8; 24usize],
}
#[test]
fn bindgen_test_layout_godot_transform2d() {
    assert_eq!(
        ::std::mem::size_of::<godot_transform2d>(),
        24usize,
        concat!("Size of: ", stringify!(godot_transform2d))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_transform2d>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_transform2d))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_transform2d>()))._dont_touch_that as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_transform2d),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_string_name {
    pub _dont_touch_that: [u8; 8usize],
}
#[test]
fn bindgen_test_layout_godot_string_name() {
    assert_eq!(
        ::std::mem::size_of::<godot_string_name>(),
        8usize,
        concat!("Size of: ", stringify!(godot_string_name))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_string_name>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_string_name))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_string_name>()))._dont_touch_that as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_string_name),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[doc = " MethodBind API"]
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_method_bind {
    pub _dont_touch_that: [u8; 1usize],
}
#[test]
fn bindgen_test_layout_godot_method_bind() {
    assert_eq!(
        ::std::mem::size_of::<godot_method_bind>(),
        1usize,
        concat!("Size of: ", stringify!(godot_method_bind))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_method_bind>(),
        1usize,
        concat!("Alignment of ", stringify!(godot_method_bind))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_method_bind>()))._dont_touch_that as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_method_bind),
            "::",
            stringify!(_dont_touch_that)
        )
    );
}
#[doc = " Script API"]
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_gdnative_api_version {
    pub major: libc::c_uint,
    pub minor: libc::c_uint,
}
#[test]
fn bindgen_test_layout_godot_gdnative_api_version() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_api_version>(),
        8usize,
        concat!("Size of: ", stringify!(godot_gdnative_api_version))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_api_version>(),
        4usize,
        concat!("Alignment of ", stringify!(godot_gdnative_api_version))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_api_version>())).major as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_api_version),
            "::",
            stringify!(major)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_api_version>())).minor as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_api_version),
            "::",
            stringify!(minor)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_gdnative_api_struct {
    pub type_: libc::c_uint,
    pub version: godot_gdnative_api_version,
    pub next: *const godot_gdnative_api_struct,
}
#[test]
fn bindgen_test_layout_godot_gdnative_api_struct() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_api_struct>(),
        24usize,
        concat!("Size of: ", stringify!(godot_gdnative_api_struct))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_api_struct>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_gdnative_api_struct))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_gdnative_api_struct>())).type_ as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_api_struct),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_api_struct>())).version as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_api_struct),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_gdnative_api_struct>())).next as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_api_struct),
            "::",
            stringify!(next)
        )
    );
}
impl Default for godot_gdnative_api_struct {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_gdnative_init_options {
    pub in_editor: godot_bool,
    pub core_api_hash: u64,
    pub editor_api_hash: u64,
    pub no_api_hash: u64,
    pub report_version_mismatch: ::std::option::Option<
        unsafe extern "C" fn(
            p_library: *const godot_object,
            p_what: *const libc::c_char,
            p_want: godot_gdnative_api_version,
            p_have: godot_gdnative_api_version,
        ),
    >,
    pub report_loading_error: ::std::option::Option<
        unsafe extern "C" fn(p_library: *const godot_object, p_what: *const libc::c_char),
    >,
    pub gd_native_library: *mut godot_object,
    pub api_struct: *const godot_gdnative_core_api_struct,
    pub active_library_path: *const godot_string,
}
#[test]
fn bindgen_test_layout_godot_gdnative_init_options() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_init_options>(),
        72usize,
        concat!("Size of: ", stringify!(godot_gdnative_init_options))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_init_options>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_gdnative_init_options))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_init_options>())).in_editor as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_init_options),
            "::",
            stringify!(in_editor)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_init_options>())).core_api_hash as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_init_options),
            "::",
            stringify!(core_api_hash)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_init_options>())).editor_api_hash as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_init_options),
            "::",
            stringify!(editor_api_hash)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_init_options>())).no_api_hash as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_init_options),
            "::",
            stringify!(no_api_hash)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_init_options>())).report_version_mismatch
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_init_options),
            "::",
            stringify!(report_version_mismatch)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_init_options>())).report_loading_error as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_init_options),
            "::",
            stringify!(report_loading_error)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_init_options>())).gd_native_library as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_init_options),
            "::",
            stringify!(gd_native_library)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_init_options>())).api_struct as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_init_options),
            "::",
            stringify!(api_struct)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_init_options>())).active_library_path as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_init_options),
            "::",
            stringify!(active_library_path)
        )
    );
}
impl Default for godot_gdnative_init_options {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_gdnative_terminate_options {
    pub in_editor: godot_bool,
}
#[test]
fn bindgen_test_layout_godot_gdnative_terminate_options() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_terminate_options>(),
        1usize,
        concat!("Size of: ", stringify!(godot_gdnative_terminate_options))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_terminate_options>(),
        1usize,
        concat!(
            "Alignment of ",
            stringify!(godot_gdnative_terminate_options)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_terminate_options>())).in_editor as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_terminate_options),
            "::",
            stringify!(in_editor)
        )
    );
}
pub type godot_class_constructor =
    ::std::option::Option<unsafe extern "C" fn() -> *mut godot_object>;
#[doc = " GDNative procedure types"]
pub type godot_gdnative_init_fn =
    ::std::option::Option<unsafe extern "C" fn(arg1: *mut godot_gdnative_init_options)>;
pub type godot_gdnative_terminate_fn =
    ::std::option::Option<unsafe extern "C" fn(arg1: *mut godot_gdnative_terminate_options)>;
pub type godot_gdnative_procedure_fn =
    ::std::option::Option<unsafe extern "C" fn(arg1: *mut godot_array) -> godot_variant>;
#[doc = " System Functions"]
pub type native_call_cb = ::std::option::Option<
    unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: *mut godot_array) -> godot_variant,
>;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_arvr_interface_gdnative {
    pub version: godot_gdnative_api_version,
    pub constructor:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut godot_object) -> *mut libc::c_void>,
    pub destructor: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void)>,
    pub get_name:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_string>,
    pub get_capabilities:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub get_anchor_detection_is_enabled:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_bool>,
    pub set_anchor_detection_is_enabled:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: godot_bool)>,
    pub is_stereo:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_bool>,
    pub is_initialized:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_bool>,
    pub initialize:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void) -> godot_bool>,
    pub uninitialize: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void)>,
    pub get_render_targetsize:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_vector2>,
    pub get_transform_for_eye: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            arg2: godot_int,
            arg3: *mut godot_transform,
        ) -> godot_transform,
    >,
    pub fill_projection_for_eye: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            arg2: *mut godot_real,
            arg3: godot_int,
            arg4: godot_real,
            arg5: godot_real,
            arg6: godot_real,
        ),
    >,
    pub commit_for_eye: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            arg2: godot_int,
            arg3: *mut godot_rid,
            arg4: *mut godot_rect2,
        ),
    >,
    pub process: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void)>,
    pub get_external_texture_for_eye: ::std::option::Option<
        unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: godot_int) -> godot_int,
    >,
    pub notification:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: godot_int)>,
    pub get_camera_feed_id:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void) -> godot_int>,
}
#[test]
fn bindgen_test_layout_godot_arvr_interface_gdnative() {
    assert_eq!(
        ::std::mem::size_of::<godot_arvr_interface_gdnative>(),
        152usize,
        concat!("Size of: ", stringify!(godot_arvr_interface_gdnative))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_arvr_interface_gdnative>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_arvr_interface_gdnative))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).version as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).constructor as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(constructor)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).destructor as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(destructor)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).get_name as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(get_name)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).get_capabilities as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(get_capabilities)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>()))
                .get_anchor_detection_is_enabled as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(get_anchor_detection_is_enabled)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>()))
                .set_anchor_detection_is_enabled as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(set_anchor_detection_is_enabled)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).is_stereo as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(is_stereo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).is_initialized as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(is_initialized)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).initialize as *const _
                as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(initialize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).uninitialize as *const _
                as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(uninitialize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).get_render_targetsize
                as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(get_render_targetsize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).get_transform_for_eye
                as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(get_transform_for_eye)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).fill_projection_for_eye
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(fill_projection_for_eye)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).commit_for_eye as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(commit_for_eye)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).process as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(process)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).get_external_texture_for_eye
                as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(get_external_texture_for_eye)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).notification as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(notification)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_arvr_interface_gdnative>())).get_camera_feed_id as *const _
                as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_arvr_interface_gdnative),
            "::",
            stringify!(get_camera_feed_id)
        )
    );
}
pub const godot_method_rpc_mode_GODOT_METHOD_RPC_MODE_DISABLED: godot_method_rpc_mode = 0;
pub const godot_method_rpc_mode_GODOT_METHOD_RPC_MODE_REMOTE: godot_method_rpc_mode = 1;
pub const godot_method_rpc_mode_GODOT_METHOD_RPC_MODE_MASTER: godot_method_rpc_mode = 2;
pub const godot_method_rpc_mode_GODOT_METHOD_RPC_MODE_PUPPET: godot_method_rpc_mode = 3;
pub const godot_method_rpc_mode_GODOT_METHOD_RPC_MODE_SLAVE: godot_method_rpc_mode = 3;
pub const godot_method_rpc_mode_GODOT_METHOD_RPC_MODE_REMOTESYNC: godot_method_rpc_mode = 4;
pub const godot_method_rpc_mode_GODOT_METHOD_RPC_MODE_SYNC: godot_method_rpc_mode = 4;
pub const godot_method_rpc_mode_GODOT_METHOD_RPC_MODE_MASTERSYNC: godot_method_rpc_mode = 5;
pub const godot_method_rpc_mode_GODOT_METHOD_RPC_MODE_PUPPETSYNC: godot_method_rpc_mode = 6;
pub type godot_method_rpc_mode = libc::c_uint;
#[doc = "< no hint provided."]
pub const godot_property_hint_GODOT_PROPERTY_HINT_NONE: godot_property_hint = 0;
#[doc = "< hint_text = \"min,max,step,slider; //slider is optional\""]
pub const godot_property_hint_GODOT_PROPERTY_HINT_RANGE: godot_property_hint = 1;
#[doc = "< hint_text = \"min,max,step\", exponential edit"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_EXP_RANGE: godot_property_hint = 2;
#[doc = "< hint_text= \"val1,val2,val3,etc\""]
pub const godot_property_hint_GODOT_PROPERTY_HINT_ENUM: godot_property_hint = 3;
pub const godot_property_hint_GODOT_PROPERTY_HINT_EXP_EASING: godot_property_hint = 4;
#[doc = "< hint_text= \"length\" (as integer)"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_LENGTH: godot_property_hint = 5;
pub const godot_property_hint_GODOT_PROPERTY_HINT_SPRITE_FRAME: godot_property_hint = 6;
#[doc = "< hint_text= \"length\" (as integer)"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_KEY_ACCEL: godot_property_hint = 7;
#[doc = "< hint_text= \"flag1,flag2,etc\" (as bit flags)"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_FLAGS: godot_property_hint = 8;
pub const godot_property_hint_GODOT_PROPERTY_HINT_LAYERS_2D_RENDER: godot_property_hint = 9;
pub const godot_property_hint_GODOT_PROPERTY_HINT_LAYERS_2D_PHYSICS: godot_property_hint = 10;
pub const godot_property_hint_GODOT_PROPERTY_HINT_LAYERS_3D_RENDER: godot_property_hint = 11;
pub const godot_property_hint_GODOT_PROPERTY_HINT_LAYERS_3D_PHYSICS: godot_property_hint = 12;
#[doc = "< a file path must be passed, hint_text (optionally) is a filter \"*.png,*.wav,*.doc,\""]
pub const godot_property_hint_GODOT_PROPERTY_HINT_FILE: godot_property_hint = 13;
#[doc = "< a directory path must be passed"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_DIR: godot_property_hint = 14;
#[doc = "< a file path must be passed, hint_text (optionally) is a filter \"*.png,*.wav,*.doc,\""]
pub const godot_property_hint_GODOT_PROPERTY_HINT_GLOBAL_FILE: godot_property_hint = 15;
#[doc = "< a directory path must be passed"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_GLOBAL_DIR: godot_property_hint = 16;
#[doc = "< a resource object type"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_RESOURCE_TYPE: godot_property_hint = 17;
#[doc = "< used for string properties that can contain multiple lines"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_MULTILINE_TEXT: godot_property_hint = 18;
#[doc = "< used to set a placeholder text for string properties"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_PLACEHOLDER_TEXT: godot_property_hint = 19;
#[doc = "< used for ignoring alpha component when editing a color"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_COLOR_NO_ALPHA: godot_property_hint = 20;
pub const godot_property_hint_GODOT_PROPERTY_HINT_IMAGE_COMPRESS_LOSSY: godot_property_hint = 21;
pub const godot_property_hint_GODOT_PROPERTY_HINT_IMAGE_COMPRESS_LOSSLESS: godot_property_hint = 22;
pub const godot_property_hint_GODOT_PROPERTY_HINT_OBJECT_ID: godot_property_hint = 23;
#[doc = "< a type string, the hint is the base type to choose"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_TYPE_STRING: godot_property_hint = 24;
#[doc = "< so something else can provide this (used in scripts)"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_NODE_PATH_TO_EDITED_NODE: godot_property_hint =
    25;
#[doc = "< a method of a type"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_METHOD_OF_VARIANT_TYPE: godot_property_hint = 26;
#[doc = "< a method of a base type"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_METHOD_OF_BASE_TYPE: godot_property_hint = 27;
#[doc = "< a method of an instance"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_METHOD_OF_INSTANCE: godot_property_hint = 28;
#[doc = "< a method of a script & base"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_METHOD_OF_SCRIPT: godot_property_hint = 29;
#[doc = "< a property of a type"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_PROPERTY_OF_VARIANT_TYPE: godot_property_hint =
    30;
#[doc = "< a property of a base type"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_PROPERTY_OF_BASE_TYPE: godot_property_hint = 31;
#[doc = "< a property of an instance"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_PROPERTY_OF_INSTANCE: godot_property_hint = 32;
#[doc = "< a property of a script & base"]
pub const godot_property_hint_GODOT_PROPERTY_HINT_PROPERTY_OF_SCRIPT: godot_property_hint = 33;
pub const godot_property_hint_GODOT_PROPERTY_HINT_MAX: godot_property_hint = 34;
pub type godot_property_hint = libc::c_uint;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_STORAGE: godot_property_usage_flags = 1;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_EDITOR: godot_property_usage_flags = 2;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_NETWORK: godot_property_usage_flags = 4;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_EDITOR_HELPER:
    godot_property_usage_flags = 8;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_CHECKABLE: godot_property_usage_flags =
    16;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_CHECKED: godot_property_usage_flags = 32;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_INTERNATIONALIZED:
    godot_property_usage_flags = 64;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_GROUP: godot_property_usage_flags = 128;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_CATEGORY: godot_property_usage_flags =
    256;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_STORE_IF_NONZERO:
    godot_property_usage_flags = 512;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_STORE_IF_NONONE:
    godot_property_usage_flags = 1024;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_NO_INSTANCE_STATE:
    godot_property_usage_flags = 2048;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_RESTART_IF_CHANGED:
    godot_property_usage_flags = 4096;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_SCRIPT_VARIABLE:
    godot_property_usage_flags = 8192;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_STORE_IF_NULL:
    godot_property_usage_flags = 16384;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_ANIMATE_AS_TRIGGER:
    godot_property_usage_flags = 32768;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_UPDATE_ALL_IF_MODIFIED:
    godot_property_usage_flags = 65536;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_DEFAULT: godot_property_usage_flags = 7;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_DEFAULT_INTL: godot_property_usage_flags =
    71;
pub const godot_property_usage_flags_GODOT_PROPERTY_USAGE_NOEDITOR: godot_property_usage_flags = 5;
pub type godot_property_usage_flags = libc::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_property_attributes {
    pub rset_type: godot_method_rpc_mode,
    pub type_: godot_int,
    pub hint: godot_property_hint,
    pub hint_string: godot_string,
    pub usage: godot_property_usage_flags,
    pub default_value: godot_variant,
}
#[test]
fn bindgen_test_layout_godot_property_attributes() {
    assert_eq!(
        ::std::mem::size_of::<godot_property_attributes>(),
        48usize,
        concat!("Size of: ", stringify!(godot_property_attributes))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_property_attributes>(),
        4usize,
        concat!("Alignment of ", stringify!(godot_property_attributes))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_property_attributes>())).rset_type as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_property_attributes),
            "::",
            stringify!(rset_type)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_property_attributes>())).type_ as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_property_attributes),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_property_attributes>())).hint as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_property_attributes),
            "::",
            stringify!(hint)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_property_attributes>())).hint_string as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_property_attributes),
            "::",
            stringify!(hint_string)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_property_attributes>())).usage as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_property_attributes),
            "::",
            stringify!(usage)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_property_attributes>())).default_value as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_property_attributes),
            "::",
            stringify!(default_value)
        )
    );
}
impl Default for godot_property_attributes {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_instance_create_func {
    pub create_func: ::std::option::Option<
        unsafe extern "C" fn(arg1: *mut godot_object, arg2: *mut libc::c_void) -> *mut libc::c_void,
    >,
    pub method_data: *mut libc::c_void,
    pub free_func: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void)>,
}
#[test]
fn bindgen_test_layout_godot_instance_create_func() {
    assert_eq!(
        ::std::mem::size_of::<godot_instance_create_func>(),
        24usize,
        concat!("Size of: ", stringify!(godot_instance_create_func))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_instance_create_func>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_instance_create_func))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_instance_create_func>())).create_func as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_create_func),
            "::",
            stringify!(create_func)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_instance_create_func>())).method_data as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_create_func),
            "::",
            stringify!(method_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_instance_create_func>())).free_func as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_create_func),
            "::",
            stringify!(free_func)
        )
    );
}
impl Default for godot_instance_create_func {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_instance_destroy_func {
    pub destroy_func: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut godot_object,
            arg2: *mut libc::c_void,
            arg3: *mut libc::c_void,
        ),
    >,
    pub method_data: *mut libc::c_void,
    pub free_func: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void)>,
}
#[test]
fn bindgen_test_layout_godot_instance_destroy_func() {
    assert_eq!(
        ::std::mem::size_of::<godot_instance_destroy_func>(),
        24usize,
        concat!("Size of: ", stringify!(godot_instance_destroy_func))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_instance_destroy_func>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_instance_destroy_func))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_instance_destroy_func>())).destroy_func as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_destroy_func),
            "::",
            stringify!(destroy_func)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_instance_destroy_func>())).method_data as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_destroy_func),
            "::",
            stringify!(method_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_instance_destroy_func>())).free_func as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_destroy_func),
            "::",
            stringify!(free_func)
        )
    );
}
impl Default for godot_instance_destroy_func {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_method_attributes {
    pub rpc_type: godot_method_rpc_mode,
}
#[test]
fn bindgen_test_layout_godot_method_attributes() {
    assert_eq!(
        ::std::mem::size_of::<godot_method_attributes>(),
        4usize,
        concat!("Size of: ", stringify!(godot_method_attributes))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_method_attributes>(),
        4usize,
        concat!("Alignment of ", stringify!(godot_method_attributes))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_method_attributes>())).rpc_type as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_method_attributes),
            "::",
            stringify!(rpc_type)
        )
    );
}
impl Default for godot_method_attributes {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_instance_method {
    pub method: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut godot_object,
            arg2: *mut libc::c_void,
            arg3: *mut libc::c_void,
            arg4: libc::c_int,
            arg5: *mut *mut godot_variant,
        ) -> godot_variant,
    >,
    pub method_data: *mut libc::c_void,
    pub free_func: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void)>,
}
#[test]
fn bindgen_test_layout_godot_instance_method() {
    assert_eq!(
        ::std::mem::size_of::<godot_instance_method>(),
        24usize,
        concat!("Size of: ", stringify!(godot_instance_method))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_instance_method>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_instance_method))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_instance_method>())).method as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_method),
            "::",
            stringify!(method)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_instance_method>())).method_data as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_method),
            "::",
            stringify!(method_data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_instance_method>())).free_func as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_method),
            "::",
            stringify!(free_func)
        )
    );
}
impl Default for godot_instance_method {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_property_set_func {
    pub set_func: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut godot_object,
            arg2: *mut libc::c_void,
            arg3: *mut libc::c_void,
            arg4: *mut godot_variant,
        ),
    >,
    pub method_data: *mut libc::c_void,
    pub free_func: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void)>,
}
#[test]
fn bindgen_test_layout_godot_property_set_func() {
    assert_eq!(
        ::std::mem::size_of::<godot_property_set_func>(),
        24usize,
        concat!("Size of: ", stringify!(godot_property_set_func))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_property_set_func>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_property_set_func))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_property_set_func>())).set_func as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_property_set_func),
            "::",
            stringify!(set_func)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_property_set_func>())).method_data as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_property_set_func),
            "::",
            stringify!(method_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_property_set_func>())).free_func as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_property_set_func),
            "::",
            stringify!(free_func)
        )
    );
}
impl Default for godot_property_set_func {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_property_get_func {
    pub get_func: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut godot_object,
            arg2: *mut libc::c_void,
            arg3: *mut libc::c_void,
        ) -> godot_variant,
    >,
    pub method_data: *mut libc::c_void,
    pub free_func: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void)>,
}
#[test]
fn bindgen_test_layout_godot_property_get_func() {
    assert_eq!(
        ::std::mem::size_of::<godot_property_get_func>(),
        24usize,
        concat!("Size of: ", stringify!(godot_property_get_func))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_property_get_func>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_property_get_func))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_property_get_func>())).get_func as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_property_get_func),
            "::",
            stringify!(get_func)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_property_get_func>())).method_data as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_property_get_func),
            "::",
            stringify!(method_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_property_get_func>())).free_func as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_property_get_func),
            "::",
            stringify!(free_func)
        )
    );
}
impl Default for godot_property_get_func {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_signal_argument {
    pub name: godot_string,
    pub type_: godot_int,
    pub hint: godot_property_hint,
    pub hint_string: godot_string,
    pub usage: godot_property_usage_flags,
    pub default_value: godot_variant,
}
#[test]
fn bindgen_test_layout_godot_signal_argument() {
    assert_eq!(
        ::std::mem::size_of::<godot_signal_argument>(),
        52usize,
        concat!("Size of: ", stringify!(godot_signal_argument))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_signal_argument>(),
        4usize,
        concat!("Alignment of ", stringify!(godot_signal_argument))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_signal_argument>())).name as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_signal_argument),
            "::",
            stringify!(name)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_signal_argument>())).type_ as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_signal_argument),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_signal_argument>())).hint as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_signal_argument),
            "::",
            stringify!(hint)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_signal_argument>())).hint_string as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_signal_argument),
            "::",
            stringify!(hint_string)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_signal_argument>())).usage as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_signal_argument),
            "::",
            stringify!(usage)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_signal_argument>())).default_value as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_signal_argument),
            "::",
            stringify!(default_value)
        )
    );
}
impl Default for godot_signal_argument {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_signal {
    pub name: godot_string,
    pub num_args: libc::c_int,
    pub args: *mut godot_signal_argument,
    pub num_default_args: libc::c_int,
    pub default_args: *mut godot_variant,
}
#[test]
fn bindgen_test_layout_godot_signal() {
    assert_eq!(
        ::std::mem::size_of::<godot_signal>(),
        40usize,
        concat!("Size of: ", stringify!(godot_signal))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_signal>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_signal))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_signal>())).name as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_signal),
            "::",
            stringify!(name)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_signal>())).num_args as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_signal),
            "::",
            stringify!(num_args)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_signal>())).args as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_signal),
            "::",
            stringify!(args)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_signal>())).num_default_args as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_signal),
            "::",
            stringify!(num_default_args)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_signal>())).default_args as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_signal),
            "::",
            stringify!(default_args)
        )
    );
}
impl Default for godot_signal {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_method_arg {
    pub name: godot_string,
    pub type_: godot_variant_type,
    pub hint: godot_property_hint,
    pub hint_string: godot_string,
}
#[test]
fn bindgen_test_layout_godot_method_arg() {
    assert_eq!(
        ::std::mem::size_of::<godot_method_arg>(),
        24usize,
        concat!("Size of: ", stringify!(godot_method_arg))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_method_arg>(),
        4usize,
        concat!("Alignment of ", stringify!(godot_method_arg))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_method_arg>())).name as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_method_arg),
            "::",
            stringify!(name)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_method_arg>())).type_ as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_method_arg),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_method_arg>())).hint as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_method_arg),
            "::",
            stringify!(hint)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_method_arg>())).hint_string as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_method_arg),
            "::",
            stringify!(hint_string)
        )
    );
}
impl Default for godot_method_arg {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_instance_binding_functions {
    pub alloc_instance_binding_data: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            arg2: *const libc::c_void,
            arg3: *mut godot_object,
        ) -> *mut libc::c_void,
    >,
    pub free_instance_binding_data: ::std::option::Option<
        unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: *mut libc::c_void),
    >,
    pub refcount_incremented_instance_binding: ::std::option::Option<
        unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: *mut godot_object),
    >,
    pub refcount_decremented_instance_binding: ::std::option::Option<
        unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: *mut godot_object) -> bool,
    >,
    pub data: *mut libc::c_void,
    pub free_func: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void)>,
}
#[test]
fn bindgen_test_layout_godot_instance_binding_functions() {
    assert_eq!(
        ::std::mem::size_of::<godot_instance_binding_functions>(),
        48usize,
        concat!("Size of: ", stringify!(godot_instance_binding_functions))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_instance_binding_functions>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_instance_binding_functions)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_instance_binding_functions>())).alloc_instance_binding_data
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_binding_functions),
            "::",
            stringify!(alloc_instance_binding_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_instance_binding_functions>())).free_instance_binding_data
                as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_binding_functions),
            "::",
            stringify!(free_instance_binding_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_instance_binding_functions>()))
                .refcount_incremented_instance_binding as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_binding_functions),
            "::",
            stringify!(refcount_incremented_instance_binding)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_instance_binding_functions>()))
                .refcount_decremented_instance_binding as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_binding_functions),
            "::",
            stringify!(refcount_decremented_instance_binding)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_instance_binding_functions>())).data as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_binding_functions),
            "::",
            stringify!(data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_instance_binding_functions>())).free_func as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_instance_binding_functions),
            "::",
            stringify!(free_func)
        )
    );
}
impl Default for godot_instance_binding_functions {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_net_stream_peer {
    pub version: godot_gdnative_api_version,
    pub data: *mut godot_object,
    pub get_data: ::std::option::Option<
        unsafe extern "C" fn(
            user: *mut libc::c_void,
            p_buffer: *mut u8,
            p_bytes: libc::c_int,
        ) -> godot_error,
    >,
    pub get_partial_data: ::std::option::Option<
        unsafe extern "C" fn(
            user: *mut libc::c_void,
            p_buffer: *mut u8,
            p_bytes: libc::c_int,
            r_received: *mut libc::c_int,
        ) -> godot_error,
    >,
    pub put_data: ::std::option::Option<
        unsafe extern "C" fn(
            user: *mut libc::c_void,
            p_data: *const u8,
            p_bytes: libc::c_int,
        ) -> godot_error,
    >,
    pub put_partial_data: ::std::option::Option<
        unsafe extern "C" fn(
            user: *mut libc::c_void,
            p_data: *const u8,
            p_bytes: libc::c_int,
            r_sent: *mut libc::c_int,
        ) -> godot_error,
    >,
    pub get_available_bytes:
        ::std::option::Option<unsafe extern "C" fn(user: *const libc::c_void) -> libc::c_int>,
    pub next: *mut libc::c_void,
}
#[test]
fn bindgen_test_layout_godot_net_stream_peer() {
    assert_eq!(
        ::std::mem::size_of::<godot_net_stream_peer>(),
        64usize,
        concat!("Size of: ", stringify!(godot_net_stream_peer))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_net_stream_peer>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_net_stream_peer))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_net_stream_peer>())).version as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_stream_peer),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_net_stream_peer>())).data as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_stream_peer),
            "::",
            stringify!(data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_net_stream_peer>())).get_data as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_stream_peer),
            "::",
            stringify!(get_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_stream_peer>())).get_partial_data as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_stream_peer),
            "::",
            stringify!(get_partial_data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_net_stream_peer>())).put_data as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_stream_peer),
            "::",
            stringify!(put_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_stream_peer>())).put_partial_data as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_stream_peer),
            "::",
            stringify!(put_partial_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_stream_peer>())).get_available_bytes as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_stream_peer),
            "::",
            stringify!(get_available_bytes)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_net_stream_peer>())).next as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_stream_peer),
            "::",
            stringify!(next)
        )
    );
}
impl Default for godot_net_stream_peer {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_net_packet_peer {
    pub version: godot_gdnative_api_version,
    pub data: *mut godot_object,
    pub get_packet: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            arg2: *mut *const u8,
            arg3: *mut libc::c_int,
        ) -> godot_error,
    >,
    pub put_packet: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            arg2: *const u8,
            arg3: libc::c_int,
        ) -> godot_error,
    >,
    pub get_available_packet_count:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub get_max_packet_size:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub next: *mut libc::c_void,
}
#[test]
fn bindgen_test_layout_godot_net_packet_peer() {
    assert_eq!(
        ::std::mem::size_of::<godot_net_packet_peer>(),
        56usize,
        concat!("Size of: ", stringify!(godot_net_packet_peer))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_net_packet_peer>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_net_packet_peer))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_net_packet_peer>())).version as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_packet_peer),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_net_packet_peer>())).data as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_packet_peer),
            "::",
            stringify!(data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_packet_peer>())).get_packet as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_packet_peer),
            "::",
            stringify!(get_packet)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_packet_peer>())).put_packet as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_packet_peer),
            "::",
            stringify!(put_packet)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_packet_peer>())).get_available_packet_count as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_packet_peer),
            "::",
            stringify!(get_available_packet_count)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_packet_peer>())).get_max_packet_size as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_packet_peer),
            "::",
            stringify!(get_max_packet_size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_net_packet_peer>())).next as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_packet_peer),
            "::",
            stringify!(next)
        )
    );
}
impl Default for godot_net_packet_peer {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_net_multiplayer_peer {
    pub version: godot_gdnative_api_version,
    pub data: *mut godot_object,
    pub get_packet: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            arg2: *mut *const u8,
            arg3: *mut libc::c_int,
        ) -> godot_error,
    >,
    pub put_packet: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            arg2: *const u8,
            arg3: libc::c_int,
        ) -> godot_error,
    >,
    pub get_available_packet_count:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub get_max_packet_size:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub set_transfer_mode:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: godot_int)>,
    pub get_transfer_mode:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub set_target_peer:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: godot_int)>,
    pub get_packet_peer:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub is_server:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_bool>,
    pub poll: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void)>,
    pub get_unique_id:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> i32>,
    pub set_refuse_new_connections:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: godot_bool)>,
    pub is_refusing_new_connections:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_bool>,
    pub get_connection_status:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub next: *mut libc::c_void,
}
#[test]
fn bindgen_test_layout_godot_net_multiplayer_peer() {
    assert_eq!(
        ::std::mem::size_of::<godot_net_multiplayer_peer>(),
        136usize,
        concat!("Size of: ", stringify!(godot_net_multiplayer_peer))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_net_multiplayer_peer>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_net_multiplayer_peer))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).version as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).data as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).get_packet as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(get_packet)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).put_packet as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(put_packet)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).get_available_packet_count
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(get_available_packet_count)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).get_max_packet_size as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(get_max_packet_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).set_transfer_mode as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(set_transfer_mode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).get_transfer_mode as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(get_transfer_mode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).set_target_peer as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(set_target_peer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).get_packet_peer as *const _
                as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(get_packet_peer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).is_server as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(is_server)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).poll as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(poll)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).get_unique_id as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(get_unique_id)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).set_refuse_new_connections
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(set_refuse_new_connections)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).is_refusing_new_connections
                as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(is_refusing_new_connections)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).get_connection_status as *const _
                as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(get_connection_status)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_net_multiplayer_peer>())).next as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_multiplayer_peer),
            "::",
            stringify!(next)
        )
    );
}
impl Default for godot_net_multiplayer_peer {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_net_webrtc_library {
    pub version: godot_gdnative_api_version,
    pub unregistered: ::std::option::Option<unsafe extern "C" fn()>,
    pub create_peer_connection:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut godot_object) -> godot_error>,
    pub next: *mut libc::c_void,
}
#[test]
fn bindgen_test_layout_godot_net_webrtc_library() {
    assert_eq!(
        ::std::mem::size_of::<godot_net_webrtc_library>(),
        32usize,
        concat!("Size of: ", stringify!(godot_net_webrtc_library))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_net_webrtc_library>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_net_webrtc_library))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_library>())).version as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_library),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_library>())).unregistered as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_library),
            "::",
            stringify!(unregistered)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_library>())).create_peer_connection as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_library),
            "::",
            stringify!(create_peer_connection)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<godot_net_webrtc_library>())).next as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_library),
            "::",
            stringify!(next)
        )
    );
}
impl Default for godot_net_webrtc_library {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_net_webrtc_peer_connection {
    pub version: godot_gdnative_api_version,
    pub data: *mut godot_object,
    pub get_connection_state:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub initialize: ::std::option::Option<
        unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: *const godot_dictionary) -> godot_error,
    >,
    pub create_data_channel: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            p_channel_name: *const libc::c_char,
            arg2: *const godot_dictionary,
        ) -> *mut godot_object,
    >,
    pub create_offer:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void) -> godot_error>,
    pub create_answer:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void) -> godot_error>,
    pub set_remote_description: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            arg2: *const libc::c_char,
            arg3: *const libc::c_char,
        ) -> godot_error,
    >,
    pub set_local_description: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            arg2: *const libc::c_char,
            arg3: *const libc::c_char,
        ) -> godot_error,
    >,
    pub add_ice_candidate: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            arg2: *const libc::c_char,
            arg3: libc::c_int,
            arg4: *const libc::c_char,
        ) -> godot_error,
    >,
    pub poll: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void) -> godot_error>,
    pub close: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void)>,
    pub next: *mut libc::c_void,
}
#[test]
fn bindgen_test_layout_godot_net_webrtc_peer_connection() {
    assert_eq!(
        ::std::mem::size_of::<godot_net_webrtc_peer_connection>(),
        104usize,
        concat!("Size of: ", stringify!(godot_net_webrtc_peer_connection))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_net_webrtc_peer_connection>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_net_webrtc_peer_connection)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_peer_connection>())).version as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_peer_connection),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_peer_connection>())).data as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_peer_connection),
            "::",
            stringify!(data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_peer_connection>())).get_connection_state
                as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_peer_connection),
            "::",
            stringify!(get_connection_state)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_peer_connection>())).initialize as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_peer_connection),
            "::",
            stringify!(initialize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_peer_connection>())).create_data_channel
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_peer_connection),
            "::",
            stringify!(create_data_channel)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_peer_connection>())).create_offer as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_peer_connection),
            "::",
            stringify!(create_offer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_peer_connection>())).create_answer as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_peer_connection),
            "::",
            stringify!(create_answer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_peer_connection>())).set_remote_description
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_peer_connection),
            "::",
            stringify!(set_remote_description)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_peer_connection>())).set_local_description
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_peer_connection),
            "::",
            stringify!(set_local_description)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_peer_connection>())).add_ice_candidate
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_peer_connection),
            "::",
            stringify!(add_ice_candidate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_peer_connection>())).poll as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_peer_connection),
            "::",
            stringify!(poll)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_peer_connection>())).close as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_peer_connection),
            "::",
            stringify!(close)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_peer_connection>())).next as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_peer_connection),
            "::",
            stringify!(next)
        )
    );
}
impl Default for godot_net_webrtc_peer_connection {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_net_webrtc_data_channel {
    pub version: godot_gdnative_api_version,
    pub data: *mut godot_object,
    pub get_packet: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            arg2: *mut *const u8,
            arg3: *mut libc::c_int,
        ) -> godot_error,
    >,
    pub put_packet: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            arg2: *const u8,
            arg3: libc::c_int,
        ) -> godot_error,
    >,
    pub get_available_packet_count:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub get_max_packet_size:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub set_write_mode:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: godot_int)>,
    pub get_write_mode:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub was_string_packet:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> bool>,
    pub get_ready_state:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub get_label: ::std::option::Option<
        unsafe extern "C" fn(arg1: *const libc::c_void) -> *const libc::c_char,
    >,
    pub is_ordered: ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> bool>,
    pub get_id:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> libc::c_int>,
    pub get_max_packet_life_time:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> libc::c_int>,
    pub get_max_retransmits:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> libc::c_int>,
    pub get_protocol: ::std::option::Option<
        unsafe extern "C" fn(arg1: *const libc::c_void) -> *const libc::c_char,
    >,
    pub is_negotiated:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> bool>,
    pub poll: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void) -> godot_error>,
    pub close: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void)>,
    pub next: *mut libc::c_void,
}
#[test]
fn bindgen_test_layout_godot_net_webrtc_data_channel() {
    assert_eq!(
        ::std::mem::size_of::<godot_net_webrtc_data_channel>(),
        160usize,
        concat!("Size of: ", stringify!(godot_net_webrtc_data_channel))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_net_webrtc_data_channel>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_net_webrtc_data_channel))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).version as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).data as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).get_packet as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(get_packet)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).put_packet as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(put_packet)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).get_available_packet_count
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(get_available_packet_count)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).get_max_packet_size
                as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(get_max_packet_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).set_write_mode as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(set_write_mode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).get_write_mode as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(get_write_mode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).was_string_packet as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(was_string_packet)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).get_ready_state as *const _
                as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(get_ready_state)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).get_label as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(get_label)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).is_ordered as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(is_ordered)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).get_id as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(get_id)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).get_max_packet_life_time
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(get_max_packet_life_time)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).get_max_retransmits
                as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(get_max_retransmits)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).get_protocol as *const _
                as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(get_protocol)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).is_negotiated as *const _
                as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(is_negotiated)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).poll as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(poll)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).close as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(close)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_net_webrtc_data_channel>())).next as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_net_webrtc_data_channel),
            "::",
            stringify!(next)
        )
    );
}
impl Default for godot_net_webrtc_data_channel {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type godot_pluginscript_instance_data = libc::c_void;
pub type godot_pluginscript_script_data = libc::c_void;
pub type godot_pluginscript_language_data = libc::c_void;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_pluginscript_instance_desc {
    pub init: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_script_data,
            p_owner: *mut godot_object,
        ) -> *mut godot_pluginscript_instance_data,
    >,
    pub finish:
        ::std::option::Option<unsafe extern "C" fn(p_data: *mut godot_pluginscript_instance_data)>,
    pub set_prop: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_instance_data,
            p_name: *const godot_string,
            p_value: *const godot_variant,
        ) -> godot_bool,
    >,
    pub get_prop: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_instance_data,
            p_name: *const godot_string,
            r_ret: *mut godot_variant,
        ) -> godot_bool,
    >,
    pub call_method: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_instance_data,
            p_method: *const godot_string_name,
            p_args: *mut *const godot_variant,
            p_argcount: libc::c_int,
            r_error: *mut godot_variant_call_error,
        ) -> godot_variant,
    >,
    pub notification: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_instance_data,
            p_notification: libc::c_int,
        ),
    >,
    pub get_rpc_mode: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_instance_data,
            p_method: *const godot_string,
        ) -> godot_method_rpc_mode,
    >,
    pub get_rset_mode: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_instance_data,
            p_variable: *const godot_string,
        ) -> godot_method_rpc_mode,
    >,
    pub refcount_incremented:
        ::std::option::Option<unsafe extern "C" fn(p_data: *mut godot_pluginscript_instance_data)>,
    pub refcount_decremented: ::std::option::Option<
        unsafe extern "C" fn(p_data: *mut godot_pluginscript_instance_data) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_godot_pluginscript_instance_desc() {
    assert_eq!(
        ::std::mem::size_of::<godot_pluginscript_instance_desc>(),
        80usize,
        concat!("Size of: ", stringify!(godot_pluginscript_instance_desc))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_pluginscript_instance_desc>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_pluginscript_instance_desc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_instance_desc>())).init as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_instance_desc),
            "::",
            stringify!(init)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_instance_desc>())).finish as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_instance_desc),
            "::",
            stringify!(finish)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_instance_desc>())).set_prop as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_instance_desc),
            "::",
            stringify!(set_prop)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_instance_desc>())).get_prop as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_instance_desc),
            "::",
            stringify!(get_prop)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_instance_desc>())).call_method as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_instance_desc),
            "::",
            stringify!(call_method)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_instance_desc>())).notification as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_instance_desc),
            "::",
            stringify!(notification)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_instance_desc>())).get_rpc_mode as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_instance_desc),
            "::",
            stringify!(get_rpc_mode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_instance_desc>())).get_rset_mode as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_instance_desc),
            "::",
            stringify!(get_rset_mode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_instance_desc>())).refcount_incremented
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_instance_desc),
            "::",
            stringify!(refcount_incremented)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_instance_desc>())).refcount_decremented
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_instance_desc),
            "::",
            stringify!(refcount_decremented)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_pluginscript_script_manifest {
    pub data: *mut godot_pluginscript_script_data,
    pub name: godot_string_name,
    pub is_tool: godot_bool,
    pub base: godot_string_name,
    pub member_lines: godot_dictionary,
    pub methods: godot_array,
    pub signals: godot_array,
    pub properties: godot_array,
}
#[test]
fn bindgen_test_layout_godot_pluginscript_script_manifest() {
    assert_eq!(
        ::std::mem::size_of::<godot_pluginscript_script_manifest>(),
        64usize,
        concat!("Size of: ", stringify!(godot_pluginscript_script_manifest))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_pluginscript_script_manifest>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_pluginscript_script_manifest)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_script_manifest>())).data as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_script_manifest),
            "::",
            stringify!(data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_script_manifest>())).name as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_script_manifest),
            "::",
            stringify!(name)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_script_manifest>())).is_tool as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_script_manifest),
            "::",
            stringify!(is_tool)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_script_manifest>())).base as *const _ as usize
        },
        17usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_script_manifest),
            "::",
            stringify!(base)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_script_manifest>())).member_lines as *const _
                as usize
        },
        25usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_script_manifest),
            "::",
            stringify!(member_lines)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_script_manifest>())).methods as *const _
                as usize
        },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_script_manifest),
            "::",
            stringify!(methods)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_script_manifest>())).signals as *const _
                as usize
        },
        41usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_script_manifest),
            "::",
            stringify!(signals)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_script_manifest>())).properties as *const _
                as usize
        },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_script_manifest),
            "::",
            stringify!(properties)
        )
    );
}
impl Default for godot_pluginscript_script_manifest {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_pluginscript_script_desc {
    pub init: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_path: *const godot_string,
            p_source: *const godot_string,
            r_error: *mut godot_error,
        ) -> godot_pluginscript_script_manifest,
    >,
    pub finish:
        ::std::option::Option<unsafe extern "C" fn(p_data: *mut godot_pluginscript_script_data)>,
    pub instance_desc: godot_pluginscript_instance_desc,
}
#[test]
fn bindgen_test_layout_godot_pluginscript_script_desc() {
    assert_eq!(
        ::std::mem::size_of::<godot_pluginscript_script_desc>(),
        96usize,
        concat!("Size of: ", stringify!(godot_pluginscript_script_desc))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_pluginscript_script_desc>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_pluginscript_script_desc))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_script_desc>())).init as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_script_desc),
            "::",
            stringify!(init)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_script_desc>())).finish as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_script_desc),
            "::",
            stringify!(finish)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_script_desc>())).instance_desc as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_script_desc),
            "::",
            stringify!(instance_desc)
        )
    );
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct godot_pluginscript_profiling_data {
    pub signature: godot_string_name,
    pub call_count: godot_int,
    pub total_time: godot_int,
    pub self_time: godot_int,
}
#[test]
fn bindgen_test_layout_godot_pluginscript_profiling_data() {
    assert_eq!(
        ::std::mem::size_of::<godot_pluginscript_profiling_data>(),
        20usize,
        concat!("Size of: ", stringify!(godot_pluginscript_profiling_data))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_pluginscript_profiling_data>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(godot_pluginscript_profiling_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_profiling_data>())).signature as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_profiling_data),
            "::",
            stringify!(signature)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_profiling_data>())).call_count as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_profiling_data),
            "::",
            stringify!(call_count)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_profiling_data>())).total_time as *const _
                as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_profiling_data),
            "::",
            stringify!(total_time)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_profiling_data>())).self_time as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_profiling_data),
            "::",
            stringify!(self_time)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_pluginscript_language_desc {
    pub name: *const libc::c_char,
    pub type_: *const libc::c_char,
    pub extension: *const libc::c_char,
    pub recognized_extensions: *mut *const libc::c_char,
    pub init:
        ::std::option::Option<unsafe extern "C" fn() -> *mut godot_pluginscript_language_data>,
    pub finish:
        ::std::option::Option<unsafe extern "C" fn(p_data: *mut godot_pluginscript_language_data)>,
    pub reserved_words: *mut *const libc::c_char,
    pub comment_delimiters: *mut *const libc::c_char,
    pub string_delimiters: *mut *const libc::c_char,
    pub has_named_classes: godot_bool,
    pub supports_builtin_mode: godot_bool,
    pub get_template_source_code: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_class_name: *const godot_string,
            p_base_class_name: *const godot_string,
        ) -> godot_string,
    >,
    pub validate: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_script: *const godot_string,
            r_line_error: *mut libc::c_int,
            r_col_error: *mut libc::c_int,
            r_test_error: *mut godot_string,
            p_path: *const godot_string,
            r_functions: *mut godot_pool_string_array,
        ) -> godot_bool,
    >,
    pub find_function: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_function: *const godot_string,
            p_code: *const godot_string,
        ) -> libc::c_int,
    >,
    pub make_function: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_class: *const godot_string,
            p_name: *const godot_string,
            p_args: *const godot_pool_string_array,
        ) -> godot_string,
    >,
    pub complete_code: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_code: *const godot_string,
            p_path: *const godot_string,
            p_owner: *mut godot_object,
            r_options: *mut godot_array,
            r_force: *mut godot_bool,
            r_call_hint: *mut godot_string,
        ) -> godot_error,
    >,
    pub auto_indent_code: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_code: *mut godot_string,
            p_from_line: libc::c_int,
            p_to_line: libc::c_int,
        ),
    >,
    pub add_global_constant: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_variable: *const godot_string,
            p_value: *const godot_variant,
        ),
    >,
    pub debug_get_error: ::std::option::Option<
        unsafe extern "C" fn(p_data: *mut godot_pluginscript_language_data) -> godot_string,
    >,
    pub debug_get_stack_level_count: ::std::option::Option<
        unsafe extern "C" fn(p_data: *mut godot_pluginscript_language_data) -> libc::c_int,
    >,
    pub debug_get_stack_level_line: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_level: libc::c_int,
        ) -> libc::c_int,
    >,
    pub debug_get_stack_level_function: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_level: libc::c_int,
        ) -> godot_string,
    >,
    pub debug_get_stack_level_source: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_level: libc::c_int,
        ) -> godot_string,
    >,
    pub debug_get_stack_level_locals: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_level: libc::c_int,
            p_locals: *mut godot_pool_string_array,
            p_values: *mut godot_array,
            p_max_subitems: libc::c_int,
            p_max_depth: libc::c_int,
        ),
    >,
    pub debug_get_stack_level_members: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_level: libc::c_int,
            p_members: *mut godot_pool_string_array,
            p_values: *mut godot_array,
            p_max_subitems: libc::c_int,
            p_max_depth: libc::c_int,
        ),
    >,
    pub debug_get_globals: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_locals: *mut godot_pool_string_array,
            p_values: *mut godot_array,
            p_max_subitems: libc::c_int,
            p_max_depth: libc::c_int,
        ),
    >,
    pub debug_parse_stack_level_expression: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            p_level: libc::c_int,
            p_expression: *const godot_string,
            p_max_subitems: libc::c_int,
            p_max_depth: libc::c_int,
        ) -> godot_string,
    >,
    pub get_public_functions: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            r_functions: *mut godot_array,
        ),
    >,
    pub get_public_constants: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            r_constants: *mut godot_dictionary,
        ),
    >,
    pub profiling_start:
        ::std::option::Option<unsafe extern "C" fn(p_data: *mut godot_pluginscript_language_data)>,
    pub profiling_stop:
        ::std::option::Option<unsafe extern "C" fn(p_data: *mut godot_pluginscript_language_data)>,
    pub profiling_get_accumulated_data: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            r_info: *mut godot_pluginscript_profiling_data,
            p_info_max: libc::c_int,
        ) -> libc::c_int,
    >,
    pub profiling_get_frame_data: ::std::option::Option<
        unsafe extern "C" fn(
            p_data: *mut godot_pluginscript_language_data,
            r_info: *mut godot_pluginscript_profiling_data,
            p_info_max: libc::c_int,
        ) -> libc::c_int,
    >,
    pub profiling_frame:
        ::std::option::Option<unsafe extern "C" fn(p_data: *mut godot_pluginscript_language_data)>,
    pub script_desc: godot_pluginscript_script_desc,
}
#[test]
fn bindgen_test_layout_godot_pluginscript_language_desc() {
    assert_eq!(
        ::std::mem::size_of::<godot_pluginscript_language_desc>(),
        360usize,
        concat!("Size of: ", stringify!(godot_pluginscript_language_desc))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_pluginscript_language_desc>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_pluginscript_language_desc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).name as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(name)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).type_ as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).extension as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(extension)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).recognized_extensions
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(recognized_extensions)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).init as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(init)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).finish as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(finish)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).reserved_words as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(reserved_words)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).comment_delimiters
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(comment_delimiters)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).string_delimiters
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(string_delimiters)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).has_named_classes
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(has_named_classes)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).supports_builtin_mode
                as *const _ as usize
        },
        73usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(supports_builtin_mode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).get_template_source_code
                as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(get_template_source_code)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).validate as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(validate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).find_function as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(find_function)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).make_function as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(make_function)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).complete_code as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(complete_code)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).auto_indent_code
                as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(auto_indent_code)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).add_global_constant
                as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(add_global_constant)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).debug_get_error as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(debug_get_error)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).debug_get_stack_level_count
                as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(debug_get_stack_level_count)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).debug_get_stack_level_line
                as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(debug_get_stack_level_line)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>()))
                .debug_get_stack_level_function as *const _ as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(debug_get_stack_level_function)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>()))
                .debug_get_stack_level_source as *const _ as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(debug_get_stack_level_source)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>()))
                .debug_get_stack_level_locals as *const _ as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(debug_get_stack_level_locals)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>()))
                .debug_get_stack_level_members as *const _ as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(debug_get_stack_level_members)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).debug_get_globals
                as *const _ as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(debug_get_globals)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>()))
                .debug_parse_stack_level_expression as *const _ as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(debug_parse_stack_level_expression)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).get_public_functions
                as *const _ as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(get_public_functions)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).get_public_constants
                as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(get_public_constants)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).profiling_start as *const _
                as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(profiling_start)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).profiling_stop as *const _
                as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(profiling_stop)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>()))
                .profiling_get_accumulated_data as *const _ as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(profiling_get_accumulated_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).profiling_get_frame_data
                as *const _ as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(profiling_get_frame_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).profiling_frame as *const _
                as usize
        },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(profiling_frame)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_pluginscript_language_desc>())).script_desc as *const _
                as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_pluginscript_language_desc),
            "::",
            stringify!(script_desc)
        )
    );
}
impl Default for godot_pluginscript_language_desc {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_videodecoder_interface_gdnative {
    pub version: godot_gdnative_api_version,
    pub next: *mut libc::c_void,
    pub constructor:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut godot_object) -> *mut libc::c_void>,
    pub destructor: ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void)>,
    pub get_plugin_name: ::std::option::Option<unsafe extern "C" fn() -> *const libc::c_char>,
    pub get_supported_extensions: ::std::option::Option<
        unsafe extern "C" fn(count: *mut libc::c_int) -> *mut *const libc::c_char,
    >,
    pub open_file: ::std::option::Option<
        unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: *mut libc::c_void) -> godot_bool,
    >,
    pub get_length:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_real>,
    pub get_playback_position:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_real>,
    pub seek:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: godot_real)>,
    pub set_audio_track:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: godot_int)>,
    pub update:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut libc::c_void, arg2: godot_real)>,
    pub get_videoframe: ::std::option::Option<
        unsafe extern "C" fn(arg1: *mut libc::c_void) -> *mut godot_pool_byte_array,
    >,
    pub get_audioframe: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut libc::c_void,
            arg2: *mut f32,
            arg3: libc::c_int,
        ) -> godot_int,
    >,
    pub get_channels:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub get_mix_rate:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_int>,
    pub get_texture_size:
        ::std::option::Option<unsafe extern "C" fn(arg1: *const libc::c_void) -> godot_vector2>,
}
#[test]
fn bindgen_test_layout_godot_videodecoder_interface_gdnative() {
    assert_eq!(
        ::std::mem::size_of::<godot_videodecoder_interface_gdnative>(),
        136usize,
        concat!(
            "Size of: ",
            stringify!(godot_videodecoder_interface_gdnative)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<godot_videodecoder_interface_gdnative>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_videodecoder_interface_gdnative)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).version as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).next as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).constructor
                as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(constructor)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).destructor as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(destructor)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).get_plugin_name
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(get_plugin_name)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>()))
                .get_supported_extensions as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(get_supported_extensions)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).open_file as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(open_file)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).get_length as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(get_length)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).get_playback_position
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(get_playback_position)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).seek as *const _
                as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(seek)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).set_audio_track
                as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(set_audio_track)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).update as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(update)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).get_videoframe
                as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(get_videoframe)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).get_audioframe
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(get_audioframe)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).get_channels
                as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(get_channels)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).get_mix_rate
                as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(get_mix_rate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_videodecoder_interface_gdnative>())).get_texture_size
                as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_videodecoder_interface_gdnative),
            "::",
            stringify!(get_texture_size)
        )
    );
}
impl Default for godot_videodecoder_interface_gdnative {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const GDNATIVE_API_TYPES_GDNATIVE_CORE: GDNATIVE_API_TYPES = 0;
pub const GDNATIVE_API_TYPES_GDNATIVE_EXT_NATIVESCRIPT: GDNATIVE_API_TYPES = 1;
pub const GDNATIVE_API_TYPES_GDNATIVE_EXT_PLUGINSCRIPT: GDNATIVE_API_TYPES = 2;
pub const GDNATIVE_API_TYPES_GDNATIVE_EXT_ANDROID: GDNATIVE_API_TYPES = 3;
pub const GDNATIVE_API_TYPES_GDNATIVE_EXT_ARVR: GDNATIVE_API_TYPES = 4;
pub const GDNATIVE_API_TYPES_GDNATIVE_EXT_VIDEODECODER: GDNATIVE_API_TYPES = 5;
pub const GDNATIVE_API_TYPES_GDNATIVE_EXT_NET: GDNATIVE_API_TYPES = 6;
pub type GDNATIVE_API_TYPES = libc::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_gdnative_ext_nativescript_1_1_api_struct {
    pub type_: libc::c_uint,
    pub version: godot_gdnative_api_version,
    pub next: *const godot_gdnative_api_struct,
    pub godot_nativescript_set_method_argument_information: ::std::option::Option<
        unsafe extern "C" fn(
            p_gdnative_handle: *mut libc::c_void,
            p_name: *const libc::c_char,
            p_function_name: *const libc::c_char,
            p_num_args: libc::c_int,
            p_args: *const godot_method_arg,
        ),
    >,
    pub godot_nativescript_set_class_documentation: ::std::option::Option<
        unsafe extern "C" fn(
            p_gdnative_handle: *mut libc::c_void,
            p_name: *const libc::c_char,
            p_documentation: godot_string,
        ),
    >,
    pub godot_nativescript_set_method_documentation: ::std::option::Option<
        unsafe extern "C" fn(
            p_gdnative_handle: *mut libc::c_void,
            p_name: *const libc::c_char,
            p_function_name: *const libc::c_char,
            p_documentation: godot_string,
        ),
    >,
    pub godot_nativescript_set_property_documentation: ::std::option::Option<
        unsafe extern "C" fn(
            p_gdnative_handle: *mut libc::c_void,
            p_name: *const libc::c_char,
            p_path: *const libc::c_char,
            p_documentation: godot_string,
        ),
    >,
    pub godot_nativescript_set_signal_documentation: ::std::option::Option<
        unsafe extern "C" fn(
            p_gdnative_handle: *mut libc::c_void,
            p_name: *const libc::c_char,
            p_signal_name: *const libc::c_char,
            p_documentation: godot_string,
        ),
    >,
    pub godot_nativescript_set_global_type_tag: ::std::option::Option<
        unsafe extern "C" fn(
            p_idx: libc::c_int,
            p_name: *const libc::c_char,
            p_type_tag: *const libc::c_void,
        ),
    >,
    pub godot_nativescript_get_global_type_tag: ::std::option::Option<
        unsafe extern "C" fn(
            p_idx: libc::c_int,
            p_name: *const libc::c_char,
        ) -> *const libc::c_void,
    >,
    pub godot_nativescript_set_type_tag: ::std::option::Option<
        unsafe extern "C" fn(
            p_gdnative_handle: *mut libc::c_void,
            p_name: *const libc::c_char,
            p_type_tag: *const libc::c_void,
        ),
    >,
    pub godot_nativescript_get_type_tag: ::std::option::Option<
        unsafe extern "C" fn(p_object: *const godot_object) -> *const libc::c_void,
    >,
    pub godot_nativescript_register_instance_binding_data_functions: ::std::option::Option<
        unsafe extern "C" fn(p_binding_functions: godot_instance_binding_functions) -> libc::c_int,
    >,
    pub godot_nativescript_unregister_instance_binding_data_functions:
        ::std::option::Option<unsafe extern "C" fn(p_idx: libc::c_int)>,
    pub godot_nativescript_get_instance_binding_data: ::std::option::Option<
        unsafe extern "C" fn(p_idx: libc::c_int, p_object: *mut godot_object) -> *mut libc::c_void,
    >,
    pub godot_nativescript_profiling_add_data:
        ::std::option::Option<unsafe extern "C" fn(p_signature: *const libc::c_char, p_line: u64)>,
}
#[test]
fn bindgen_test_layout_godot_gdnative_ext_nativescript_1_1_api_struct() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_ext_nativescript_1_1_api_struct>(),
        128usize,
        concat!(
            "Size of: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_ext_nativescript_1_1_api_struct>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>())).type_
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>())).version
                as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>())).next
                as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>()))
                .godot_nativescript_set_method_argument_information as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(godot_nativescript_set_method_argument_information)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>()))
                .godot_nativescript_set_class_documentation as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(godot_nativescript_set_class_documentation)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>()))
                .godot_nativescript_set_method_documentation as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(godot_nativescript_set_method_documentation)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>()))
                .godot_nativescript_set_property_documentation as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(godot_nativescript_set_property_documentation)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>()))
                .godot_nativescript_set_signal_documentation as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(godot_nativescript_set_signal_documentation)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>()))
                .godot_nativescript_set_global_type_tag as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(godot_nativescript_set_global_type_tag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>()))
                .godot_nativescript_get_global_type_tag as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(godot_nativescript_get_global_type_tag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>()))
                .godot_nativescript_set_type_tag as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(godot_nativescript_set_type_tag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>()))
                .godot_nativescript_get_type_tag as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(godot_nativescript_get_type_tag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>()))
                .godot_nativescript_register_instance_binding_data_functions as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(godot_nativescript_register_instance_binding_data_functions)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>()))
                .godot_nativescript_unregister_instance_binding_data_functions
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(godot_nativescript_unregister_instance_binding_data_functions)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>()))
                .godot_nativescript_get_instance_binding_data as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(godot_nativescript_get_instance_binding_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_1_1_api_struct>()))
                .godot_nativescript_profiling_add_data as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_1_1_api_struct),
            "::",
            stringify!(godot_nativescript_profiling_add_data)
        )
    );
}
impl Default for godot_gdnative_ext_nativescript_1_1_api_struct {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_gdnative_ext_nativescript_api_struct {
    pub type_: libc::c_uint,
    pub version: godot_gdnative_api_version,
    pub next: *const godot_gdnative_api_struct,
    pub godot_nativescript_register_class: ::std::option::Option<
        unsafe extern "C" fn(
            p_gdnative_handle: *mut libc::c_void,
            p_name: *const libc::c_char,
            p_base: *const libc::c_char,
            p_create_func: godot_instance_create_func,
            p_destroy_func: godot_instance_destroy_func,
        ),
    >,
    pub godot_nativescript_register_tool_class: ::std::option::Option<
        unsafe extern "C" fn(
            p_gdnative_handle: *mut libc::c_void,
            p_name: *const libc::c_char,
            p_base: *const libc::c_char,
            p_create_func: godot_instance_create_func,
            p_destroy_func: godot_instance_destroy_func,
        ),
    >,
    pub godot_nativescript_register_method: ::std::option::Option<
        unsafe extern "C" fn(
            p_gdnative_handle: *mut libc::c_void,
            p_name: *const libc::c_char,
            p_function_name: *const libc::c_char,
            p_attr: godot_method_attributes,
            p_method: godot_instance_method,
        ),
    >,
    pub godot_nativescript_register_property: ::std::option::Option<
        unsafe extern "C" fn(
            p_gdnative_handle: *mut libc::c_void,
            p_name: *const libc::c_char,
            p_path: *const libc::c_char,
            p_attr: *mut godot_property_attributes,
            p_set_func: godot_property_set_func,
            p_get_func: godot_property_get_func,
        ),
    >,
    pub godot_nativescript_register_signal: ::std::option::Option<
        unsafe extern "C" fn(
            p_gdnative_handle: *mut libc::c_void,
            p_name: *const libc::c_char,
            p_signal: *const godot_signal,
        ),
    >,
    pub godot_nativescript_get_userdata: ::std::option::Option<
        unsafe extern "C" fn(p_instance: *mut godot_object) -> *mut libc::c_void,
    >,
}
#[test]
fn bindgen_test_layout_godot_gdnative_ext_nativescript_api_struct() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_ext_nativescript_api_struct>(),
        72usize,
        concat!(
            "Size of: ",
            stringify!(godot_gdnative_ext_nativescript_api_struct)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_ext_nativescript_api_struct>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_gdnative_ext_nativescript_api_struct)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_api_struct>())).type_ as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_api_struct),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_api_struct>())).version
                as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_api_struct),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_api_struct>())).next as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_api_struct),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_api_struct>()))
                .godot_nativescript_register_class as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_api_struct),
            "::",
            stringify!(godot_nativescript_register_class)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_api_struct>()))
                .godot_nativescript_register_tool_class as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_api_struct),
            "::",
            stringify!(godot_nativescript_register_tool_class)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_api_struct>()))
                .godot_nativescript_register_method as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_api_struct),
            "::",
            stringify!(godot_nativescript_register_method)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_api_struct>()))
                .godot_nativescript_register_property as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_api_struct),
            "::",
            stringify!(godot_nativescript_register_property)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_api_struct>()))
                .godot_nativescript_register_signal as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_api_struct),
            "::",
            stringify!(godot_nativescript_register_signal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_nativescript_api_struct>()))
                .godot_nativescript_get_userdata as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_nativescript_api_struct),
            "::",
            stringify!(godot_nativescript_get_userdata)
        )
    );
}
impl Default for godot_gdnative_ext_nativescript_api_struct {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_gdnative_ext_pluginscript_api_struct {
    pub type_: libc::c_uint,
    pub version: godot_gdnative_api_version,
    pub next: *const godot_gdnative_api_struct,
    pub godot_pluginscript_register_language: ::std::option::Option<
        unsafe extern "C" fn(language_desc: *const godot_pluginscript_language_desc),
    >,
}
#[test]
fn bindgen_test_layout_godot_gdnative_ext_pluginscript_api_struct() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_ext_pluginscript_api_struct>(),
        32usize,
        concat!(
            "Size of: ",
            stringify!(godot_gdnative_ext_pluginscript_api_struct)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_ext_pluginscript_api_struct>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_gdnative_ext_pluginscript_api_struct)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_pluginscript_api_struct>())).type_ as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_pluginscript_api_struct),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_pluginscript_api_struct>())).version
                as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_pluginscript_api_struct),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_pluginscript_api_struct>())).next as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_pluginscript_api_struct),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_pluginscript_api_struct>()))
                .godot_pluginscript_register_language as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_pluginscript_api_struct),
            "::",
            stringify!(godot_pluginscript_register_language)
        )
    );
}
impl Default for godot_gdnative_ext_pluginscript_api_struct {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_gdnative_ext_android_api_struct {
    pub type_: libc::c_uint,
    pub version: godot_gdnative_api_version,
    pub next: *const godot_gdnative_api_struct,
    pub godot_android_get_env: ::std::option::Option<unsafe extern "C" fn() -> *mut libc::c_void>,
    pub godot_android_get_activity:
        ::std::option::Option<unsafe extern "C" fn() -> *mut libc::c_void>,
    pub godot_android_get_surface:
        ::std::option::Option<unsafe extern "C" fn() -> *mut libc::c_void>,
    pub godot_android_is_activity_resumed: ::std::option::Option<unsafe extern "C" fn() -> bool>,
}
#[test]
fn bindgen_test_layout_godot_gdnative_ext_android_api_struct() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_ext_android_api_struct>(),
        56usize,
        concat!(
            "Size of: ",
            stringify!(godot_gdnative_ext_android_api_struct)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_ext_android_api_struct>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_gdnative_ext_android_api_struct)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_android_api_struct>())).type_ as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_android_api_struct),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_android_api_struct>())).version as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_android_api_struct),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_android_api_struct>())).next as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_android_api_struct),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_android_api_struct>())).godot_android_get_env
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_android_api_struct),
            "::",
            stringify!(godot_android_get_env)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_android_api_struct>()))
                .godot_android_get_activity as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_android_api_struct),
            "::",
            stringify!(godot_android_get_activity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_android_api_struct>()))
                .godot_android_get_surface as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_android_api_struct),
            "::",
            stringify!(godot_android_get_surface)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_android_api_struct>()))
                .godot_android_is_activity_resumed as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_android_api_struct),
            "::",
            stringify!(godot_android_is_activity_resumed)
        )
    );
}
impl Default for godot_gdnative_ext_android_api_struct {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_gdnative_ext_arvr_api_struct {
    pub type_: libc::c_uint,
    pub version: godot_gdnative_api_version,
    pub next: *const godot_gdnative_api_struct,
    pub godot_arvr_register_interface: ::std::option::Option<
        unsafe extern "C" fn(p_interface: *const godot_arvr_interface_gdnative),
    >,
    pub godot_arvr_get_worldscale: ::std::option::Option<unsafe extern "C" fn() -> godot_real>,
    pub godot_arvr_get_reference_frame:
        ::std::option::Option<unsafe extern "C" fn() -> godot_transform>,
    pub godot_arvr_blit: ::std::option::Option<
        unsafe extern "C" fn(
            p_eye: libc::c_int,
            p_render_target: *mut godot_rid,
            p_screen_rect: *mut godot_rect2,
        ),
    >,
    pub godot_arvr_get_texid:
        ::std::option::Option<unsafe extern "C" fn(p_render_target: *mut godot_rid) -> godot_int>,
    pub godot_arvr_add_controller: ::std::option::Option<
        unsafe extern "C" fn(
            p_device_name: *mut libc::c_char,
            p_hand: godot_int,
            p_tracks_orientation: godot_bool,
            p_tracks_position: godot_bool,
        ) -> godot_int,
    >,
    pub godot_arvr_remove_controller:
        ::std::option::Option<unsafe extern "C" fn(p_controller_id: godot_int)>,
    pub godot_arvr_set_controller_transform: ::std::option::Option<
        unsafe extern "C" fn(
            p_controller_id: godot_int,
            p_transform: *mut godot_transform,
            p_tracks_orientation: godot_bool,
            p_tracks_position: godot_bool,
        ),
    >,
    pub godot_arvr_set_controller_button: ::std::option::Option<
        unsafe extern "C" fn(
            p_controller_id: godot_int,
            p_button: godot_int,
            p_is_pressed: godot_bool,
        ),
    >,
    pub godot_arvr_set_controller_axis: ::std::option::Option<
        unsafe extern "C" fn(
            p_controller_id: godot_int,
            p_exis: godot_int,
            p_value: godot_real,
            p_can_be_negative: godot_bool,
        ),
    >,
    pub godot_arvr_get_controller_rumble:
        ::std::option::Option<unsafe extern "C" fn(p_controller_id: godot_int) -> godot_real>,
}
#[test]
fn bindgen_test_layout_godot_gdnative_ext_arvr_api_struct() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_ext_arvr_api_struct>(),
        112usize,
        concat!("Size of: ", stringify!(godot_gdnative_ext_arvr_api_struct))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_ext_arvr_api_struct>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_gdnative_ext_arvr_api_struct)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_arvr_api_struct>())).type_ as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_arvr_api_struct),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_arvr_api_struct>())).version as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_arvr_api_struct),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_arvr_api_struct>())).next as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_arvr_api_struct),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_arvr_api_struct>()))
                .godot_arvr_register_interface as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_arvr_api_struct),
            "::",
            stringify!(godot_arvr_register_interface)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_arvr_api_struct>())).godot_arvr_get_worldscale
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_arvr_api_struct),
            "::",
            stringify!(godot_arvr_get_worldscale)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_arvr_api_struct>()))
                .godot_arvr_get_reference_frame as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_arvr_api_struct),
            "::",
            stringify!(godot_arvr_get_reference_frame)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_arvr_api_struct>())).godot_arvr_blit
                as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_arvr_api_struct),
            "::",
            stringify!(godot_arvr_blit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_arvr_api_struct>())).godot_arvr_get_texid
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_arvr_api_struct),
            "::",
            stringify!(godot_arvr_get_texid)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_arvr_api_struct>())).godot_arvr_add_controller
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_arvr_api_struct),
            "::",
            stringify!(godot_arvr_add_controller)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_arvr_api_struct>()))
                .godot_arvr_remove_controller as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_arvr_api_struct),
            "::",
            stringify!(godot_arvr_remove_controller)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_arvr_api_struct>()))
                .godot_arvr_set_controller_transform as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_arvr_api_struct),
            "::",
            stringify!(godot_arvr_set_controller_transform)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_arvr_api_struct>()))
                .godot_arvr_set_controller_button as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_arvr_api_struct),
            "::",
            stringify!(godot_arvr_set_controller_button)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_arvr_api_struct>()))
                .godot_arvr_set_controller_axis as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_arvr_api_struct),
            "::",
            stringify!(godot_arvr_set_controller_axis)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_arvr_api_struct>()))
                .godot_arvr_get_controller_rumble as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_arvr_api_struct),
            "::",
            stringify!(godot_arvr_get_controller_rumble)
        )
    );
}
impl Default for godot_gdnative_ext_arvr_api_struct {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_gdnative_ext_videodecoder_api_struct {
    pub type_: libc::c_uint,
    pub version: godot_gdnative_api_version,
    pub next: *const godot_gdnative_api_struct,
    pub godot_videodecoder_file_read: ::std::option::Option<
        unsafe extern "C" fn(
            file_ptr: *mut libc::c_void,
            buf: *mut u8,
            buf_size: libc::c_int,
        ) -> godot_int,
    >,
    pub godot_videodecoder_file_seek: ::std::option::Option<
        unsafe extern "C" fn(file_ptr: *mut libc::c_void, pos: i64, whence: libc::c_int) -> i64,
    >,
    pub godot_videodecoder_register_decoder: ::std::option::Option<
        unsafe extern "C" fn(p_interface: *const godot_videodecoder_interface_gdnative),
    >,
}
#[test]
fn bindgen_test_layout_godot_gdnative_ext_videodecoder_api_struct() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_ext_videodecoder_api_struct>(),
        48usize,
        concat!(
            "Size of: ",
            stringify!(godot_gdnative_ext_videodecoder_api_struct)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_ext_videodecoder_api_struct>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_gdnative_ext_videodecoder_api_struct)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_videodecoder_api_struct>())).type_ as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_videodecoder_api_struct),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_videodecoder_api_struct>())).version
                as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_videodecoder_api_struct),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_videodecoder_api_struct>())).next as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_videodecoder_api_struct),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_videodecoder_api_struct>()))
                .godot_videodecoder_file_read as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_videodecoder_api_struct),
            "::",
            stringify!(godot_videodecoder_file_read)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_videodecoder_api_struct>()))
                .godot_videodecoder_file_seek as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_videodecoder_api_struct),
            "::",
            stringify!(godot_videodecoder_file_seek)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_videodecoder_api_struct>()))
                .godot_videodecoder_register_decoder as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_videodecoder_api_struct),
            "::",
            stringify!(godot_videodecoder_register_decoder)
        )
    );
}
impl Default for godot_gdnative_ext_videodecoder_api_struct {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_gdnative_ext_net_3_2_api_struct {
    pub type_: libc::c_uint,
    pub version: godot_gdnative_api_version,
    pub next: *const godot_gdnative_api_struct,
    pub godot_net_set_webrtc_library: ::std::option::Option<
        unsafe extern "C" fn(p_library: *const godot_net_webrtc_library) -> godot_error,
    >,
    pub godot_net_bind_webrtc_peer_connection: ::std::option::Option<
        unsafe extern "C" fn(
            p_obj: *mut godot_object,
            p_interface: *const godot_net_webrtc_peer_connection,
        ),
    >,
    pub godot_net_bind_webrtc_data_channel: ::std::option::Option<
        unsafe extern "C" fn(
            p_obj: *mut godot_object,
            p_interface: *const godot_net_webrtc_data_channel,
        ),
    >,
}
#[test]
fn bindgen_test_layout_godot_gdnative_ext_net_3_2_api_struct() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_ext_net_3_2_api_struct>(),
        48usize,
        concat!(
            "Size of: ",
            stringify!(godot_gdnative_ext_net_3_2_api_struct)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_ext_net_3_2_api_struct>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_gdnative_ext_net_3_2_api_struct)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_net_3_2_api_struct>())).type_ as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_net_3_2_api_struct),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_net_3_2_api_struct>())).version as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_net_3_2_api_struct),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_net_3_2_api_struct>())).next as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_net_3_2_api_struct),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_net_3_2_api_struct>()))
                .godot_net_set_webrtc_library as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_net_3_2_api_struct),
            "::",
            stringify!(godot_net_set_webrtc_library)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_net_3_2_api_struct>()))
                .godot_net_bind_webrtc_peer_connection as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_net_3_2_api_struct),
            "::",
            stringify!(godot_net_bind_webrtc_peer_connection)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_net_3_2_api_struct>()))
                .godot_net_bind_webrtc_data_channel as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_net_3_2_api_struct),
            "::",
            stringify!(godot_net_bind_webrtc_data_channel)
        )
    );
}
impl Default for godot_gdnative_ext_net_3_2_api_struct {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_gdnative_ext_net_api_struct {
    pub type_: libc::c_uint,
    pub version: godot_gdnative_api_version,
    pub next: *const godot_gdnative_api_struct,
    pub godot_net_bind_stream_peer: ::std::option::Option<
        unsafe extern "C" fn(p_obj: *mut godot_object, p_interface: *const godot_net_stream_peer),
    >,
    pub godot_net_bind_packet_peer: ::std::option::Option<
        unsafe extern "C" fn(p_obj: *mut godot_object, p_interface: *const godot_net_packet_peer),
    >,
    pub godot_net_bind_multiplayer_peer: ::std::option::Option<
        unsafe extern "C" fn(
            p_obj: *mut godot_object,
            p_interface: *const godot_net_multiplayer_peer,
        ),
    >,
}
#[test]
fn bindgen_test_layout_godot_gdnative_ext_net_api_struct() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_ext_net_api_struct>(),
        48usize,
        concat!("Size of: ", stringify!(godot_gdnative_ext_net_api_struct))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_ext_net_api_struct>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_gdnative_ext_net_api_struct)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_net_api_struct>())).type_ as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_net_api_struct),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_net_api_struct>())).version as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_net_api_struct),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_net_api_struct>())).next as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_net_api_struct),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_net_api_struct>())).godot_net_bind_stream_peer
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_net_api_struct),
            "::",
            stringify!(godot_net_bind_stream_peer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_net_api_struct>())).godot_net_bind_packet_peer
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_net_api_struct),
            "::",
            stringify!(godot_net_bind_packet_peer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_ext_net_api_struct>()))
                .godot_net_bind_multiplayer_peer as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_ext_net_api_struct),
            "::",
            stringify!(godot_net_bind_multiplayer_peer)
        )
    );
}
impl Default for godot_gdnative_ext_net_api_struct {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_gdnative_core_1_2_api_struct {
    pub type_: libc::c_uint,
    pub version: godot_gdnative_api_version,
    pub next: *const godot_gdnative_api_struct,
    pub godot_dictionary_duplicate: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_dictionary,
            p_deep: godot_bool,
        ) -> godot_dictionary,
    >,
    pub godot_vector3_move_toward: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_to: *const godot_vector3,
            p_delta: godot_real,
        ) -> godot_vector3,
    >,
    pub godot_vector2_move_toward: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_to: *const godot_vector2,
            p_delta: godot_real,
        ) -> godot_vector2,
    >,
    pub godot_string_count: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_what: godot_string,
            p_from: godot_int,
            p_to: godot_int,
        ) -> godot_int,
    >,
    pub godot_string_countn: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_what: godot_string,
            p_from: godot_int,
            p_to: godot_int,
        ) -> godot_int,
    >,
    pub godot_vector3_direction_to: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_to: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_vector2_direction_to: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_to: *const godot_vector2,
        ) -> godot_vector2,
    >,
    pub godot_array_slice: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_array,
            p_begin: godot_int,
            p_end: godot_int,
            p_step: godot_int,
            p_deep: godot_bool,
        ) -> godot_array,
    >,
    pub godot_pool_byte_array_empty: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_byte_array) -> godot_bool,
    >,
    pub godot_pool_int_array_empty: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_int_array) -> godot_bool,
    >,
    pub godot_pool_real_array_empty: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_real_array) -> godot_bool,
    >,
    pub godot_pool_string_array_empty: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_string_array) -> godot_bool,
    >,
    pub godot_pool_vector2_array_empty: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_vector2_array) -> godot_bool,
    >,
    pub godot_pool_vector3_array_empty: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_vector3_array) -> godot_bool,
    >,
    pub godot_pool_color_array_empty: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_color_array) -> godot_bool,
    >,
    pub godot_get_class_tag: ::std::option::Option<
        unsafe extern "C" fn(p_class: *const godot_string_name) -> *mut libc::c_void,
    >,
    pub godot_object_cast_to: ::std::option::Option<
        unsafe extern "C" fn(
            p_object: *const godot_object,
            p_class_tag: *mut libc::c_void,
        ) -> *mut godot_object,
    >,
    pub godot_instance_from_id:
        ::std::option::Option<unsafe extern "C" fn(p_instance_id: godot_int) -> *mut godot_object>,
}
#[test]
fn bindgen_test_layout_godot_gdnative_core_1_2_api_struct() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_core_1_2_api_struct>(),
        168usize,
        concat!("Size of: ", stringify!(godot_gdnative_core_1_2_api_struct))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_core_1_2_api_struct>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_gdnative_core_1_2_api_struct)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>())).type_ as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>())).version as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>())).next as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>()))
                .godot_dictionary_duplicate as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_dictionary_duplicate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>())).godot_vector3_move_toward
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_vector3_move_toward)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>())).godot_vector2_move_toward
                as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_vector2_move_toward)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>())).godot_string_count
                as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_string_count)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>())).godot_string_countn
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_string_countn)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>()))
                .godot_vector3_direction_to as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_vector3_direction_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>()))
                .godot_vector2_direction_to as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_vector2_direction_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>())).godot_array_slice
                as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_array_slice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>()))
                .godot_pool_byte_array_empty as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_pool_byte_array_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>()))
                .godot_pool_int_array_empty as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_pool_int_array_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>()))
                .godot_pool_real_array_empty as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_pool_real_array_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>()))
                .godot_pool_string_array_empty as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_pool_string_array_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>()))
                .godot_pool_vector2_array_empty as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>()))
                .godot_pool_vector3_array_empty as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>()))
                .godot_pool_color_array_empty as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_pool_color_array_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>())).godot_get_class_tag
                as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_get_class_tag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>())).godot_object_cast_to
                as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_object_cast_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_2_api_struct>())).godot_instance_from_id
                as *const _ as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_2_api_struct),
            "::",
            stringify!(godot_instance_from_id)
        )
    );
}
impl Default for godot_gdnative_core_1_2_api_struct {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_gdnative_core_1_1_api_struct {
    pub type_: libc::c_uint,
    pub version: godot_gdnative_api_version,
    pub next: *const godot_gdnative_api_struct,
    pub godot_color_to_abgr32:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_int>,
    pub godot_color_to_abgr64:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_int>,
    pub godot_color_to_argb64:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_int>,
    pub godot_color_to_rgba64:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_int>,
    pub godot_color_darkened: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_color, p_amount: godot_real) -> godot_color,
    >,
    pub godot_color_from_hsv: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_color,
            p_h: godot_real,
            p_s: godot_real,
            p_v: godot_real,
            p_a: godot_real,
        ) -> godot_color,
    >,
    pub godot_color_lightened: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_color, p_amount: godot_real) -> godot_color,
    >,
    pub godot_array_duplicate: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_array, p_deep: godot_bool) -> godot_array,
    >,
    pub godot_array_max:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_array) -> godot_variant>,
    pub godot_array_min:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_array) -> godot_variant>,
    pub godot_array_shuffle: ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_array)>,
    pub godot_basis_slerp: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_basis,
            p_b: *const godot_basis,
            p_t: godot_real,
        ) -> godot_basis,
    >,
    pub godot_dictionary_get_with_default: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_dictionary,
            p_key: *const godot_variant,
            p_default: *const godot_variant,
        ) -> godot_variant,
    >,
    pub godot_dictionary_erase_with_return: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_dictionary, p_key: *const godot_variant) -> bool,
    >,
    pub godot_node_path_get_as_property_path: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_node_path) -> godot_node_path,
    >,
    pub godot_quat_set_axis_angle: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_quat,
            p_axis: *const godot_vector3,
            p_angle: godot_real,
        ),
    >,
    pub godot_rect2_grow_individual: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_rect2,
            p_left: godot_real,
            p_top: godot_real,
            p_right: godot_real,
            p_bottom: godot_real,
        ) -> godot_rect2,
    >,
    pub godot_rect2_grow_margin: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_rect2,
            p_margin: godot_int,
            p_by: godot_real,
        ) -> godot_rect2,
    >,
    pub godot_rect2_abs:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_rect2) -> godot_rect2>,
    pub godot_string_dedent:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_trim_prefix: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_prefix: *const godot_string,
        ) -> godot_string,
    >,
    pub godot_string_trim_suffix: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_suffix: *const godot_string,
        ) -> godot_string,
    >,
    pub godot_string_rstrip: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_chars: *const godot_string,
        ) -> godot_string,
    >,
    pub godot_string_rsplit: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_divisor: *const godot_string,
            p_allow_empty: godot_bool,
            p_maxsplit: godot_int,
        ) -> godot_pool_string_array,
    >,
    pub godot_basis_get_quat:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_basis) -> godot_quat>,
    pub godot_basis_set_quat: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_basis, p_quat: *const godot_quat),
    >,
    pub godot_basis_set_axis_angle_scale: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_basis,
            p_axis: *const godot_vector3,
            p_phi: godot_real,
            p_scale: *const godot_vector3,
        ),
    >,
    pub godot_basis_set_euler_scale: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_basis,
            p_euler: *const godot_vector3,
            p_scale: *const godot_vector3,
        ),
    >,
    pub godot_basis_set_quat_scale: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_basis,
            p_quat: *const godot_quat,
            p_scale: *const godot_vector3,
        ),
    >,
    pub godot_is_instance_valid:
        ::std::option::Option<unsafe extern "C" fn(p_object: *const godot_object) -> bool>,
    pub godot_quat_new_with_basis: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_quat, p_basis: *const godot_basis),
    >,
    pub godot_quat_new_with_euler: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_quat, p_euler: *const godot_vector3),
    >,
    pub godot_transform_new_with_quat: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_transform, p_quat: *const godot_quat),
    >,
    pub godot_variant_get_operator_name:
        ::std::option::Option<unsafe extern "C" fn(p_op: godot_variant_operator) -> godot_string>,
    pub godot_variant_evaluate: ::std::option::Option<
        unsafe extern "C" fn(
            p_op: godot_variant_operator,
            p_a: *const godot_variant,
            p_b: *const godot_variant,
            r_ret: *mut godot_variant,
            r_valid: *mut godot_bool,
        ),
    >,
}
#[test]
fn bindgen_test_layout_godot_gdnative_core_1_1_api_struct() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_core_1_1_api_struct>(),
        304usize,
        concat!("Size of: ", stringify!(godot_gdnative_core_1_1_api_struct))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_core_1_1_api_struct>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(godot_gdnative_core_1_1_api_struct)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).type_ as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).version as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).next as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_color_to_abgr32
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_color_to_abgr32)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_color_to_abgr64
                as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_color_to_abgr64)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_color_to_argb64
                as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_color_to_argb64)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_color_to_rgba64
                as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_color_to_rgba64)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_color_darkened
                as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_color_darkened)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_color_from_hsv
                as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_color_from_hsv)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_color_lightened
                as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_color_lightened)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_array_duplicate
                as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_array_duplicate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_array_max
                as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_array_max)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_array_min
                as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_array_min)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_array_shuffle
                as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_array_shuffle)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_basis_slerp
                as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_basis_slerp)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>()))
                .godot_dictionary_get_with_default as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_dictionary_get_with_default)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>()))
                .godot_dictionary_erase_with_return as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_dictionary_erase_with_return)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>()))
                .godot_node_path_get_as_property_path as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_node_path_get_as_property_path)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_quat_set_axis_angle
                as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_quat_set_axis_angle)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>()))
                .godot_rect2_grow_individual as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_rect2_grow_individual)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_rect2_grow_margin
                as *const _ as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_rect2_grow_margin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_rect2_abs
                as *const _ as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_rect2_abs)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_string_dedent
                as *const _ as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_string_dedent)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_string_trim_prefix
                as *const _ as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_string_trim_prefix)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_string_trim_suffix
                as *const _ as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_string_trim_suffix)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_string_rstrip
                as *const _ as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_string_rstrip)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_string_rsplit
                as *const _ as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_string_rsplit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_basis_get_quat
                as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_basis_get_quat)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_basis_set_quat
                as *const _ as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_basis_set_quat)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>()))
                .godot_basis_set_axis_angle_scale as *const _ as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_basis_set_axis_angle_scale)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>()))
                .godot_basis_set_euler_scale as *const _ as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_basis_set_euler_scale)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>()))
                .godot_basis_set_quat_scale as *const _ as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_basis_set_quat_scale)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_is_instance_valid
                as *const _ as usize
        },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_is_instance_valid)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_quat_new_with_basis
                as *const _ as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_quat_new_with_basis)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_quat_new_with_euler
                as *const _ as usize
        },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_quat_new_with_euler)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>()))
                .godot_transform_new_with_quat as *const _ as usize
        },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_transform_new_with_quat)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>()))
                .godot_variant_get_operator_name as *const _ as usize
        },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_variant_get_operator_name)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_1_1_api_struct>())).godot_variant_evaluate
                as *const _ as usize
        },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_1_1_api_struct),
            "::",
            stringify!(godot_variant_evaluate)
        )
    );
}
impl Default for godot_gdnative_core_1_1_api_struct {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct godot_gdnative_core_api_struct {
    pub type_: libc::c_uint,
    pub version: godot_gdnative_api_version,
    pub next: *const godot_gdnative_api_struct,
    pub num_extensions: libc::c_uint,
    pub extensions: *mut *const godot_gdnative_api_struct,
    pub godot_color_new_rgba: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_color,
            p_r: godot_real,
            p_g: godot_real,
            p_b: godot_real,
            p_a: godot_real,
        ),
    >,
    pub godot_color_new_rgb: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_color,
            p_r: godot_real,
            p_g: godot_real,
            p_b: godot_real,
        ),
    >,
    pub godot_color_get_r:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_real>,
    pub godot_color_set_r:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_color, r: godot_real)>,
    pub godot_color_get_g:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_real>,
    pub godot_color_set_g:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_color, g: godot_real)>,
    pub godot_color_get_b:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_real>,
    pub godot_color_set_b:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_color, b: godot_real)>,
    pub godot_color_get_a:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_real>,
    pub godot_color_set_a:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_color, a: godot_real)>,
    pub godot_color_get_h:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_real>,
    pub godot_color_get_s:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_real>,
    pub godot_color_get_v:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_real>,
    pub godot_color_as_string:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_string>,
    pub godot_color_to_rgba32:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_int>,
    pub godot_color_to_argb32:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_int>,
    pub godot_color_gray:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_real>,
    pub godot_color_inverted:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_color>,
    pub godot_color_contrasted:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_color) -> godot_color>,
    pub godot_color_linear_interpolate: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_color,
            p_b: *const godot_color,
            p_t: godot_real,
        ) -> godot_color,
    >,
    pub godot_color_blend: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_color, p_over: *const godot_color) -> godot_color,
    >,
    pub godot_color_to_html: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_color, p_with_alpha: godot_bool) -> godot_string,
    >,
    pub godot_color_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_color, p_b: *const godot_color) -> godot_bool,
    >,
    pub godot_color_operator_less: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_color, p_b: *const godot_color) -> godot_bool,
    >,
    pub godot_vector2_new: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_vector2, p_x: godot_real, p_y: godot_real),
    >,
    pub godot_vector2_as_string:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector2) -> godot_string>,
    pub godot_vector2_normalized:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector2) -> godot_vector2>,
    pub godot_vector2_length:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector2) -> godot_real>,
    pub godot_vector2_angle:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector2) -> godot_real>,
    pub godot_vector2_length_squared:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector2) -> godot_real>,
    pub godot_vector2_is_normalized:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector2) -> godot_bool>,
    pub godot_vector2_distance_to: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_to: *const godot_vector2,
        ) -> godot_real,
    >,
    pub godot_vector2_distance_squared_to: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_to: *const godot_vector2,
        ) -> godot_real,
    >,
    pub godot_vector2_angle_to: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_to: *const godot_vector2,
        ) -> godot_real,
    >,
    pub godot_vector2_angle_to_point: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_to: *const godot_vector2,
        ) -> godot_real,
    >,
    pub godot_vector2_linear_interpolate: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_b: *const godot_vector2,
            p_t: godot_real,
        ) -> godot_vector2,
    >,
    pub godot_vector2_cubic_interpolate: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_b: *const godot_vector2,
            p_pre_a: *const godot_vector2,
            p_post_b: *const godot_vector2,
            p_t: godot_real,
        ) -> godot_vector2,
    >,
    pub godot_vector2_rotated: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_vector2, p_phi: godot_real) -> godot_vector2,
    >,
    pub godot_vector2_tangent:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector2) -> godot_vector2>,
    pub godot_vector2_floor:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector2) -> godot_vector2>,
    pub godot_vector2_snapped: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_by: *const godot_vector2,
        ) -> godot_vector2,
    >,
    pub godot_vector2_aspect:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector2) -> godot_real>,
    pub godot_vector2_dot: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_with: *const godot_vector2,
        ) -> godot_real,
    >,
    pub godot_vector2_slide: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_n: *const godot_vector2,
        ) -> godot_vector2,
    >,
    pub godot_vector2_bounce: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_n: *const godot_vector2,
        ) -> godot_vector2,
    >,
    pub godot_vector2_reflect: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_n: *const godot_vector2,
        ) -> godot_vector2,
    >,
    pub godot_vector2_abs:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector2) -> godot_vector2>,
    pub godot_vector2_clamped: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_vector2, p_length: godot_real) -> godot_vector2,
    >,
    pub godot_vector2_operator_add: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_b: *const godot_vector2,
        ) -> godot_vector2,
    >,
    pub godot_vector2_operator_subtract: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_b: *const godot_vector2,
        ) -> godot_vector2,
    >,
    pub godot_vector2_operator_multiply_vector: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_b: *const godot_vector2,
        ) -> godot_vector2,
    >,
    pub godot_vector2_operator_multiply_scalar: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_vector2, p_b: godot_real) -> godot_vector2,
    >,
    pub godot_vector2_operator_divide_vector: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector2,
            p_b: *const godot_vector2,
        ) -> godot_vector2,
    >,
    pub godot_vector2_operator_divide_scalar: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_vector2, p_b: godot_real) -> godot_vector2,
    >,
    pub godot_vector2_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_vector2, p_b: *const godot_vector2) -> godot_bool,
    >,
    pub godot_vector2_operator_less: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_vector2, p_b: *const godot_vector2) -> godot_bool,
    >,
    pub godot_vector2_operator_neg:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector2) -> godot_vector2>,
    pub godot_vector2_set_x:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_vector2, p_x: godot_real)>,
    pub godot_vector2_set_y:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_vector2, p_y: godot_real)>,
    pub godot_vector2_get_x:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector2) -> godot_real>,
    pub godot_vector2_get_y:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector2) -> godot_real>,
    pub godot_quat_new: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_quat,
            p_x: godot_real,
            p_y: godot_real,
            p_z: godot_real,
            p_w: godot_real,
        ),
    >,
    pub godot_quat_new_with_axis_angle: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_quat,
            p_axis: *const godot_vector3,
            p_angle: godot_real,
        ),
    >,
    pub godot_quat_get_x:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_quat) -> godot_real>,
    pub godot_quat_set_x:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_quat, val: godot_real)>,
    pub godot_quat_get_y:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_quat) -> godot_real>,
    pub godot_quat_set_y:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_quat, val: godot_real)>,
    pub godot_quat_get_z:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_quat) -> godot_real>,
    pub godot_quat_set_z:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_quat, val: godot_real)>,
    pub godot_quat_get_w:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_quat) -> godot_real>,
    pub godot_quat_set_w:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_quat, val: godot_real)>,
    pub godot_quat_as_string:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_quat) -> godot_string>,
    pub godot_quat_length:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_quat) -> godot_real>,
    pub godot_quat_length_squared:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_quat) -> godot_real>,
    pub godot_quat_normalized:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_quat) -> godot_quat>,
    pub godot_quat_is_normalized:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_quat) -> godot_bool>,
    pub godot_quat_inverse:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_quat) -> godot_quat>,
    pub godot_quat_dot: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_quat, p_b: *const godot_quat) -> godot_real,
    >,
    pub godot_quat_xform: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_quat, p_v: *const godot_vector3) -> godot_vector3,
    >,
    pub godot_quat_slerp: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_quat,
            p_b: *const godot_quat,
            p_t: godot_real,
        ) -> godot_quat,
    >,
    pub godot_quat_slerpni: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_quat,
            p_b: *const godot_quat,
            p_t: godot_real,
        ) -> godot_quat,
    >,
    pub godot_quat_cubic_slerp: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_quat,
            p_b: *const godot_quat,
            p_pre_a: *const godot_quat,
            p_post_b: *const godot_quat,
            p_t: godot_real,
        ) -> godot_quat,
    >,
    pub godot_quat_operator_multiply: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_quat, p_b: godot_real) -> godot_quat,
    >,
    pub godot_quat_operator_add: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_quat, p_b: *const godot_quat) -> godot_quat,
    >,
    pub godot_quat_operator_subtract: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_quat, p_b: *const godot_quat) -> godot_quat,
    >,
    pub godot_quat_operator_divide: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_quat, p_b: godot_real) -> godot_quat,
    >,
    pub godot_quat_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_quat, p_b: *const godot_quat) -> godot_bool,
    >,
    pub godot_quat_operator_neg:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_quat) -> godot_quat>,
    pub godot_basis_new_with_rows: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_basis,
            p_x_axis: *const godot_vector3,
            p_y_axis: *const godot_vector3,
            p_z_axis: *const godot_vector3,
        ),
    >,
    pub godot_basis_new_with_axis_and_angle: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_basis,
            p_axis: *const godot_vector3,
            p_phi: godot_real,
        ),
    >,
    pub godot_basis_new_with_euler: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_basis, p_euler: *const godot_vector3),
    >,
    pub godot_basis_as_string:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_basis) -> godot_string>,
    pub godot_basis_inverse:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_basis) -> godot_basis>,
    pub godot_basis_transposed:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_basis) -> godot_basis>,
    pub godot_basis_orthonormalized:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_basis) -> godot_basis>,
    pub godot_basis_determinant:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_basis) -> godot_real>,
    pub godot_basis_rotated: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_basis,
            p_axis: *const godot_vector3,
            p_phi: godot_real,
        ) -> godot_basis,
    >,
    pub godot_basis_scaled: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_basis,
            p_scale: *const godot_vector3,
        ) -> godot_basis,
    >,
    pub godot_basis_get_scale:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_basis) -> godot_vector3>,
    pub godot_basis_get_euler:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_basis) -> godot_vector3>,
    pub godot_basis_tdotx: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_basis,
            p_with: *const godot_vector3,
        ) -> godot_real,
    >,
    pub godot_basis_tdoty: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_basis,
            p_with: *const godot_vector3,
        ) -> godot_real,
    >,
    pub godot_basis_tdotz: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_basis,
            p_with: *const godot_vector3,
        ) -> godot_real,
    >,
    pub godot_basis_xform: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_basis,
            p_v: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_basis_xform_inv: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_basis,
            p_v: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_basis_get_orthogonal_index:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_basis) -> godot_int>,
    pub godot_basis_new: ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_basis)>,
    pub godot_basis_new_with_euler_quat: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_basis, p_euler: *const godot_quat),
    >,
    pub godot_basis_get_elements: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_basis, p_elements: *mut godot_vector3),
    >,
    pub godot_basis_get_axis: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_basis, p_axis: godot_int) -> godot_vector3,
    >,
    pub godot_basis_set_axis: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_basis,
            p_axis: godot_int,
            p_value: *const godot_vector3,
        ),
    >,
    pub godot_basis_get_row: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_basis, p_row: godot_int) -> godot_vector3,
    >,
    pub godot_basis_set_row: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_basis,
            p_row: godot_int,
            p_value: *const godot_vector3,
        ),
    >,
    pub godot_basis_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_basis, p_b: *const godot_basis) -> godot_bool,
    >,
    pub godot_basis_operator_add: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_basis, p_b: *const godot_basis) -> godot_basis,
    >,
    pub godot_basis_operator_subtract: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_basis, p_b: *const godot_basis) -> godot_basis,
    >,
    pub godot_basis_operator_multiply_vector: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_basis, p_b: *const godot_basis) -> godot_basis,
    >,
    pub godot_basis_operator_multiply_scalar: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_basis, p_b: godot_real) -> godot_basis,
    >,
    pub godot_vector3_new: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_vector3,
            p_x: godot_real,
            p_y: godot_real,
            p_z: godot_real,
        ),
    >,
    pub godot_vector3_as_string:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector3) -> godot_string>,
    pub godot_vector3_min_axis:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector3) -> godot_int>,
    pub godot_vector3_max_axis:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector3) -> godot_int>,
    pub godot_vector3_length:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector3) -> godot_real>,
    pub godot_vector3_length_squared:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector3) -> godot_real>,
    pub godot_vector3_is_normalized:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector3) -> godot_bool>,
    pub godot_vector3_normalized:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector3) -> godot_vector3>,
    pub godot_vector3_inverse:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector3) -> godot_vector3>,
    pub godot_vector3_snapped: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_by: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_vector3_rotated: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_axis: *const godot_vector3,
            p_phi: godot_real,
        ) -> godot_vector3,
    >,
    pub godot_vector3_linear_interpolate: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_b: *const godot_vector3,
            p_t: godot_real,
        ) -> godot_vector3,
    >,
    pub godot_vector3_cubic_interpolate: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_b: *const godot_vector3,
            p_pre_a: *const godot_vector3,
            p_post_b: *const godot_vector3,
            p_t: godot_real,
        ) -> godot_vector3,
    >,
    pub godot_vector3_dot: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_vector3, p_b: *const godot_vector3) -> godot_real,
    >,
    pub godot_vector3_cross: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_b: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_vector3_outer: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_b: *const godot_vector3,
        ) -> godot_basis,
    >,
    pub godot_vector3_to_diagonal_matrix:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector3) -> godot_basis>,
    pub godot_vector3_abs:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector3) -> godot_vector3>,
    pub godot_vector3_floor:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector3) -> godot_vector3>,
    pub godot_vector3_ceil:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector3) -> godot_vector3>,
    pub godot_vector3_distance_to: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_vector3, p_b: *const godot_vector3) -> godot_real,
    >,
    pub godot_vector3_distance_squared_to: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_vector3, p_b: *const godot_vector3) -> godot_real,
    >,
    pub godot_vector3_angle_to: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_to: *const godot_vector3,
        ) -> godot_real,
    >,
    pub godot_vector3_slide: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_n: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_vector3_bounce: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_n: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_vector3_reflect: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_n: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_vector3_operator_add: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_b: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_vector3_operator_subtract: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_b: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_vector3_operator_multiply_vector: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_b: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_vector3_operator_multiply_scalar: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_vector3, p_b: godot_real) -> godot_vector3,
    >,
    pub godot_vector3_operator_divide_vector: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_b: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_vector3_operator_divide_scalar: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_vector3, p_b: godot_real) -> godot_vector3,
    >,
    pub godot_vector3_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_vector3, p_b: *const godot_vector3) -> godot_bool,
    >,
    pub godot_vector3_operator_less: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_vector3, p_b: *const godot_vector3) -> godot_bool,
    >,
    pub godot_vector3_operator_neg:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_vector3) -> godot_vector3>,
    pub godot_vector3_set_axis: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_vector3,
            p_axis: godot_vector3_axis,
            p_val: godot_real,
        ),
    >,
    pub godot_vector3_get_axis: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_vector3,
            p_axis: godot_vector3_axis,
        ) -> godot_real,
    >,
    pub godot_pool_byte_array_new:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_pool_byte_array)>,
    pub godot_pool_byte_array_new_copy: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_pool_byte_array,
            p_src: *const godot_pool_byte_array,
        ),
    >,
    pub godot_pool_byte_array_new_with_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_pool_byte_array, p_a: *const godot_array),
    >,
    pub godot_pool_byte_array_append:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_byte_array, p_data: u8)>,
    pub godot_pool_byte_array_append_array: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_byte_array,
            p_array: *const godot_pool_byte_array,
        ),
    >,
    pub godot_pool_byte_array_insert: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_byte_array,
            p_idx: godot_int,
            p_data: u8,
        ) -> godot_error,
    >,
    pub godot_pool_byte_array_invert:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_byte_array)>,
    pub godot_pool_byte_array_push_back:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_byte_array, p_data: u8)>,
    pub godot_pool_byte_array_remove: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_byte_array, p_idx: godot_int),
    >,
    pub godot_pool_byte_array_resize: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_byte_array, p_size: godot_int),
    >,
    pub godot_pool_byte_array_read: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_pool_byte_array,
        ) -> *mut godot_pool_byte_array_read_access,
    >,
    pub godot_pool_byte_array_write: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_byte_array,
        ) -> *mut godot_pool_byte_array_write_access,
    >,
    pub godot_pool_byte_array_set: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_byte_array, p_idx: godot_int, p_data: u8),
    >,
    pub godot_pool_byte_array_get: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_byte_array, p_idx: godot_int) -> u8,
    >,
    pub godot_pool_byte_array_size: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_byte_array) -> godot_int,
    >,
    pub godot_pool_byte_array_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_byte_array)>,
    pub godot_pool_int_array_new:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_pool_int_array)>,
    pub godot_pool_int_array_new_copy: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_pool_int_array, p_src: *const godot_pool_int_array),
    >,
    pub godot_pool_int_array_new_with_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_pool_int_array, p_a: *const godot_array),
    >,
    pub godot_pool_int_array_append: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_int_array, p_data: godot_int),
    >,
    pub godot_pool_int_array_append_array: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_int_array,
            p_array: *const godot_pool_int_array,
        ),
    >,
    pub godot_pool_int_array_insert: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_int_array,
            p_idx: godot_int,
            p_data: godot_int,
        ) -> godot_error,
    >,
    pub godot_pool_int_array_invert:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_int_array)>,
    pub godot_pool_int_array_push_back: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_int_array, p_data: godot_int),
    >,
    pub godot_pool_int_array_remove: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_int_array, p_idx: godot_int),
    >,
    pub godot_pool_int_array_resize: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_int_array, p_size: godot_int),
    >,
    pub godot_pool_int_array_read: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_pool_int_array,
        ) -> *mut godot_pool_int_array_read_access,
    >,
    pub godot_pool_int_array_write: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_int_array,
        ) -> *mut godot_pool_int_array_write_access,
    >,
    pub godot_pool_int_array_set: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_int_array,
            p_idx: godot_int,
            p_data: godot_int,
        ),
    >,
    pub godot_pool_int_array_get: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_int_array, p_idx: godot_int) -> godot_int,
    >,
    pub godot_pool_int_array_size: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_int_array) -> godot_int,
    >,
    pub godot_pool_int_array_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_int_array)>,
    pub godot_pool_real_array_new:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_pool_real_array)>,
    pub godot_pool_real_array_new_copy: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_pool_real_array,
            p_src: *const godot_pool_real_array,
        ),
    >,
    pub godot_pool_real_array_new_with_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_pool_real_array, p_a: *const godot_array),
    >,
    pub godot_pool_real_array_append: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_real_array, p_data: godot_real),
    >,
    pub godot_pool_real_array_append_array: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_real_array,
            p_array: *const godot_pool_real_array,
        ),
    >,
    pub godot_pool_real_array_insert: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_real_array,
            p_idx: godot_int,
            p_data: godot_real,
        ) -> godot_error,
    >,
    pub godot_pool_real_array_invert:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_real_array)>,
    pub godot_pool_real_array_push_back: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_real_array, p_data: godot_real),
    >,
    pub godot_pool_real_array_remove: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_real_array, p_idx: godot_int),
    >,
    pub godot_pool_real_array_resize: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_real_array, p_size: godot_int),
    >,
    pub godot_pool_real_array_read: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_pool_real_array,
        ) -> *mut godot_pool_real_array_read_access,
    >,
    pub godot_pool_real_array_write: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_real_array,
        ) -> *mut godot_pool_real_array_write_access,
    >,
    pub godot_pool_real_array_set: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_real_array,
            p_idx: godot_int,
            p_data: godot_real,
        ),
    >,
    pub godot_pool_real_array_get: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_real_array, p_idx: godot_int) -> godot_real,
    >,
    pub godot_pool_real_array_size: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_real_array) -> godot_int,
    >,
    pub godot_pool_real_array_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_real_array)>,
    pub godot_pool_string_array_new:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_pool_string_array)>,
    pub godot_pool_string_array_new_copy: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_pool_string_array,
            p_src: *const godot_pool_string_array,
        ),
    >,
    pub godot_pool_string_array_new_with_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_pool_string_array, p_a: *const godot_array),
    >,
    pub godot_pool_string_array_append: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_string_array, p_data: *const godot_string),
    >,
    pub godot_pool_string_array_append_array: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_string_array,
            p_array: *const godot_pool_string_array,
        ),
    >,
    pub godot_pool_string_array_insert: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_string_array,
            p_idx: godot_int,
            p_data: *const godot_string,
        ) -> godot_error,
    >,
    pub godot_pool_string_array_invert:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_string_array)>,
    pub godot_pool_string_array_push_back: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_string_array, p_data: *const godot_string),
    >,
    pub godot_pool_string_array_remove: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_string_array, p_idx: godot_int),
    >,
    pub godot_pool_string_array_resize: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_string_array, p_size: godot_int),
    >,
    pub godot_pool_string_array_read: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_pool_string_array,
        ) -> *mut godot_pool_string_array_read_access,
    >,
    pub godot_pool_string_array_write: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_string_array,
        ) -> *mut godot_pool_string_array_write_access,
    >,
    pub godot_pool_string_array_set: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_string_array,
            p_idx: godot_int,
            p_data: *const godot_string,
        ),
    >,
    pub godot_pool_string_array_get: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_pool_string_array,
            p_idx: godot_int,
        ) -> godot_string,
    >,
    pub godot_pool_string_array_size: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_string_array) -> godot_int,
    >,
    pub godot_pool_string_array_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_string_array)>,
    pub godot_pool_vector2_array_new:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_pool_vector2_array)>,
    pub godot_pool_vector2_array_new_copy: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_pool_vector2_array,
            p_src: *const godot_pool_vector2_array,
        ),
    >,
    pub godot_pool_vector2_array_new_with_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_pool_vector2_array, p_a: *const godot_array),
    >,
    pub godot_pool_vector2_array_append: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_vector2_array, p_data: *const godot_vector2),
    >,
    pub godot_pool_vector2_array_append_array: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_vector2_array,
            p_array: *const godot_pool_vector2_array,
        ),
    >,
    pub godot_pool_vector2_array_insert: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_vector2_array,
            p_idx: godot_int,
            p_data: *const godot_vector2,
        ) -> godot_error,
    >,
    pub godot_pool_vector2_array_invert:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_vector2_array)>,
    pub godot_pool_vector2_array_push_back: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_vector2_array, p_data: *const godot_vector2),
    >,
    pub godot_pool_vector2_array_remove: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_vector2_array, p_idx: godot_int),
    >,
    pub godot_pool_vector2_array_resize: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_vector2_array, p_size: godot_int),
    >,
    pub godot_pool_vector2_array_read: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_pool_vector2_array,
        ) -> *mut godot_pool_vector2_array_read_access,
    >,
    pub godot_pool_vector2_array_write: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_vector2_array,
        ) -> *mut godot_pool_vector2_array_write_access,
    >,
    pub godot_pool_vector2_array_set: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_vector2_array,
            p_idx: godot_int,
            p_data: *const godot_vector2,
        ),
    >,
    pub godot_pool_vector2_array_get: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_pool_vector2_array,
            p_idx: godot_int,
        ) -> godot_vector2,
    >,
    pub godot_pool_vector2_array_size: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_vector2_array) -> godot_int,
    >,
    pub godot_pool_vector2_array_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_vector2_array)>,
    pub godot_pool_vector3_array_new:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_pool_vector3_array)>,
    pub godot_pool_vector3_array_new_copy: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_pool_vector3_array,
            p_src: *const godot_pool_vector3_array,
        ),
    >,
    pub godot_pool_vector3_array_new_with_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_pool_vector3_array, p_a: *const godot_array),
    >,
    pub godot_pool_vector3_array_append: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_vector3_array, p_data: *const godot_vector3),
    >,
    pub godot_pool_vector3_array_append_array: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_vector3_array,
            p_array: *const godot_pool_vector3_array,
        ),
    >,
    pub godot_pool_vector3_array_insert: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_vector3_array,
            p_idx: godot_int,
            p_data: *const godot_vector3,
        ) -> godot_error,
    >,
    pub godot_pool_vector3_array_invert:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_vector3_array)>,
    pub godot_pool_vector3_array_push_back: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_vector3_array, p_data: *const godot_vector3),
    >,
    pub godot_pool_vector3_array_remove: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_vector3_array, p_idx: godot_int),
    >,
    pub godot_pool_vector3_array_resize: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_vector3_array, p_size: godot_int),
    >,
    pub godot_pool_vector3_array_read: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_pool_vector3_array,
        ) -> *mut godot_pool_vector3_array_read_access,
    >,
    pub godot_pool_vector3_array_write: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_vector3_array,
        ) -> *mut godot_pool_vector3_array_write_access,
    >,
    pub godot_pool_vector3_array_set: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_vector3_array,
            p_idx: godot_int,
            p_data: *const godot_vector3,
        ),
    >,
    pub godot_pool_vector3_array_get: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_pool_vector3_array,
            p_idx: godot_int,
        ) -> godot_vector3,
    >,
    pub godot_pool_vector3_array_size: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_vector3_array) -> godot_int,
    >,
    pub godot_pool_vector3_array_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_vector3_array)>,
    pub godot_pool_color_array_new:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_pool_color_array)>,
    pub godot_pool_color_array_new_copy: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_pool_color_array,
            p_src: *const godot_pool_color_array,
        ),
    >,
    pub godot_pool_color_array_new_with_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_pool_color_array, p_a: *const godot_array),
    >,
    pub godot_pool_color_array_append: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_color_array, p_data: *const godot_color),
    >,
    pub godot_pool_color_array_append_array: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_color_array,
            p_array: *const godot_pool_color_array,
        ),
    >,
    pub godot_pool_color_array_insert: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_color_array,
            p_idx: godot_int,
            p_data: *const godot_color,
        ) -> godot_error,
    >,
    pub godot_pool_color_array_invert:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_color_array)>,
    pub godot_pool_color_array_push_back: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_color_array, p_data: *const godot_color),
    >,
    pub godot_pool_color_array_remove: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_color_array, p_idx: godot_int),
    >,
    pub godot_pool_color_array_resize: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_pool_color_array, p_size: godot_int),
    >,
    pub godot_pool_color_array_read: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_pool_color_array,
        ) -> *mut godot_pool_color_array_read_access,
    >,
    pub godot_pool_color_array_write: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_color_array,
        ) -> *mut godot_pool_color_array_write_access,
    >,
    pub godot_pool_color_array_set: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_pool_color_array,
            p_idx: godot_int,
            p_data: *const godot_color,
        ),
    >,
    pub godot_pool_color_array_get: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_pool_color_array,
            p_idx: godot_int,
        ) -> godot_color,
    >,
    pub godot_pool_color_array_size: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_pool_color_array) -> godot_int,
    >,
    pub godot_pool_color_array_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_pool_color_array)>,
    pub godot_pool_byte_array_read_access_copy: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *const godot_pool_byte_array_read_access,
        ) -> *mut godot_pool_byte_array_read_access,
    >,
    pub godot_pool_byte_array_read_access_ptr: ::std::option::Option<
        unsafe extern "C" fn(p_read: *const godot_pool_byte_array_read_access) -> *const u8,
    >,
    pub godot_pool_byte_array_read_access_operator_assign: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *mut godot_pool_byte_array_read_access,
            p_other: *mut godot_pool_byte_array_read_access,
        ),
    >,
    pub godot_pool_byte_array_read_access_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_read: *mut godot_pool_byte_array_read_access)>,
    pub godot_pool_int_array_read_access_copy: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *const godot_pool_int_array_read_access,
        ) -> *mut godot_pool_int_array_read_access,
    >,
    pub godot_pool_int_array_read_access_ptr: ::std::option::Option<
        unsafe extern "C" fn(p_read: *const godot_pool_int_array_read_access) -> *const godot_int,
    >,
    pub godot_pool_int_array_read_access_operator_assign: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *mut godot_pool_int_array_read_access,
            p_other: *mut godot_pool_int_array_read_access,
        ),
    >,
    pub godot_pool_int_array_read_access_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_read: *mut godot_pool_int_array_read_access)>,
    pub godot_pool_real_array_read_access_copy: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *const godot_pool_real_array_read_access,
        ) -> *mut godot_pool_real_array_read_access,
    >,
    pub godot_pool_real_array_read_access_ptr: ::std::option::Option<
        unsafe extern "C" fn(p_read: *const godot_pool_real_array_read_access) -> *const godot_real,
    >,
    pub godot_pool_real_array_read_access_operator_assign: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *mut godot_pool_real_array_read_access,
            p_other: *mut godot_pool_real_array_read_access,
        ),
    >,
    pub godot_pool_real_array_read_access_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_read: *mut godot_pool_real_array_read_access)>,
    pub godot_pool_string_array_read_access_copy: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *const godot_pool_string_array_read_access,
        ) -> *mut godot_pool_string_array_read_access,
    >,
    pub godot_pool_string_array_read_access_ptr: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *const godot_pool_string_array_read_access,
        ) -> *const godot_string,
    >,
    pub godot_pool_string_array_read_access_operator_assign: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *mut godot_pool_string_array_read_access,
            p_other: *mut godot_pool_string_array_read_access,
        ),
    >,
    pub godot_pool_string_array_read_access_destroy: ::std::option::Option<
        unsafe extern "C" fn(p_read: *mut godot_pool_string_array_read_access),
    >,
    pub godot_pool_vector2_array_read_access_copy: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *const godot_pool_vector2_array_read_access,
        ) -> *mut godot_pool_vector2_array_read_access,
    >,
    pub godot_pool_vector2_array_read_access_ptr: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *const godot_pool_vector2_array_read_access,
        ) -> *const godot_vector2,
    >,
    pub godot_pool_vector2_array_read_access_operator_assign: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *mut godot_pool_vector2_array_read_access,
            p_other: *mut godot_pool_vector2_array_read_access,
        ),
    >,
    pub godot_pool_vector2_array_read_access_destroy: ::std::option::Option<
        unsafe extern "C" fn(p_read: *mut godot_pool_vector2_array_read_access),
    >,
    pub godot_pool_vector3_array_read_access_copy: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *const godot_pool_vector3_array_read_access,
        ) -> *mut godot_pool_vector3_array_read_access,
    >,
    pub godot_pool_vector3_array_read_access_ptr: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *const godot_pool_vector3_array_read_access,
        ) -> *const godot_vector3,
    >,
    pub godot_pool_vector3_array_read_access_operator_assign: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *mut godot_pool_vector3_array_read_access,
            p_other: *mut godot_pool_vector3_array_read_access,
        ),
    >,
    pub godot_pool_vector3_array_read_access_destroy: ::std::option::Option<
        unsafe extern "C" fn(p_read: *mut godot_pool_vector3_array_read_access),
    >,
    pub godot_pool_color_array_read_access_copy: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *const godot_pool_color_array_read_access,
        ) -> *mut godot_pool_color_array_read_access,
    >,
    pub godot_pool_color_array_read_access_ptr: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *const godot_pool_color_array_read_access,
        ) -> *const godot_color,
    >,
    pub godot_pool_color_array_read_access_operator_assign: ::std::option::Option<
        unsafe extern "C" fn(
            p_read: *mut godot_pool_color_array_read_access,
            p_other: *mut godot_pool_color_array_read_access,
        ),
    >,
    pub godot_pool_color_array_read_access_destroy: ::std::option::Option<
        unsafe extern "C" fn(p_read: *mut godot_pool_color_array_read_access),
    >,
    pub godot_pool_byte_array_write_access_copy: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *const godot_pool_byte_array_write_access,
        ) -> *mut godot_pool_byte_array_write_access,
    >,
    pub godot_pool_byte_array_write_access_ptr: ::std::option::Option<
        unsafe extern "C" fn(p_write: *const godot_pool_byte_array_write_access) -> *mut u8,
    >,
    pub godot_pool_byte_array_write_access_operator_assign: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *mut godot_pool_byte_array_write_access,
            p_other: *mut godot_pool_byte_array_write_access,
        ),
    >,
    pub godot_pool_byte_array_write_access_destroy: ::std::option::Option<
        unsafe extern "C" fn(p_write: *mut godot_pool_byte_array_write_access),
    >,
    pub godot_pool_int_array_write_access_copy: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *const godot_pool_int_array_write_access,
        ) -> *mut godot_pool_int_array_write_access,
    >,
    pub godot_pool_int_array_write_access_ptr: ::std::option::Option<
        unsafe extern "C" fn(p_write: *const godot_pool_int_array_write_access) -> *mut godot_int,
    >,
    pub godot_pool_int_array_write_access_operator_assign: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *mut godot_pool_int_array_write_access,
            p_other: *mut godot_pool_int_array_write_access,
        ),
    >,
    pub godot_pool_int_array_write_access_destroy: ::std::option::Option<
        unsafe extern "C" fn(p_write: *mut godot_pool_int_array_write_access),
    >,
    pub godot_pool_real_array_write_access_copy: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *const godot_pool_real_array_write_access,
        ) -> *mut godot_pool_real_array_write_access,
    >,
    pub godot_pool_real_array_write_access_ptr: ::std::option::Option<
        unsafe extern "C" fn(p_write: *const godot_pool_real_array_write_access) -> *mut godot_real,
    >,
    pub godot_pool_real_array_write_access_operator_assign: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *mut godot_pool_real_array_write_access,
            p_other: *mut godot_pool_real_array_write_access,
        ),
    >,
    pub godot_pool_real_array_write_access_destroy: ::std::option::Option<
        unsafe extern "C" fn(p_write: *mut godot_pool_real_array_write_access),
    >,
    pub godot_pool_string_array_write_access_copy: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *const godot_pool_string_array_write_access,
        ) -> *mut godot_pool_string_array_write_access,
    >,
    pub godot_pool_string_array_write_access_ptr: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *const godot_pool_string_array_write_access,
        ) -> *mut godot_string,
    >,
    pub godot_pool_string_array_write_access_operator_assign: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *mut godot_pool_string_array_write_access,
            p_other: *mut godot_pool_string_array_write_access,
        ),
    >,
    pub godot_pool_string_array_write_access_destroy: ::std::option::Option<
        unsafe extern "C" fn(p_write: *mut godot_pool_string_array_write_access),
    >,
    pub godot_pool_vector2_array_write_access_copy: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *const godot_pool_vector2_array_write_access,
        ) -> *mut godot_pool_vector2_array_write_access,
    >,
    pub godot_pool_vector2_array_write_access_ptr: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *const godot_pool_vector2_array_write_access,
        ) -> *mut godot_vector2,
    >,
    pub godot_pool_vector2_array_write_access_operator_assign: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *mut godot_pool_vector2_array_write_access,
            p_other: *mut godot_pool_vector2_array_write_access,
        ),
    >,
    pub godot_pool_vector2_array_write_access_destroy: ::std::option::Option<
        unsafe extern "C" fn(p_write: *mut godot_pool_vector2_array_write_access),
    >,
    pub godot_pool_vector3_array_write_access_copy: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *const godot_pool_vector3_array_write_access,
        ) -> *mut godot_pool_vector3_array_write_access,
    >,
    pub godot_pool_vector3_array_write_access_ptr: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *const godot_pool_vector3_array_write_access,
        ) -> *mut godot_vector3,
    >,
    pub godot_pool_vector3_array_write_access_operator_assign: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *mut godot_pool_vector3_array_write_access,
            p_other: *mut godot_pool_vector3_array_write_access,
        ),
    >,
    pub godot_pool_vector3_array_write_access_destroy: ::std::option::Option<
        unsafe extern "C" fn(p_write: *mut godot_pool_vector3_array_write_access),
    >,
    pub godot_pool_color_array_write_access_copy: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *const godot_pool_color_array_write_access,
        ) -> *mut godot_pool_color_array_write_access,
    >,
    pub godot_pool_color_array_write_access_ptr: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *const godot_pool_color_array_write_access,
        ) -> *mut godot_color,
    >,
    pub godot_pool_color_array_write_access_operator_assign: ::std::option::Option<
        unsafe extern "C" fn(
            p_write: *mut godot_pool_color_array_write_access,
            p_other: *mut godot_pool_color_array_write_access,
        ),
    >,
    pub godot_pool_color_array_write_access_destroy: ::std::option::Option<
        unsafe extern "C" fn(p_write: *mut godot_pool_color_array_write_access),
    >,
    pub godot_array_new: ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_array)>,
    pub godot_array_new_copy: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_array, p_src: *const godot_array),
    >,
    pub godot_array_new_pool_color_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_array, p_pca: *const godot_pool_color_array),
    >,
    pub godot_array_new_pool_vector3_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_array, p_pv3a: *const godot_pool_vector3_array),
    >,
    pub godot_array_new_pool_vector2_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_array, p_pv2a: *const godot_pool_vector2_array),
    >,
    pub godot_array_new_pool_string_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_array, p_psa: *const godot_pool_string_array),
    >,
    pub godot_array_new_pool_real_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_array, p_pra: *const godot_pool_real_array),
    >,
    pub godot_array_new_pool_int_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_array, p_pia: *const godot_pool_int_array),
    >,
    pub godot_array_new_pool_byte_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_array, p_pba: *const godot_pool_byte_array),
    >,
    pub godot_array_set: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_array,
            p_idx: godot_int,
            p_value: *const godot_variant,
        ),
    >,
    pub godot_array_get: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_array, p_idx: godot_int) -> godot_variant,
    >,
    pub godot_array_operator_index: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_array, p_idx: godot_int) -> *mut godot_variant,
    >,
    pub godot_array_operator_index_const: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_array, p_idx: godot_int) -> *const godot_variant,
    >,
    pub godot_array_append: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_array, p_value: *const godot_variant),
    >,
    pub godot_array_clear: ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_array)>,
    pub godot_array_count: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_array,
            p_value: *const godot_variant,
        ) -> godot_int,
    >,
    pub godot_array_empty:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_array) -> godot_bool>,
    pub godot_array_erase: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_array, p_value: *const godot_variant),
    >,
    pub godot_array_front:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_array) -> godot_variant>,
    pub godot_array_back:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_array) -> godot_variant>,
    pub godot_array_find: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_array,
            p_what: *const godot_variant,
            p_from: godot_int,
        ) -> godot_int,
    >,
    pub godot_array_find_last: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_array, p_what: *const godot_variant) -> godot_int,
    >,
    pub godot_array_has: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_array,
            p_value: *const godot_variant,
        ) -> godot_bool,
    >,
    pub godot_array_hash:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_array) -> godot_int>,
    pub godot_array_insert: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_array,
            p_pos: godot_int,
            p_value: *const godot_variant,
        ),
    >,
    pub godot_array_invert: ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_array)>,
    pub godot_array_pop_back:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_array) -> godot_variant>,
    pub godot_array_pop_front:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_array) -> godot_variant>,
    pub godot_array_push_back: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_array, p_value: *const godot_variant),
    >,
    pub godot_array_push_front: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_array, p_value: *const godot_variant),
    >,
    pub godot_array_remove:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_array, p_idx: godot_int)>,
    pub godot_array_resize:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_array, p_size: godot_int)>,
    pub godot_array_rfind: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_array,
            p_what: *const godot_variant,
            p_from: godot_int,
        ) -> godot_int,
    >,
    pub godot_array_size:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_array) -> godot_int>,
    pub godot_array_sort: ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_array)>,
    pub godot_array_sort_custom: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_array,
            p_obj: *mut godot_object,
            p_func: *const godot_string,
        ),
    >,
    pub godot_array_bsearch: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_array,
            p_value: *const godot_variant,
            p_before: godot_bool,
        ) -> godot_int,
    >,
    pub godot_array_bsearch_custom: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_array,
            p_value: *const godot_variant,
            p_obj: *mut godot_object,
            p_func: *const godot_string,
            p_before: godot_bool,
        ) -> godot_int,
    >,
    pub godot_array_destroy: ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_array)>,
    pub godot_dictionary_new:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_dictionary)>,
    pub godot_dictionary_new_copy: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_dictionary, p_src: *const godot_dictionary),
    >,
    pub godot_dictionary_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_dictionary)>,
    pub godot_dictionary_size:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_dictionary) -> godot_int>,
    pub godot_dictionary_empty:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_dictionary) -> godot_bool>,
    pub godot_dictionary_clear:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_dictionary)>,
    pub godot_dictionary_has: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_dictionary,
            p_key: *const godot_variant,
        ) -> godot_bool,
    >,
    pub godot_dictionary_has_all: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_dictionary,
            p_keys: *const godot_array,
        ) -> godot_bool,
    >,
    pub godot_dictionary_erase: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_dictionary, p_key: *const godot_variant),
    >,
    pub godot_dictionary_hash:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_dictionary) -> godot_int>,
    pub godot_dictionary_keys:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_dictionary) -> godot_array>,
    pub godot_dictionary_values:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_dictionary) -> godot_array>,
    pub godot_dictionary_get: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_dictionary,
            p_key: *const godot_variant,
        ) -> godot_variant,
    >,
    pub godot_dictionary_set: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_dictionary,
            p_key: *const godot_variant,
            p_value: *const godot_variant,
        ),
    >,
    pub godot_dictionary_operator_index: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_dictionary,
            p_key: *const godot_variant,
        ) -> *mut godot_variant,
    >,
    pub godot_dictionary_operator_index_const: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_dictionary,
            p_key: *const godot_variant,
        ) -> *const godot_variant,
    >,
    pub godot_dictionary_next: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_dictionary,
            p_key: *const godot_variant,
        ) -> *mut godot_variant,
    >,
    pub godot_dictionary_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_dictionary,
            p_b: *const godot_dictionary,
        ) -> godot_bool,
    >,
    pub godot_dictionary_to_json: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_dictionary) -> godot_string,
    >,
    pub godot_node_path_new: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_node_path, p_from: *const godot_string),
    >,
    pub godot_node_path_new_copy: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_node_path, p_src: *const godot_node_path),
    >,
    pub godot_node_path_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_node_path)>,
    pub godot_node_path_as_string:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_node_path) -> godot_string>,
    pub godot_node_path_is_absolute:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_node_path) -> godot_bool>,
    pub godot_node_path_get_name_count:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_node_path) -> godot_int>,
    pub godot_node_path_get_name: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_node_path, p_idx: godot_int) -> godot_string,
    >,
    pub godot_node_path_get_subname_count:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_node_path) -> godot_int>,
    pub godot_node_path_get_subname: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_node_path, p_idx: godot_int) -> godot_string,
    >,
    pub godot_node_path_get_concatenated_subnames:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_node_path) -> godot_string>,
    pub godot_node_path_is_empty:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_node_path) -> godot_bool>,
    pub godot_node_path_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_node_path,
            p_b: *const godot_node_path,
        ) -> godot_bool,
    >,
    pub godot_plane_new_with_reals: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_plane,
            p_a: godot_real,
            p_b: godot_real,
            p_c: godot_real,
            p_d: godot_real,
        ),
    >,
    pub godot_plane_new_with_vectors: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_plane,
            p_v1: *const godot_vector3,
            p_v2: *const godot_vector3,
            p_v3: *const godot_vector3,
        ),
    >,
    pub godot_plane_new_with_normal: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_plane,
            p_normal: *const godot_vector3,
            p_d: godot_real,
        ),
    >,
    pub godot_plane_as_string:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_plane) -> godot_string>,
    pub godot_plane_normalized:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_plane) -> godot_plane>,
    pub godot_plane_center:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_plane) -> godot_vector3>,
    pub godot_plane_get_any_point:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_plane) -> godot_vector3>,
    pub godot_plane_is_point_over: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_plane,
            p_point: *const godot_vector3,
        ) -> godot_bool,
    >,
    pub godot_plane_distance_to: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_plane,
            p_point: *const godot_vector3,
        ) -> godot_real,
    >,
    pub godot_plane_has_point: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_plane,
            p_point: *const godot_vector3,
            p_epsilon: godot_real,
        ) -> godot_bool,
    >,
    pub godot_plane_project: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_plane,
            p_point: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_plane_intersect_3: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_plane,
            r_dest: *mut godot_vector3,
            p_b: *const godot_plane,
            p_c: *const godot_plane,
        ) -> godot_bool,
    >,
    pub godot_plane_intersects_ray: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_plane,
            r_dest: *mut godot_vector3,
            p_from: *const godot_vector3,
            p_dir: *const godot_vector3,
        ) -> godot_bool,
    >,
    pub godot_plane_intersects_segment: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_plane,
            r_dest: *mut godot_vector3,
            p_begin: *const godot_vector3,
            p_end: *const godot_vector3,
        ) -> godot_bool,
    >,
    pub godot_plane_operator_neg:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_plane) -> godot_plane>,
    pub godot_plane_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_plane, p_b: *const godot_plane) -> godot_bool,
    >,
    pub godot_plane_set_normal: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_plane, p_normal: *const godot_vector3),
    >,
    pub godot_plane_get_normal:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_plane) -> godot_vector3>,
    pub godot_plane_get_d:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_plane) -> godot_real>,
    pub godot_plane_set_d:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_plane, p_d: godot_real)>,
    pub godot_rect2_new_with_position_and_size: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_rect2,
            p_pos: *const godot_vector2,
            p_size: *const godot_vector2,
        ),
    >,
    pub godot_rect2_new: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_rect2,
            p_x: godot_real,
            p_y: godot_real,
            p_width: godot_real,
            p_height: godot_real,
        ),
    >,
    pub godot_rect2_as_string:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_rect2) -> godot_string>,
    pub godot_rect2_get_area:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_rect2) -> godot_real>,
    pub godot_rect2_intersects: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_rect2, p_b: *const godot_rect2) -> godot_bool,
    >,
    pub godot_rect2_encloses: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_rect2, p_b: *const godot_rect2) -> godot_bool,
    >,
    pub godot_rect2_has_no_area:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_rect2) -> godot_bool>,
    pub godot_rect2_clip: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_rect2, p_b: *const godot_rect2) -> godot_rect2,
    >,
    pub godot_rect2_merge: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_rect2, p_b: *const godot_rect2) -> godot_rect2,
    >,
    pub godot_rect2_has_point: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_rect2,
            p_point: *const godot_vector2,
        ) -> godot_bool,
    >,
    pub godot_rect2_grow: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_rect2, p_by: godot_real) -> godot_rect2,
    >,
    pub godot_rect2_expand: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_rect2, p_to: *const godot_vector2) -> godot_rect2,
    >,
    pub godot_rect2_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_rect2, p_b: *const godot_rect2) -> godot_bool,
    >,
    pub godot_rect2_get_position:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_rect2) -> godot_vector2>,
    pub godot_rect2_get_size:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_rect2) -> godot_vector2>,
    pub godot_rect2_set_position: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_rect2, p_pos: *const godot_vector2),
    >,
    pub godot_rect2_set_size: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_rect2, p_size: *const godot_vector2),
    >,
    pub godot_aabb_new: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_aabb,
            p_pos: *const godot_vector3,
            p_size: *const godot_vector3,
        ),
    >,
    pub godot_aabb_get_position:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_aabb) -> godot_vector3>,
    pub godot_aabb_set_position: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_aabb, p_v: *const godot_vector3),
    >,
    pub godot_aabb_get_size:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_aabb) -> godot_vector3>,
    pub godot_aabb_set_size: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_aabb, p_v: *const godot_vector3),
    >,
    pub godot_aabb_as_string:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_aabb) -> godot_string>,
    pub godot_aabb_get_area:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_aabb) -> godot_real>,
    pub godot_aabb_has_no_area:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_aabb) -> godot_bool>,
    pub godot_aabb_has_no_surface:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_aabb) -> godot_bool>,
    pub godot_aabb_intersects: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_aabb, p_with: *const godot_aabb) -> godot_bool,
    >,
    pub godot_aabb_encloses: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_aabb, p_with: *const godot_aabb) -> godot_bool,
    >,
    pub godot_aabb_merge: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_aabb, p_with: *const godot_aabb) -> godot_aabb,
    >,
    pub godot_aabb_intersection: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_aabb, p_with: *const godot_aabb) -> godot_aabb,
    >,
    pub godot_aabb_intersects_plane: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_aabb, p_plane: *const godot_plane) -> godot_bool,
    >,
    pub godot_aabb_intersects_segment: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_aabb,
            p_from: *const godot_vector3,
            p_to: *const godot_vector3,
        ) -> godot_bool,
    >,
    pub godot_aabb_has_point: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_aabb,
            p_point: *const godot_vector3,
        ) -> godot_bool,
    >,
    pub godot_aabb_get_support: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_aabb,
            p_dir: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_aabb_get_longest_axis:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_aabb) -> godot_vector3>,
    pub godot_aabb_get_longest_axis_index:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_aabb) -> godot_int>,
    pub godot_aabb_get_longest_axis_size:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_aabb) -> godot_real>,
    pub godot_aabb_get_shortest_axis:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_aabb) -> godot_vector3>,
    pub godot_aabb_get_shortest_axis_index:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_aabb) -> godot_int>,
    pub godot_aabb_get_shortest_axis_size:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_aabb) -> godot_real>,
    pub godot_aabb_expand: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_aabb,
            p_to_point: *const godot_vector3,
        ) -> godot_aabb,
    >,
    pub godot_aabb_grow: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_aabb, p_by: godot_real) -> godot_aabb,
    >,
    pub godot_aabb_get_endpoint: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_aabb, p_idx: godot_int) -> godot_vector3,
    >,
    pub godot_aabb_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_aabb, p_b: *const godot_aabb) -> godot_bool,
    >,
    pub godot_rid_new: ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_rid)>,
    pub godot_rid_get_id:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_rid) -> godot_int>,
    pub godot_rid_new_with_resource: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_rid, p_from: *const godot_object),
    >,
    pub godot_rid_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_rid, p_b: *const godot_rid) -> godot_bool,
    >,
    pub godot_rid_operator_less: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_rid, p_b: *const godot_rid) -> godot_bool,
    >,
    pub godot_transform_new_with_axis_origin: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_transform,
            p_x_axis: *const godot_vector3,
            p_y_axis: *const godot_vector3,
            p_z_axis: *const godot_vector3,
            p_origin: *const godot_vector3,
        ),
    >,
    pub godot_transform_new: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_transform,
            p_basis: *const godot_basis,
            p_origin: *const godot_vector3,
        ),
    >,
    pub godot_transform_get_basis:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_transform) -> godot_basis>,
    pub godot_transform_set_basis: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_transform, p_v: *const godot_basis),
    >,
    pub godot_transform_get_origin: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_transform) -> godot_vector3,
    >,
    pub godot_transform_set_origin: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_transform, p_v: *const godot_vector3),
    >,
    pub godot_transform_as_string:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_transform) -> godot_string>,
    pub godot_transform_inverse: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_transform) -> godot_transform,
    >,
    pub godot_transform_affine_inverse: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_transform) -> godot_transform,
    >,
    pub godot_transform_orthonormalized: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_transform) -> godot_transform,
    >,
    pub godot_transform_rotated: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform,
            p_axis: *const godot_vector3,
            p_phi: godot_real,
        ) -> godot_transform,
    >,
    pub godot_transform_scaled: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform,
            p_scale: *const godot_vector3,
        ) -> godot_transform,
    >,
    pub godot_transform_translated: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform,
            p_ofs: *const godot_vector3,
        ) -> godot_transform,
    >,
    pub godot_transform_looking_at: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform,
            p_target: *const godot_vector3,
            p_up: *const godot_vector3,
        ) -> godot_transform,
    >,
    pub godot_transform_xform_plane: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform,
            p_v: *const godot_plane,
        ) -> godot_plane,
    >,
    pub godot_transform_xform_inv_plane: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform,
            p_v: *const godot_plane,
        ) -> godot_plane,
    >,
    pub godot_transform_new_identity:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_transform)>,
    pub godot_transform_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform,
            p_b: *const godot_transform,
        ) -> godot_bool,
    >,
    pub godot_transform_operator_multiply: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform,
            p_b: *const godot_transform,
        ) -> godot_transform,
    >,
    pub godot_transform_xform_vector3: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform,
            p_v: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_transform_xform_inv_vector3: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform,
            p_v: *const godot_vector3,
        ) -> godot_vector3,
    >,
    pub godot_transform_xform_aabb: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_transform, p_v: *const godot_aabb) -> godot_aabb,
    >,
    pub godot_transform_xform_inv_aabb: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_transform, p_v: *const godot_aabb) -> godot_aabb,
    >,
    pub godot_transform2d_new: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_transform2d,
            p_rot: godot_real,
            p_pos: *const godot_vector2,
        ),
    >,
    pub godot_transform2d_new_axis_origin: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_transform2d,
            p_x_axis: *const godot_vector2,
            p_y_axis: *const godot_vector2,
            p_origin: *const godot_vector2,
        ),
    >,
    pub godot_transform2d_as_string: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_transform2d) -> godot_string,
    >,
    pub godot_transform2d_inverse: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_transform2d) -> godot_transform2d,
    >,
    pub godot_transform2d_affine_inverse: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_transform2d) -> godot_transform2d,
    >,
    pub godot_transform2d_get_rotation:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_transform2d) -> godot_real>,
    pub godot_transform2d_get_origin: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_transform2d) -> godot_vector2,
    >,
    pub godot_transform2d_get_scale: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_transform2d) -> godot_vector2,
    >,
    pub godot_transform2d_orthonormalized: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_transform2d) -> godot_transform2d,
    >,
    pub godot_transform2d_rotated: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform2d,
            p_phi: godot_real,
        ) -> godot_transform2d,
    >,
    pub godot_transform2d_scaled: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform2d,
            p_scale: *const godot_vector2,
        ) -> godot_transform2d,
    >,
    pub godot_transform2d_translated: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform2d,
            p_offset: *const godot_vector2,
        ) -> godot_transform2d,
    >,
    pub godot_transform2d_xform_vector2: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform2d,
            p_v: *const godot_vector2,
        ) -> godot_vector2,
    >,
    pub godot_transform2d_xform_inv_vector2: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform2d,
            p_v: *const godot_vector2,
        ) -> godot_vector2,
    >,
    pub godot_transform2d_basis_xform_vector2: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform2d,
            p_v: *const godot_vector2,
        ) -> godot_vector2,
    >,
    pub godot_transform2d_basis_xform_inv_vector2: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform2d,
            p_v: *const godot_vector2,
        ) -> godot_vector2,
    >,
    pub godot_transform2d_interpolate_with: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform2d,
            p_m: *const godot_transform2d,
            p_c: godot_real,
        ) -> godot_transform2d,
    >,
    pub godot_transform2d_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform2d,
            p_b: *const godot_transform2d,
        ) -> godot_bool,
    >,
    pub godot_transform2d_operator_multiply: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform2d,
            p_b: *const godot_transform2d,
        ) -> godot_transform2d,
    >,
    pub godot_transform2d_new_identity:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_transform2d)>,
    pub godot_transform2d_xform_rect2: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform2d,
            p_v: *const godot_rect2,
        ) -> godot_rect2,
    >,
    pub godot_transform2d_xform_inv_rect2: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_transform2d,
            p_v: *const godot_rect2,
        ) -> godot_rect2,
    >,
    pub godot_variant_get_type: ::std::option::Option<
        unsafe extern "C" fn(p_v: *const godot_variant) -> godot_variant_type,
    >,
    pub godot_variant_new_copy: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_src: *const godot_variant),
    >,
    pub godot_variant_new_nil:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_variant)>,
    pub godot_variant_new_bool:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_variant, p_b: godot_bool)>,
    pub godot_variant_new_uint:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_variant, p_i: u64)>,
    pub godot_variant_new_int:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_variant, p_i: i64)>,
    pub godot_variant_new_real:
        ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_variant, p_r: f64)>,
    pub godot_variant_new_string: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_s: *const godot_string),
    >,
    pub godot_variant_new_vector2: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_v2: *const godot_vector2),
    >,
    pub godot_variant_new_rect2: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_rect2: *const godot_rect2),
    >,
    pub godot_variant_new_vector3: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_v3: *const godot_vector3),
    >,
    pub godot_variant_new_transform2d: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_t2d: *const godot_transform2d),
    >,
    pub godot_variant_new_plane: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_plane: *const godot_plane),
    >,
    pub godot_variant_new_quat: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_quat: *const godot_quat),
    >,
    pub godot_variant_new_aabb: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_aabb: *const godot_aabb),
    >,
    pub godot_variant_new_basis: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_basis: *const godot_basis),
    >,
    pub godot_variant_new_transform: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_trans: *const godot_transform),
    >,
    pub godot_variant_new_color: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_color: *const godot_color),
    >,
    pub godot_variant_new_node_path: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_np: *const godot_node_path),
    >,
    pub godot_variant_new_rid: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_rid: *const godot_rid),
    >,
    pub godot_variant_new_object: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_obj: *const godot_object),
    >,
    pub godot_variant_new_dictionary: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_dict: *const godot_dictionary),
    >,
    pub godot_variant_new_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_arr: *const godot_array),
    >,
    pub godot_variant_new_pool_byte_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_pba: *const godot_pool_byte_array),
    >,
    pub godot_variant_new_pool_int_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_pia: *const godot_pool_int_array),
    >,
    pub godot_variant_new_pool_real_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_pra: *const godot_pool_real_array),
    >,
    pub godot_variant_new_pool_string_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_psa: *const godot_pool_string_array),
    >,
    pub godot_variant_new_pool_vector2_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_pv2a: *const godot_pool_vector2_array),
    >,
    pub godot_variant_new_pool_vector3_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_pv3a: *const godot_pool_vector3_array),
    >,
    pub godot_variant_new_pool_color_array: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_variant, p_pca: *const godot_pool_color_array),
    >,
    pub godot_variant_as_bool:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> godot_bool>,
    pub godot_variant_as_uint:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> u64>,
    pub godot_variant_as_int:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> i64>,
    pub godot_variant_as_real:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> f64>,
    pub godot_variant_as_string:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> godot_string>,
    pub godot_variant_as_vector2:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> godot_vector2>,
    pub godot_variant_as_rect2:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> godot_rect2>,
    pub godot_variant_as_vector3:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> godot_vector3>,
    pub godot_variant_as_transform2d: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_variant) -> godot_transform2d,
    >,
    pub godot_variant_as_plane:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> godot_plane>,
    pub godot_variant_as_quat:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> godot_quat>,
    pub godot_variant_as_aabb:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> godot_aabb>,
    pub godot_variant_as_basis:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> godot_basis>,
    pub godot_variant_as_transform: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_variant) -> godot_transform,
    >,
    pub godot_variant_as_color:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> godot_color>,
    pub godot_variant_as_node_path: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_variant) -> godot_node_path,
    >,
    pub godot_variant_as_rid:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> godot_rid>,
    pub godot_variant_as_object: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_variant) -> *mut godot_object,
    >,
    pub godot_variant_as_dictionary: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_variant) -> godot_dictionary,
    >,
    pub godot_variant_as_array:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> godot_array>,
    pub godot_variant_as_pool_byte_array: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_variant) -> godot_pool_byte_array,
    >,
    pub godot_variant_as_pool_int_array: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_variant) -> godot_pool_int_array,
    >,
    pub godot_variant_as_pool_real_array: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_variant) -> godot_pool_real_array,
    >,
    pub godot_variant_as_pool_string_array: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_variant) -> godot_pool_string_array,
    >,
    pub godot_variant_as_pool_vector2_array: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_variant) -> godot_pool_vector2_array,
    >,
    pub godot_variant_as_pool_vector3_array: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_variant) -> godot_pool_vector3_array,
    >,
    pub godot_variant_as_pool_color_array: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_variant) -> godot_pool_color_array,
    >,
    pub godot_variant_call: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_variant,
            p_method: *const godot_string,
            p_args: *mut *const godot_variant,
            p_argcount: godot_int,
            r_error: *mut godot_variant_call_error,
        ) -> godot_variant,
    >,
    pub godot_variant_has_method: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_variant,
            p_method: *const godot_string,
        ) -> godot_bool,
    >,
    pub godot_variant_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_variant,
            p_other: *const godot_variant,
        ) -> godot_bool,
    >,
    pub godot_variant_operator_less: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_variant,
            p_other: *const godot_variant,
        ) -> godot_bool,
    >,
    pub godot_variant_hash_compare: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_variant,
            p_other: *const godot_variant,
        ) -> godot_bool,
    >,
    pub godot_variant_booleanize:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_variant) -> godot_bool>,
    pub godot_variant_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_variant)>,
    pub godot_char_string_length:
        ::std::option::Option<unsafe extern "C" fn(p_cs: *const godot_char_string) -> godot_int>,
    pub godot_char_string_get_data: ::std::option::Option<
        unsafe extern "C" fn(p_cs: *const godot_char_string) -> *const libc::c_char,
    >,
    pub godot_char_string_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_cs: *mut godot_char_string)>,
    pub godot_string_new: ::std::option::Option<unsafe extern "C" fn(r_dest: *mut godot_string)>,
    pub godot_string_new_copy: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_string, p_src: *const godot_string),
    >,
    pub godot_string_new_with_wide_string: ::std::option::Option<
        unsafe extern "C" fn(
            r_dest: *mut godot_string,
            p_contents: *const wchar_t,
            p_size: libc::c_int,
        ),
    >,
    pub godot_string_operator_index: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_string, p_idx: godot_int) -> *const wchar_t,
    >,
    pub godot_string_operator_index_const: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_idx: godot_int) -> wchar_t,
    >,
    pub godot_string_wide_str:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> *const wchar_t>,
    pub godot_string_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_b: *const godot_string) -> godot_bool,
    >,
    pub godot_string_operator_less: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_b: *const godot_string) -> godot_bool,
    >,
    pub godot_string_operator_plus: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_b: *const godot_string) -> godot_string,
    >,
    pub godot_string_length:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_int>,
    pub godot_string_casecmp_to: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_str: *const godot_string,
        ) -> libc::c_schar,
    >,
    pub godot_string_nocasecmp_to: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_str: *const godot_string,
        ) -> libc::c_schar,
    >,
    pub godot_string_naturalnocasecmp_to: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_str: *const godot_string,
        ) -> libc::c_schar,
    >,
    pub godot_string_begins_with: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_string: *const godot_string,
        ) -> godot_bool,
    >,
    pub godot_string_begins_with_char_array: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_char_array: *const libc::c_char,
        ) -> godot_bool,
    >,
    pub godot_string_bigrams:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_array>,
    pub godot_string_chr:
        ::std::option::Option<unsafe extern "C" fn(p_character: wchar_t) -> godot_string>,
    pub godot_string_ends_with: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_string: *const godot_string,
        ) -> godot_bool,
    >,
    pub godot_string_find: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_what: godot_string) -> godot_int,
    >,
    pub godot_string_find_from: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_what: godot_string,
            p_from: godot_int,
        ) -> godot_int,
    >,
    pub godot_string_findmk: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_keys: *const godot_array) -> godot_int,
    >,
    pub godot_string_findmk_from: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_keys: *const godot_array,
            p_from: godot_int,
        ) -> godot_int,
    >,
    pub godot_string_findmk_from_in_place: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_keys: *const godot_array,
            p_from: godot_int,
            r_key: *mut godot_int,
        ) -> godot_int,
    >,
    pub godot_string_findn: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_what: godot_string) -> godot_int,
    >,
    pub godot_string_findn_from: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_what: godot_string,
            p_from: godot_int,
        ) -> godot_int,
    >,
    pub godot_string_find_last: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_what: godot_string) -> godot_int,
    >,
    pub godot_string_format: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_values: *const godot_variant,
        ) -> godot_string,
    >,
    pub godot_string_format_with_custom_placeholder: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_values: *const godot_variant,
            p_placeholder: *const libc::c_char,
        ) -> godot_string,
    >,
    pub godot_string_hex_encode_buffer: ::std::option::Option<
        unsafe extern "C" fn(p_buffer: *const u8, p_len: godot_int) -> godot_string,
    >,
    pub godot_string_hex_to_int:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_int>,
    pub godot_string_hex_to_int_without_prefix:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_int>,
    pub godot_string_insert: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_at_pos: godot_int,
            p_string: godot_string,
        ) -> godot_string,
    >,
    pub godot_string_is_numeric:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_bool>,
    pub godot_string_is_subsequence_of: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_string: *const godot_string,
        ) -> godot_bool,
    >,
    pub godot_string_is_subsequence_ofi: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_string: *const godot_string,
        ) -> godot_bool,
    >,
    pub godot_string_lpad: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_min_length: godot_int) -> godot_string,
    >,
    pub godot_string_lpad_with_custom_character: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_min_length: godot_int,
            p_character: *const godot_string,
        ) -> godot_string,
    >,
    pub godot_string_match: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_wildcard: *const godot_string,
        ) -> godot_bool,
    >,
    pub godot_string_matchn: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_wildcard: *const godot_string,
        ) -> godot_bool,
    >,
    pub godot_string_md5:
        ::std::option::Option<unsafe extern "C" fn(p_md5: *const u8) -> godot_string>,
    pub godot_string_num: ::std::option::Option<unsafe extern "C" fn(p_num: f64) -> godot_string>,
    pub godot_string_num_int64:
        ::std::option::Option<unsafe extern "C" fn(p_num: i64, p_base: godot_int) -> godot_string>,
    pub godot_string_num_int64_capitalized: ::std::option::Option<
        unsafe extern "C" fn(
            p_num: i64,
            p_base: godot_int,
            p_capitalize_hex: godot_bool,
        ) -> godot_string,
    >,
    pub godot_string_num_real:
        ::std::option::Option<unsafe extern "C" fn(p_num: f64) -> godot_string>,
    pub godot_string_num_scientific:
        ::std::option::Option<unsafe extern "C" fn(p_num: f64) -> godot_string>,
    pub godot_string_num_with_decimals: ::std::option::Option<
        unsafe extern "C" fn(p_num: f64, p_decimals: godot_int) -> godot_string,
    >,
    pub godot_string_pad_decimals: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_digits: godot_int) -> godot_string,
    >,
    pub godot_string_pad_zeros: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_digits: godot_int) -> godot_string,
    >,
    pub godot_string_replace_first: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_key: godot_string,
            p_with: godot_string,
        ) -> godot_string,
    >,
    pub godot_string_replace: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_key: godot_string,
            p_with: godot_string,
        ) -> godot_string,
    >,
    pub godot_string_replacen: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_key: godot_string,
            p_with: godot_string,
        ) -> godot_string,
    >,
    pub godot_string_rfind: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_what: godot_string) -> godot_int,
    >,
    pub godot_string_rfindn: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_what: godot_string) -> godot_int,
    >,
    pub godot_string_rfind_from: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_what: godot_string,
            p_from: godot_int,
        ) -> godot_int,
    >,
    pub godot_string_rfindn_from: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_what: godot_string,
            p_from: godot_int,
        ) -> godot_int,
    >,
    pub godot_string_rpad: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_min_length: godot_int) -> godot_string,
    >,
    pub godot_string_rpad_with_custom_character: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_min_length: godot_int,
            p_character: *const godot_string,
        ) -> godot_string,
    >,
    pub godot_string_similarity: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_string: *const godot_string,
        ) -> godot_real,
    >,
    pub godot_string_sprintf: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_values: *const godot_array,
            p_error: *mut godot_bool,
        ) -> godot_string,
    >,
    pub godot_string_substr: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_from: godot_int,
            p_chars: godot_int,
        ) -> godot_string,
    >,
    pub godot_string_to_double:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> f64>,
    pub godot_string_to_float:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_real>,
    pub godot_string_to_int:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_int>,
    pub godot_string_camelcase_to_underscore:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_camelcase_to_underscore_lowercased:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_capitalize:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_char_to_double:
        ::std::option::Option<unsafe extern "C" fn(p_what: *const libc::c_char) -> f64>,
    pub godot_string_char_to_int:
        ::std::option::Option<unsafe extern "C" fn(p_what: *const libc::c_char) -> godot_int>,
    pub godot_string_wchar_to_int:
        ::std::option::Option<unsafe extern "C" fn(p_str: *const wchar_t) -> i64>,
    pub godot_string_char_to_int_with_len: ::std::option::Option<
        unsafe extern "C" fn(p_what: *const libc::c_char, p_len: godot_int) -> godot_int,
    >,
    pub godot_string_char_to_int64_with_len: ::std::option::Option<
        unsafe extern "C" fn(p_str: *const wchar_t, p_len: libc::c_int) -> i64,
    >,
    pub godot_string_hex_to_int64:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> i64>,
    pub godot_string_hex_to_int64_with_prefix:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> i64>,
    pub godot_string_to_int64:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> i64>,
    pub godot_string_unicode_char_to_double: ::std::option::Option<
        unsafe extern "C" fn(p_str: *const wchar_t, r_end: *mut *const wchar_t) -> f64,
    >,
    pub godot_string_get_slice_count: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_splitter: godot_string) -> godot_int,
    >,
    pub godot_string_get_slice: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_splitter: godot_string,
            p_slice: godot_int,
        ) -> godot_string,
    >,
    pub godot_string_get_slicec: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_splitter: wchar_t,
            p_slice: godot_int,
        ) -> godot_string,
    >,
    pub godot_string_split: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_splitter: *const godot_string,
        ) -> godot_array,
    >,
    pub godot_string_split_allow_empty: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_splitter: *const godot_string,
        ) -> godot_array,
    >,
    pub godot_string_split_floats: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_splitter: *const godot_string,
        ) -> godot_array,
    >,
    pub godot_string_split_floats_allows_empty: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_splitter: *const godot_string,
        ) -> godot_array,
    >,
    pub godot_string_split_floats_mk: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_splitters: *const godot_array,
        ) -> godot_array,
    >,
    pub godot_string_split_floats_mk_allows_empty: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_splitters: *const godot_array,
        ) -> godot_array,
    >,
    pub godot_string_split_ints: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_splitter: *const godot_string,
        ) -> godot_array,
    >,
    pub godot_string_split_ints_allows_empty: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_splitter: *const godot_string,
        ) -> godot_array,
    >,
    pub godot_string_split_ints_mk: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_splitters: *const godot_array,
        ) -> godot_array,
    >,
    pub godot_string_split_ints_mk_allows_empty: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_splitters: *const godot_array,
        ) -> godot_array,
    >,
    pub godot_string_split_spaces:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_array>,
    pub godot_string_char_lowercase:
        ::std::option::Option<unsafe extern "C" fn(p_char: wchar_t) -> wchar_t>,
    pub godot_string_char_uppercase:
        ::std::option::Option<unsafe extern "C" fn(p_char: wchar_t) -> wchar_t>,
    pub godot_string_to_lower:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_to_upper:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_get_basename:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_get_extension:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_left: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_pos: godot_int) -> godot_string,
    >,
    pub godot_string_ord_at: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_idx: godot_int) -> wchar_t,
    >,
    pub godot_string_plus_file: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_file: *const godot_string,
        ) -> godot_string,
    >,
    pub godot_string_right: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_pos: godot_int) -> godot_string,
    >,
    pub godot_string_strip_edges: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_left: godot_bool,
            p_right: godot_bool,
        ) -> godot_string,
    >,
    pub godot_string_strip_escapes:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_erase: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_string, p_pos: godot_int, p_chars: godot_int),
    >,
    pub godot_string_ascii: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string) -> godot_char_string,
    >,
    pub godot_string_ascii_extended: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string) -> godot_char_string,
    >,
    pub godot_string_utf8: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string) -> godot_char_string,
    >,
    pub godot_string_parse_utf8: ::std::option::Option<
        unsafe extern "C" fn(p_self: *mut godot_string, p_utf8: *const libc::c_char) -> godot_bool,
    >,
    pub godot_string_parse_utf8_with_len: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *mut godot_string,
            p_utf8: *const libc::c_char,
            p_len: godot_int,
        ) -> godot_bool,
    >,
    pub godot_string_chars_to_utf8:
        ::std::option::Option<unsafe extern "C" fn(p_utf8: *const libc::c_char) -> godot_string>,
    pub godot_string_chars_to_utf8_with_len: ::std::option::Option<
        unsafe extern "C" fn(p_utf8: *const libc::c_char, p_len: godot_int) -> godot_string,
    >,
    pub godot_string_hash:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> u32>,
    pub godot_string_hash64:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> u64>,
    pub godot_string_hash_chars:
        ::std::option::Option<unsafe extern "C" fn(p_cstr: *const libc::c_char) -> u32>,
    pub godot_string_hash_chars_with_len: ::std::option::Option<
        unsafe extern "C" fn(p_cstr: *const libc::c_char, p_len: godot_int) -> u32,
    >,
    pub godot_string_hash_utf8_chars:
        ::std::option::Option<unsafe extern "C" fn(p_str: *const wchar_t) -> u32>,
    pub godot_string_hash_utf8_chars_with_len:
        ::std::option::Option<unsafe extern "C" fn(p_str: *const wchar_t, p_len: godot_int) -> u32>,
    pub godot_string_md5_buffer: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string) -> godot_pool_byte_array,
    >,
    pub godot_string_md5_text:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_sha256_buffer: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string) -> godot_pool_byte_array,
    >,
    pub godot_string_sha256_text:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_empty:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_bool>,
    pub godot_string_get_base_dir:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_get_file:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_humanize_size:
        ::std::option::Option<unsafe extern "C" fn(p_size: usize) -> godot_string>,
    pub godot_string_is_abs_path:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_bool>,
    pub godot_string_is_rel_path:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_bool>,
    pub godot_string_is_resource_file:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_bool>,
    pub godot_string_path_to: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_path: *const godot_string,
        ) -> godot_string,
    >,
    pub godot_string_path_to_file: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_path: *const godot_string,
        ) -> godot_string,
    >,
    pub godot_string_simplify_path:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_c_escape:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_c_escape_multiline:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_c_unescape:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_http_escape:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_http_unescape:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_json_escape:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_word_wrap: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string,
            p_chars_per_line: godot_int,
        ) -> godot_string,
    >,
    pub godot_string_xml_escape:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_xml_escape_with_quotes:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_xml_unescape:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_percent_decode:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_percent_encode:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_string>,
    pub godot_string_is_valid_float:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_bool>,
    pub godot_string_is_valid_hex_number: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string, p_with_prefix: godot_bool) -> godot_bool,
    >,
    pub godot_string_is_valid_html_color:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_bool>,
    pub godot_string_is_valid_identifier:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_bool>,
    pub godot_string_is_valid_integer:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_bool>,
    pub godot_string_is_valid_ip_address:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string) -> godot_bool>,
    pub godot_string_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_string)>,
    pub godot_string_name_new: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_string_name, p_name: *const godot_string),
    >,
    pub godot_string_name_new_data: ::std::option::Option<
        unsafe extern "C" fn(r_dest: *mut godot_string_name, p_name: *const libc::c_char),
    >,
    pub godot_string_name_get_name: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string_name) -> godot_string,
    >,
    pub godot_string_name_get_hash:
        ::std::option::Option<unsafe extern "C" fn(p_self: *const godot_string_name) -> u32>,
    pub godot_string_name_get_data_unique_pointer: ::std::option::Option<
        unsafe extern "C" fn(p_self: *const godot_string_name) -> *const libc::c_void,
    >,
    pub godot_string_name_operator_equal: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string_name,
            p_other: *const godot_string_name,
        ) -> godot_bool,
    >,
    pub godot_string_name_operator_less: ::std::option::Option<
        unsafe extern "C" fn(
            p_self: *const godot_string_name,
            p_other: *const godot_string_name,
        ) -> godot_bool,
    >,
    pub godot_string_name_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_self: *mut godot_string_name)>,
    pub godot_object_destroy: ::std::option::Option<unsafe extern "C" fn(p_o: *mut godot_object)>,
    pub godot_global_get_singleton:
        ::std::option::Option<unsafe extern "C" fn(p_name: *mut libc::c_char) -> *mut godot_object>,
    pub godot_method_bind_get_method: ::std::option::Option<
        unsafe extern "C" fn(
            p_classname: *const libc::c_char,
            p_methodname: *const libc::c_char,
        ) -> *mut godot_method_bind,
    >,
    pub godot_method_bind_ptrcall: ::std::option::Option<
        unsafe extern "C" fn(
            p_method_bind: *mut godot_method_bind,
            p_instance: *mut godot_object,
            p_args: *mut *const libc::c_void,
            p_ret: *mut libc::c_void,
        ),
    >,
    pub godot_method_bind_call: ::std::option::Option<
        unsafe extern "C" fn(
            p_method_bind: *mut godot_method_bind,
            p_instance: *mut godot_object,
            p_args: *mut *const godot_variant,
            p_arg_count: libc::c_int,
            p_call_error: *mut godot_variant_call_error,
        ) -> godot_variant,
    >,
    pub godot_get_class_constructor: ::std::option::Option<
        unsafe extern "C" fn(p_classname: *const libc::c_char) -> godot_class_constructor,
    >,
    pub godot_get_global_constants:
        ::std::option::Option<unsafe extern "C" fn() -> godot_dictionary>,
    pub godot_register_native_call_type: ::std::option::Option<
        unsafe extern "C" fn(call_type: *const libc::c_char, p_callback: native_call_cb),
    >,
    pub godot_alloc:
        ::std::option::Option<unsafe extern "C" fn(p_bytes: libc::c_int) -> *mut libc::c_void>,
    pub godot_realloc: ::std::option::Option<
        unsafe extern "C" fn(p_ptr: *mut libc::c_void, p_bytes: libc::c_int) -> *mut libc::c_void,
    >,
    pub godot_free: ::std::option::Option<unsafe extern "C" fn(p_ptr: *mut libc::c_void)>,
    pub godot_print_error: ::std::option::Option<
        unsafe extern "C" fn(
            p_description: *const libc::c_char,
            p_function: *const libc::c_char,
            p_file: *const libc::c_char,
            p_line: libc::c_int,
        ),
    >,
    pub godot_print_warning: ::std::option::Option<
        unsafe extern "C" fn(
            p_description: *const libc::c_char,
            p_function: *const libc::c_char,
            p_file: *const libc::c_char,
            p_line: libc::c_int,
        ),
    >,
    pub godot_print: ::std::option::Option<unsafe extern "C" fn(p_message: *const godot_string)>,
}
#[test]
fn bindgen_test_layout_godot_gdnative_core_api_struct() {
    assert_eq!(
        ::std::mem::size_of::<godot_gdnative_core_api_struct>(),
        5992usize,
        concat!("Size of: ", stringify!(godot_gdnative_core_api_struct))
    );
    assert_eq!(
        ::std::mem::align_of::<godot_gdnative_core_api_struct>(),
        8usize,
        concat!("Alignment of ", stringify!(godot_gdnative_core_api_struct))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).type_ as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).version as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).next as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).num_extensions as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(num_extensions)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).extensions as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(extensions)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_new_rgba
                as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_new_rgba)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_new_rgb
                as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_new_rgb)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_get_r as *const _
                as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_get_r)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_set_r as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_set_r)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_get_g as *const _
                as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_get_g)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_set_g as *const _
                as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_set_g)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_get_b as *const _
                as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_get_b)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_set_b as *const _
                as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_set_b)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_get_a as *const _
                as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_get_a)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_set_a as *const _
                as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_set_a)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_get_h as *const _
                as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_get_h)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_get_s as *const _
                as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_get_s)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_get_v as *const _
                as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_get_v)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_as_string
                as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_as_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_to_rgba32
                as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_to_rgba32)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_to_argb32
                as *const _ as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_to_argb32)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_gray as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_gray)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_inverted
                as *const _ as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_inverted)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_contrasted
                as *const _ as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_contrasted)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_color_linear_interpolate as *const _ as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_linear_interpolate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_blend as *const _
                as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_blend)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_to_html
                as *const _ as usize
        },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_to_html)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_operator_equal
                as *const _ as usize
        },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_color_operator_less
                as *const _ as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_color_operator_less)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_new as *const _
                as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_as_string
                as *const _ as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_as_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_normalized
                as *const _ as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_normalized)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_length
                as *const _ as usize
        },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_length)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_angle
                as *const _ as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_angle)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_length_squared
                as *const _ as usize
        },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_length_squared)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_is_normalized
                as *const _ as usize
        },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_is_normalized)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_distance_to
                as *const _ as usize
        },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_distance_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector2_distance_squared_to as *const _ as usize
        },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_distance_squared_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_angle_to
                as *const _ as usize
        },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_angle_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_angle_to_point
                as *const _ as usize
        },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_angle_to_point)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector2_linear_interpolate as *const _ as usize
        },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_linear_interpolate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector2_cubic_interpolate as *const _ as usize
        },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_cubic_interpolate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_rotated
                as *const _ as usize
        },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_rotated)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_tangent
                as *const _ as usize
        },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_tangent)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_floor
                as *const _ as usize
        },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_floor)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_snapped
                as *const _ as usize
        },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_snapped)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_aspect
                as *const _ as usize
        },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_aspect)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_dot as *const _
                as usize
        },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_dot)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_slide
                as *const _ as usize
        },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_slide)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_bounce
                as *const _ as usize
        },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_bounce)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_reflect
                as *const _ as usize
        },
        400usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_reflect)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_abs as *const _
                as usize
        },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_abs)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_clamped
                as *const _ as usize
        },
        416usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_clamped)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_operator_add
                as *const _ as usize
        },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_operator_add)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector2_operator_subtract as *const _ as usize
        },
        432usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_operator_subtract)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector2_operator_multiply_vector as *const _ as usize
        },
        440usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_operator_multiply_vector)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector2_operator_multiply_scalar as *const _ as usize
        },
        448usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_operator_multiply_scalar)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector2_operator_divide_vector as *const _ as usize
        },
        456usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_operator_divide_vector)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector2_operator_divide_scalar as *const _ as usize
        },
        464usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_operator_divide_scalar)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_operator_equal
                as *const _ as usize
        },
        472usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_operator_less
                as *const _ as usize
        },
        480usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_operator_less)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_operator_neg
                as *const _ as usize
        },
        488usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_operator_neg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_set_x
                as *const _ as usize
        },
        496usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_set_x)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_set_y
                as *const _ as usize
        },
        504usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_set_y)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_get_x
                as *const _ as usize
        },
        512usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_get_x)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector2_get_y
                as *const _ as usize
        },
        520usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector2_get_y)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_new as *const _
                as usize
        },
        528usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_quat_new_with_axis_angle as *const _ as usize
        },
        536usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_new_with_axis_angle)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_get_x as *const _
                as usize
        },
        544usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_get_x)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_set_x as *const _
                as usize
        },
        552usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_set_x)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_get_y as *const _
                as usize
        },
        560usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_get_y)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_set_y as *const _
                as usize
        },
        568usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_set_y)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_get_z as *const _
                as usize
        },
        576usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_get_z)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_set_z as *const _
                as usize
        },
        584usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_set_z)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_get_w as *const _
                as usize
        },
        592usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_get_w)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_set_w as *const _
                as usize
        },
        600usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_set_w)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_as_string
                as *const _ as usize
        },
        608usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_as_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_length as *const _
                as usize
        },
        616usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_length)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_length_squared
                as *const _ as usize
        },
        624usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_length_squared)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_normalized
                as *const _ as usize
        },
        632usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_normalized)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_is_normalized
                as *const _ as usize
        },
        640usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_is_normalized)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_inverse
                as *const _ as usize
        },
        648usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_inverse)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_dot as *const _
                as usize
        },
        656usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_dot)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_xform as *const _
                as usize
        },
        664usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_xform)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_slerp as *const _
                as usize
        },
        672usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_slerp)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_slerpni
                as *const _ as usize
        },
        680usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_slerpni)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_cubic_slerp
                as *const _ as usize
        },
        688usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_cubic_slerp)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_operator_multiply
                as *const _ as usize
        },
        696usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_operator_multiply)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_operator_add
                as *const _ as usize
        },
        704usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_operator_add)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_operator_subtract
                as *const _ as usize
        },
        712usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_operator_subtract)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_operator_divide
                as *const _ as usize
        },
        720usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_operator_divide)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_operator_equal
                as *const _ as usize
        },
        728usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_quat_operator_neg
                as *const _ as usize
        },
        736usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_quat_operator_neg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_new_with_rows
                as *const _ as usize
        },
        744usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_new_with_rows)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_basis_new_with_axis_and_angle as *const _ as usize
        },
        752usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_new_with_axis_and_angle)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_new_with_euler
                as *const _ as usize
        },
        760usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_new_with_euler)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_as_string
                as *const _ as usize
        },
        768usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_as_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_inverse
                as *const _ as usize
        },
        776usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_inverse)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_transposed
                as *const _ as usize
        },
        784usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_transposed)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_orthonormalized
                as *const _ as usize
        },
        792usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_orthonormalized)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_determinant
                as *const _ as usize
        },
        800usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_determinant)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_rotated
                as *const _ as usize
        },
        808usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_rotated)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_scaled
                as *const _ as usize
        },
        816usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_scaled)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_get_scale
                as *const _ as usize
        },
        824usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_get_scale)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_get_euler
                as *const _ as usize
        },
        832usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_get_euler)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_tdotx as *const _
                as usize
        },
        840usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_tdotx)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_tdoty as *const _
                as usize
        },
        848usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_tdoty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_tdotz as *const _
                as usize
        },
        856usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_tdotz)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_xform as *const _
                as usize
        },
        864usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_xform)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_xform_inv
                as *const _ as usize
        },
        872usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_xform_inv)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_basis_get_orthogonal_index as *const _ as usize
        },
        880usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_get_orthogonal_index)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_new as *const _
                as usize
        },
        888usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_basis_new_with_euler_quat as *const _ as usize
        },
        896usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_new_with_euler_quat)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_get_elements
                as *const _ as usize
        },
        904usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_get_elements)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_get_axis
                as *const _ as usize
        },
        912usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_get_axis)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_set_axis
                as *const _ as usize
        },
        920usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_set_axis)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_get_row
                as *const _ as usize
        },
        928usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_get_row)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_set_row
                as *const _ as usize
        },
        936usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_set_row)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_operator_equal
                as *const _ as usize
        },
        944usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_operator_add
                as *const _ as usize
        },
        952usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_operator_add)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_basis_operator_subtract
                as *const _ as usize
        },
        960usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_operator_subtract)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_basis_operator_multiply_vector as *const _ as usize
        },
        968usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_operator_multiply_vector)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_basis_operator_multiply_scalar as *const _ as usize
        },
        976usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_basis_operator_multiply_scalar)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_new as *const _
                as usize
        },
        984usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_as_string
                as *const _ as usize
        },
        992usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_as_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_min_axis
                as *const _ as usize
        },
        1000usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_min_axis)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_max_axis
                as *const _ as usize
        },
        1008usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_max_axis)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_length
                as *const _ as usize
        },
        1016usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_length)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_length_squared
                as *const _ as usize
        },
        1024usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_length_squared)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_is_normalized
                as *const _ as usize
        },
        1032usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_is_normalized)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_normalized
                as *const _ as usize
        },
        1040usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_normalized)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_inverse
                as *const _ as usize
        },
        1048usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_inverse)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_snapped
                as *const _ as usize
        },
        1056usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_snapped)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_rotated
                as *const _ as usize
        },
        1064usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_rotated)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector3_linear_interpolate as *const _ as usize
        },
        1072usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_linear_interpolate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector3_cubic_interpolate as *const _ as usize
        },
        1080usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_cubic_interpolate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_dot as *const _
                as usize
        },
        1088usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_dot)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_cross
                as *const _ as usize
        },
        1096usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_cross)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_outer
                as *const _ as usize
        },
        1104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_outer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector3_to_diagonal_matrix as *const _ as usize
        },
        1112usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_to_diagonal_matrix)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_abs as *const _
                as usize
        },
        1120usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_abs)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_floor
                as *const _ as usize
        },
        1128usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_floor)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_ceil
                as *const _ as usize
        },
        1136usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_ceil)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_distance_to
                as *const _ as usize
        },
        1144usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_distance_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector3_distance_squared_to as *const _ as usize
        },
        1152usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_distance_squared_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_angle_to
                as *const _ as usize
        },
        1160usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_angle_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_slide
                as *const _ as usize
        },
        1168usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_slide)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_bounce
                as *const _ as usize
        },
        1176usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_bounce)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_reflect
                as *const _ as usize
        },
        1184usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_reflect)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_operator_add
                as *const _ as usize
        },
        1192usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_operator_add)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector3_operator_subtract as *const _ as usize
        },
        1200usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_operator_subtract)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector3_operator_multiply_vector as *const _ as usize
        },
        1208usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_operator_multiply_vector)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector3_operator_multiply_scalar as *const _ as usize
        },
        1216usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_operator_multiply_scalar)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector3_operator_divide_vector as *const _ as usize
        },
        1224usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_operator_divide_vector)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_vector3_operator_divide_scalar as *const _ as usize
        },
        1232usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_operator_divide_scalar)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_operator_equal
                as *const _ as usize
        },
        1240usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_operator_less
                as *const _ as usize
        },
        1248usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_operator_less)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_operator_neg
                as *const _ as usize
        },
        1256usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_operator_neg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_set_axis
                as *const _ as usize
        },
        1264usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_set_axis)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_vector3_get_axis
                as *const _ as usize
        },
        1272usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_vector3_get_axis)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_byte_array_new
                as *const _ as usize
        },
        1280usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_byte_array_new_copy as *const _ as usize
        },
        1288usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_new_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_byte_array_new_with_array as *const _ as usize
        },
        1296usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_new_with_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_byte_array_append
                as *const _ as usize
        },
        1304usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_append)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_byte_array_append_array as *const _ as usize
        },
        1312usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_append_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_byte_array_insert
                as *const _ as usize
        },
        1320usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_insert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_byte_array_invert
                as *const _ as usize
        },
        1328usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_invert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_byte_array_push_back as *const _ as usize
        },
        1336usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_push_back)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_byte_array_remove
                as *const _ as usize
        },
        1344usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_remove)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_byte_array_resize
                as *const _ as usize
        },
        1352usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_resize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_byte_array_read
                as *const _ as usize
        },
        1360usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_read)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_byte_array_write
                as *const _ as usize
        },
        1368usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_write)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_byte_array_set
                as *const _ as usize
        },
        1376usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_set)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_byte_array_get
                as *const _ as usize
        },
        1384usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_get)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_byte_array_size
                as *const _ as usize
        },
        1392usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_byte_array_destroy
                as *const _ as usize
        },
        1400usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_int_array_new
                as *const _ as usize
        },
        1408usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_int_array_new_copy
                as *const _ as usize
        },
        1416usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_new_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_int_array_new_with_array as *const _ as usize
        },
        1424usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_new_with_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_int_array_append
                as *const _ as usize
        },
        1432usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_append)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_int_array_append_array as *const _ as usize
        },
        1440usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_append_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_int_array_insert
                as *const _ as usize
        },
        1448usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_insert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_int_array_invert
                as *const _ as usize
        },
        1456usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_invert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_int_array_push_back as *const _ as usize
        },
        1464usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_push_back)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_int_array_remove
                as *const _ as usize
        },
        1472usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_remove)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_int_array_resize
                as *const _ as usize
        },
        1480usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_resize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_int_array_read
                as *const _ as usize
        },
        1488usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_read)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_int_array_write
                as *const _ as usize
        },
        1496usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_write)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_int_array_set
                as *const _ as usize
        },
        1504usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_set)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_int_array_get
                as *const _ as usize
        },
        1512usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_get)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_int_array_size
                as *const _ as usize
        },
        1520usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_int_array_destroy
                as *const _ as usize
        },
        1528usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_real_array_new
                as *const _ as usize
        },
        1536usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_real_array_new_copy as *const _ as usize
        },
        1544usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_new_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_real_array_new_with_array as *const _ as usize
        },
        1552usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_new_with_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_real_array_append
                as *const _ as usize
        },
        1560usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_append)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_real_array_append_array as *const _ as usize
        },
        1568usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_append_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_real_array_insert
                as *const _ as usize
        },
        1576usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_insert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_real_array_invert
                as *const _ as usize
        },
        1584usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_invert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_real_array_push_back as *const _ as usize
        },
        1592usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_push_back)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_real_array_remove
                as *const _ as usize
        },
        1600usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_remove)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_real_array_resize
                as *const _ as usize
        },
        1608usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_resize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_real_array_read
                as *const _ as usize
        },
        1616usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_read)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_real_array_write
                as *const _ as usize
        },
        1624usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_write)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_real_array_set
                as *const _ as usize
        },
        1632usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_set)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_real_array_get
                as *const _ as usize
        },
        1640usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_get)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_real_array_size
                as *const _ as usize
        },
        1648usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_real_array_destroy
                as *const _ as usize
        },
        1656usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_string_array_new
                as *const _ as usize
        },
        1664usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_new_copy as *const _ as usize
        },
        1672usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_new_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_new_with_array as *const _ as usize
        },
        1680usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_new_with_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_append as *const _ as usize
        },
        1688usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_append)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_append_array as *const _ as usize
        },
        1696usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_append_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_insert as *const _ as usize
        },
        1704usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_insert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_invert as *const _ as usize
        },
        1712usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_invert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_push_back as *const _ as usize
        },
        1720usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_push_back)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_remove as *const _ as usize
        },
        1728usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_remove)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_resize as *const _ as usize
        },
        1736usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_resize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_string_array_read
                as *const _ as usize
        },
        1744usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_read)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_string_array_write
                as *const _ as usize
        },
        1752usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_write)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_string_array_set
                as *const _ as usize
        },
        1760usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_set)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_string_array_get
                as *const _ as usize
        },
        1768usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_get)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_string_array_size
                as *const _ as usize
        },
        1776usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_destroy as *const _ as usize
        },
        1784usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_vector2_array_new
                as *const _ as usize
        },
        1792usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_new_copy as *const _ as usize
        },
        1800usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_new_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_new_with_array as *const _ as usize
        },
        1808usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_new_with_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_append as *const _ as usize
        },
        1816usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_append)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_append_array as *const _ as usize
        },
        1824usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_append_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_insert as *const _ as usize
        },
        1832usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_insert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_invert as *const _ as usize
        },
        1840usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_invert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_push_back as *const _ as usize
        },
        1848usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_push_back)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_remove as *const _ as usize
        },
        1856usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_remove)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_resize as *const _ as usize
        },
        1864usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_resize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_vector2_array_read
                as *const _ as usize
        },
        1872usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_read)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_write as *const _ as usize
        },
        1880usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_write)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_vector2_array_set
                as *const _ as usize
        },
        1888usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_set)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_vector2_array_get
                as *const _ as usize
        },
        1896usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_get)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_vector2_array_size
                as *const _ as usize
        },
        1904usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_destroy as *const _ as usize
        },
        1912usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_vector3_array_new
                as *const _ as usize
        },
        1920usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_new_copy as *const _ as usize
        },
        1928usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_new_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_new_with_array as *const _ as usize
        },
        1936usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_new_with_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_append as *const _ as usize
        },
        1944usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_append)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_append_array as *const _ as usize
        },
        1952usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_append_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_insert as *const _ as usize
        },
        1960usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_insert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_invert as *const _ as usize
        },
        1968usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_invert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_push_back as *const _ as usize
        },
        1976usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_push_back)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_remove as *const _ as usize
        },
        1984usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_remove)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_resize as *const _ as usize
        },
        1992usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_resize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_vector3_array_read
                as *const _ as usize
        },
        2000usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_read)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_write as *const _ as usize
        },
        2008usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_write)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_vector3_array_set
                as *const _ as usize
        },
        2016usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_set)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_vector3_array_get
                as *const _ as usize
        },
        2024usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_get)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_vector3_array_size
                as *const _ as usize
        },
        2032usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_destroy as *const _ as usize
        },
        2040usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_color_array_new
                as *const _ as usize
        },
        2048usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_color_array_new_copy as *const _ as usize
        },
        2056usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_new_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_color_array_new_with_array as *const _ as usize
        },
        2064usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_new_with_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_color_array_append
                as *const _ as usize
        },
        2072usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_append)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_color_array_append_array as *const _ as usize
        },
        2080usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_append_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_color_array_insert
                as *const _ as usize
        },
        2088usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_insert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_color_array_invert
                as *const _ as usize
        },
        2096usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_invert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_color_array_push_back as *const _ as usize
        },
        2104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_push_back)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_color_array_remove
                as *const _ as usize
        },
        2112usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_remove)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_color_array_resize
                as *const _ as usize
        },
        2120usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_resize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_color_array_read
                as *const _ as usize
        },
        2128usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_read)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_color_array_write
                as *const _ as usize
        },
        2136usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_write)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_color_array_set
                as *const _ as usize
        },
        2144usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_set)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_color_array_get
                as *const _ as usize
        },
        2152usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_get)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_pool_color_array_size
                as *const _ as usize
        },
        2160usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_color_array_destroy as *const _ as usize
        },
        2168usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_byte_array_read_access_copy as *const _ as usize
        },
        2176usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_read_access_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_byte_array_read_access_ptr as *const _ as usize
        },
        2184usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_read_access_ptr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_byte_array_read_access_operator_assign as *const _ as usize
        },
        2192usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_read_access_operator_assign)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_byte_array_read_access_destroy as *const _ as usize
        },
        2200usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_read_access_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_int_array_read_access_copy as *const _ as usize
        },
        2208usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_read_access_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_int_array_read_access_ptr as *const _ as usize
        },
        2216usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_read_access_ptr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_int_array_read_access_operator_assign as *const _ as usize
        },
        2224usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_read_access_operator_assign)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_int_array_read_access_destroy as *const _ as usize
        },
        2232usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_read_access_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_real_array_read_access_copy as *const _ as usize
        },
        2240usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_read_access_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_real_array_read_access_ptr as *const _ as usize
        },
        2248usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_read_access_ptr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_real_array_read_access_operator_assign as *const _ as usize
        },
        2256usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_read_access_operator_assign)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_real_array_read_access_destroy as *const _ as usize
        },
        2264usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_read_access_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_read_access_copy as *const _ as usize
        },
        2272usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_read_access_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_read_access_ptr as *const _ as usize
        },
        2280usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_read_access_ptr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_read_access_operator_assign as *const _
                as usize
        },
        2288usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_read_access_operator_assign)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_read_access_destroy as *const _ as usize
        },
        2296usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_read_access_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_read_access_copy as *const _ as usize
        },
        2304usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_read_access_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_read_access_ptr as *const _ as usize
        },
        2312usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_read_access_ptr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_read_access_operator_assign as *const _
                as usize
        },
        2320usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_read_access_operator_assign)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_read_access_destroy as *const _ as usize
        },
        2328usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_read_access_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_read_access_copy as *const _ as usize
        },
        2336usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_read_access_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_read_access_ptr as *const _ as usize
        },
        2344usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_read_access_ptr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_read_access_operator_assign as *const _
                as usize
        },
        2352usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_read_access_operator_assign)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_read_access_destroy as *const _ as usize
        },
        2360usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_read_access_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_color_array_read_access_copy as *const _ as usize
        },
        2368usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_read_access_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_color_array_read_access_ptr as *const _ as usize
        },
        2376usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_read_access_ptr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_color_array_read_access_operator_assign as *const _ as usize
        },
        2384usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_read_access_operator_assign)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_color_array_read_access_destroy as *const _ as usize
        },
        2392usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_read_access_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_byte_array_write_access_copy as *const _ as usize
        },
        2400usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_write_access_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_byte_array_write_access_ptr as *const _ as usize
        },
        2408usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_write_access_ptr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_byte_array_write_access_operator_assign as *const _ as usize
        },
        2416usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_write_access_operator_assign)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_byte_array_write_access_destroy as *const _ as usize
        },
        2424usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_byte_array_write_access_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_int_array_write_access_copy as *const _ as usize
        },
        2432usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_write_access_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_int_array_write_access_ptr as *const _ as usize
        },
        2440usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_write_access_ptr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_int_array_write_access_operator_assign as *const _ as usize
        },
        2448usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_write_access_operator_assign)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_int_array_write_access_destroy as *const _ as usize
        },
        2456usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_int_array_write_access_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_real_array_write_access_copy as *const _ as usize
        },
        2464usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_write_access_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_real_array_write_access_ptr as *const _ as usize
        },
        2472usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_write_access_ptr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_real_array_write_access_operator_assign as *const _ as usize
        },
        2480usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_write_access_operator_assign)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_real_array_write_access_destroy as *const _ as usize
        },
        2488usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_real_array_write_access_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_write_access_copy as *const _ as usize
        },
        2496usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_write_access_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_write_access_ptr as *const _ as usize
        },
        2504usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_write_access_ptr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_write_access_operator_assign as *const _
                as usize
        },
        2512usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_write_access_operator_assign)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_string_array_write_access_destroy as *const _ as usize
        },
        2520usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_string_array_write_access_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_write_access_copy as *const _ as usize
        },
        2528usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_write_access_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_write_access_ptr as *const _ as usize
        },
        2536usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_write_access_ptr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_write_access_operator_assign as *const _
                as usize
        },
        2544usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_write_access_operator_assign)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector2_array_write_access_destroy as *const _ as usize
        },
        2552usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector2_array_write_access_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_write_access_copy as *const _ as usize
        },
        2560usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_write_access_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_write_access_ptr as *const _ as usize
        },
        2568usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_write_access_ptr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_write_access_operator_assign as *const _
                as usize
        },
        2576usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_write_access_operator_assign)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_vector3_array_write_access_destroy as *const _ as usize
        },
        2584usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_vector3_array_write_access_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_color_array_write_access_copy as *const _ as usize
        },
        2592usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_write_access_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_color_array_write_access_ptr as *const _ as usize
        },
        2600usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_write_access_ptr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_color_array_write_access_operator_assign as *const _
                as usize
        },
        2608usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_write_access_operator_assign)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_pool_color_array_write_access_destroy as *const _ as usize
        },
        2616usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_pool_color_array_write_access_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_new as *const _
                as usize
        },
        2624usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_new_copy
                as *const _ as usize
        },
        2632usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_new_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_array_new_pool_color_array as *const _ as usize
        },
        2640usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_new_pool_color_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_array_new_pool_vector3_array as *const _ as usize
        },
        2648usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_new_pool_vector3_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_array_new_pool_vector2_array as *const _ as usize
        },
        2656usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_new_pool_vector2_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_array_new_pool_string_array as *const _ as usize
        },
        2664usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_new_pool_string_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_array_new_pool_real_array as *const _ as usize
        },
        2672usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_new_pool_real_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_array_new_pool_int_array as *const _ as usize
        },
        2680usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_new_pool_int_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_array_new_pool_byte_array as *const _ as usize
        },
        2688usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_new_pool_byte_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_set as *const _
                as usize
        },
        2696usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_set)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_get as *const _
                as usize
        },
        2704usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_get)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_operator_index
                as *const _ as usize
        },
        2712usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_operator_index)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_array_operator_index_const as *const _ as usize
        },
        2720usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_operator_index_const)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_append
                as *const _ as usize
        },
        2728usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_append)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_clear as *const _
                as usize
        },
        2736usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_clear)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_count as *const _
                as usize
        },
        2744usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_count)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_empty as *const _
                as usize
        },
        2752usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_erase as *const _
                as usize
        },
        2760usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_erase)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_front as *const _
                as usize
        },
        2768usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_front)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_back as *const _
                as usize
        },
        2776usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_back)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_find as *const _
                as usize
        },
        2784usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_find)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_find_last
                as *const _ as usize
        },
        2792usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_find_last)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_has as *const _
                as usize
        },
        2800usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_has)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_hash as *const _
                as usize
        },
        2808usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_hash)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_insert
                as *const _ as usize
        },
        2816usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_insert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_invert
                as *const _ as usize
        },
        2824usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_invert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_pop_back
                as *const _ as usize
        },
        2832usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_pop_back)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_pop_front
                as *const _ as usize
        },
        2840usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_pop_front)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_push_back
                as *const _ as usize
        },
        2848usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_push_back)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_push_front
                as *const _ as usize
        },
        2856usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_push_front)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_remove
                as *const _ as usize
        },
        2864usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_remove)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_resize
                as *const _ as usize
        },
        2872usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_resize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_rfind as *const _
                as usize
        },
        2880usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_rfind)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_size as *const _
                as usize
        },
        2888usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_sort as *const _
                as usize
        },
        2896usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_sort)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_sort_custom
                as *const _ as usize
        },
        2904usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_sort_custom)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_bsearch
                as *const _ as usize
        },
        2912usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_bsearch)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_bsearch_custom
                as *const _ as usize
        },
        2920usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_bsearch_custom)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_array_destroy
                as *const _ as usize
        },
        2928usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_array_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_new
                as *const _ as usize
        },
        2936usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_new_copy
                as *const _ as usize
        },
        2944usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_new_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_destroy
                as *const _ as usize
        },
        2952usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_size
                as *const _ as usize
        },
        2960usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_empty
                as *const _ as usize
        },
        2968usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_clear
                as *const _ as usize
        },
        2976usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_clear)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_has
                as *const _ as usize
        },
        2984usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_has)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_has_all
                as *const _ as usize
        },
        2992usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_has_all)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_erase
                as *const _ as usize
        },
        3000usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_erase)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_hash
                as *const _ as usize
        },
        3008usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_hash)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_keys
                as *const _ as usize
        },
        3016usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_keys)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_values
                as *const _ as usize
        },
        3024usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_values)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_get
                as *const _ as usize
        },
        3032usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_get)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_set
                as *const _ as usize
        },
        3040usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_set)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_dictionary_operator_index as *const _ as usize
        },
        3048usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_operator_index)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_dictionary_operator_index_const as *const _ as usize
        },
        3056usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_operator_index_const)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_next
                as *const _ as usize
        },
        3064usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_next)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_dictionary_operator_equal as *const _ as usize
        },
        3072usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_dictionary_to_json
                as *const _ as usize
        },
        3080usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_dictionary_to_json)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_node_path_new
                as *const _ as usize
        },
        3088usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_node_path_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_node_path_new_copy
                as *const _ as usize
        },
        3096usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_node_path_new_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_node_path_destroy
                as *const _ as usize
        },
        3104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_node_path_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_node_path_as_string
                as *const _ as usize
        },
        3112usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_node_path_as_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_node_path_is_absolute
                as *const _ as usize
        },
        3120usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_node_path_is_absolute)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_node_path_get_name_count as *const _ as usize
        },
        3128usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_node_path_get_name_count)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_node_path_get_name
                as *const _ as usize
        },
        3136usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_node_path_get_name)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_node_path_get_subname_count as *const _ as usize
        },
        3144usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_node_path_get_subname_count)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_node_path_get_subname
                as *const _ as usize
        },
        3152usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_node_path_get_subname)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_node_path_get_concatenated_subnames as *const _ as usize
        },
        3160usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_node_path_get_concatenated_subnames)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_node_path_is_empty
                as *const _ as usize
        },
        3168usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_node_path_is_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_node_path_operator_equal as *const _ as usize
        },
        3176usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_node_path_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_new_with_reals
                as *const _ as usize
        },
        3184usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_new_with_reals)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_new_with_vectors
                as *const _ as usize
        },
        3192usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_new_with_vectors)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_new_with_normal
                as *const _ as usize
        },
        3200usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_new_with_normal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_as_string
                as *const _ as usize
        },
        3208usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_as_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_normalized
                as *const _ as usize
        },
        3216usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_normalized)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_center
                as *const _ as usize
        },
        3224usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_center)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_get_any_point
                as *const _ as usize
        },
        3232usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_get_any_point)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_is_point_over
                as *const _ as usize
        },
        3240usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_is_point_over)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_distance_to
                as *const _ as usize
        },
        3248usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_distance_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_has_point
                as *const _ as usize
        },
        3256usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_has_point)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_project
                as *const _ as usize
        },
        3264usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_project)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_intersect_3
                as *const _ as usize
        },
        3272usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_intersect_3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_intersects_ray
                as *const _ as usize
        },
        3280usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_intersects_ray)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_plane_intersects_segment as *const _ as usize
        },
        3288usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_intersects_segment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_operator_neg
                as *const _ as usize
        },
        3296usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_operator_neg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_operator_equal
                as *const _ as usize
        },
        3304usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_set_normal
                as *const _ as usize
        },
        3312usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_set_normal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_get_normal
                as *const _ as usize
        },
        3320usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_get_normal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_get_d as *const _
                as usize
        },
        3328usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_get_d)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_plane_set_d as *const _
                as usize
        },
        3336usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_plane_set_d)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_rect2_new_with_position_and_size as *const _ as usize
        },
        3344usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_new_with_position_and_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_new as *const _
                as usize
        },
        3352usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_as_string
                as *const _ as usize
        },
        3360usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_as_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_get_area
                as *const _ as usize
        },
        3368usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_get_area)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_intersects
                as *const _ as usize
        },
        3376usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_intersects)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_encloses
                as *const _ as usize
        },
        3384usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_encloses)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_has_no_area
                as *const _ as usize
        },
        3392usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_has_no_area)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_clip as *const _
                as usize
        },
        3400usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_clip)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_merge as *const _
                as usize
        },
        3408usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_merge)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_has_point
                as *const _ as usize
        },
        3416usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_has_point)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_grow as *const _
                as usize
        },
        3424usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_grow)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_expand
                as *const _ as usize
        },
        3432usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_expand)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_operator_equal
                as *const _ as usize
        },
        3440usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_get_position
                as *const _ as usize
        },
        3448usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_get_position)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_get_size
                as *const _ as usize
        },
        3456usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_get_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_set_position
                as *const _ as usize
        },
        3464usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_set_position)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rect2_set_size
                as *const _ as usize
        },
        3472usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rect2_set_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_new as *const _
                as usize
        },
        3480usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_get_position
                as *const _ as usize
        },
        3488usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_get_position)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_set_position
                as *const _ as usize
        },
        3496usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_set_position)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_get_size
                as *const _ as usize
        },
        3504usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_get_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_set_size
                as *const _ as usize
        },
        3512usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_set_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_as_string
                as *const _ as usize
        },
        3520usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_as_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_get_area
                as *const _ as usize
        },
        3528usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_get_area)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_has_no_area
                as *const _ as usize
        },
        3536usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_has_no_area)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_has_no_surface
                as *const _ as usize
        },
        3544usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_has_no_surface)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_intersects
                as *const _ as usize
        },
        3552usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_intersects)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_encloses
                as *const _ as usize
        },
        3560usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_encloses)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_merge as *const _
                as usize
        },
        3568usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_merge)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_intersection
                as *const _ as usize
        },
        3576usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_intersection)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_intersects_plane
                as *const _ as usize
        },
        3584usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_intersects_plane)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_intersects_segment
                as *const _ as usize
        },
        3592usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_intersects_segment)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_has_point
                as *const _ as usize
        },
        3600usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_has_point)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_get_support
                as *const _ as usize
        },
        3608usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_get_support)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_get_longest_axis
                as *const _ as usize
        },
        3616usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_get_longest_axis)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_aabb_get_longest_axis_index as *const _ as usize
        },
        3624usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_get_longest_axis_index)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_aabb_get_longest_axis_size as *const _ as usize
        },
        3632usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_get_longest_axis_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_get_shortest_axis
                as *const _ as usize
        },
        3640usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_get_shortest_axis)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_aabb_get_shortest_axis_index as *const _ as usize
        },
        3648usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_get_shortest_axis_index)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_aabb_get_shortest_axis_size as *const _ as usize
        },
        3656usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_get_shortest_axis_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_expand as *const _
                as usize
        },
        3664usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_expand)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_grow as *const _
                as usize
        },
        3672usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_grow)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_get_endpoint
                as *const _ as usize
        },
        3680usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_get_endpoint)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_aabb_operator_equal
                as *const _ as usize
        },
        3688usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_aabb_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rid_new as *const _
                as usize
        },
        3696usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rid_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rid_get_id as *const _
                as usize
        },
        3704usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rid_get_id)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rid_new_with_resource
                as *const _ as usize
        },
        3712usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rid_new_with_resource)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rid_operator_equal
                as *const _ as usize
        },
        3720usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rid_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_rid_operator_less
                as *const _ as usize
        },
        3728usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_rid_operator_less)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform_new_with_axis_origin as *const _ as usize
        },
        3736usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_new_with_axis_origin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_new
                as *const _ as usize
        },
        3744usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_get_basis
                as *const _ as usize
        },
        3752usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_get_basis)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_set_basis
                as *const _ as usize
        },
        3760usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_set_basis)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_get_origin
                as *const _ as usize
        },
        3768usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_get_origin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_set_origin
                as *const _ as usize
        },
        3776usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_set_origin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_as_string
                as *const _ as usize
        },
        3784usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_as_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_inverse
                as *const _ as usize
        },
        3792usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_inverse)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform_affine_inverse as *const _ as usize
        },
        3800usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_affine_inverse)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform_orthonormalized as *const _ as usize
        },
        3808usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_orthonormalized)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_rotated
                as *const _ as usize
        },
        3816usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_rotated)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_scaled
                as *const _ as usize
        },
        3824usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_scaled)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_translated
                as *const _ as usize
        },
        3832usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_translated)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_looking_at
                as *const _ as usize
        },
        3840usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_looking_at)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_xform_plane
                as *const _ as usize
        },
        3848usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_xform_plane)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform_xform_inv_plane as *const _ as usize
        },
        3856usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_xform_inv_plane)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_new_identity
                as *const _ as usize
        },
        3864usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_new_identity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform_operator_equal as *const _ as usize
        },
        3872usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform_operator_multiply as *const _ as usize
        },
        3880usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_operator_multiply)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_xform_vector3
                as *const _ as usize
        },
        3888usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_xform_vector3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform_xform_inv_vector3 as *const _ as usize
        },
        3896usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_xform_inv_vector3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform_xform_aabb
                as *const _ as usize
        },
        3904usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_xform_aabb)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform_xform_inv_aabb as *const _ as usize
        },
        3912usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform_xform_inv_aabb)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform2d_new
                as *const _ as usize
        },
        3920usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform2d_new_axis_origin as *const _ as usize
        },
        3928usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_new_axis_origin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform2d_as_string
                as *const _ as usize
        },
        3936usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_as_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform2d_inverse
                as *const _ as usize
        },
        3944usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_inverse)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform2d_affine_inverse as *const _ as usize
        },
        3952usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_affine_inverse)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform2d_get_rotation as *const _ as usize
        },
        3960usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_get_rotation)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform2d_get_origin
                as *const _ as usize
        },
        3968usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_get_origin)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform2d_get_scale
                as *const _ as usize
        },
        3976usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_get_scale)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform2d_orthonormalized as *const _ as usize
        },
        3984usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_orthonormalized)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform2d_rotated
                as *const _ as usize
        },
        3992usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_rotated)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform2d_scaled
                as *const _ as usize
        },
        4000usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_scaled)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform2d_translated
                as *const _ as usize
        },
        4008usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_translated)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform2d_xform_vector2 as *const _ as usize
        },
        4016usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_xform_vector2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform2d_xform_inv_vector2 as *const _ as usize
        },
        4024usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_xform_inv_vector2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform2d_basis_xform_vector2 as *const _ as usize
        },
        4032usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_basis_xform_vector2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform2d_basis_xform_inv_vector2 as *const _ as usize
        },
        4040usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_basis_xform_inv_vector2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform2d_interpolate_with as *const _ as usize
        },
        4048usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_interpolate_with)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform2d_operator_equal as *const _ as usize
        },
        4056usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform2d_operator_multiply as *const _ as usize
        },
        4064usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_operator_multiply)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform2d_new_identity as *const _ as usize
        },
        4072usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_new_identity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_transform2d_xform_rect2
                as *const _ as usize
        },
        4080usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_xform_rect2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_transform2d_xform_inv_rect2 as *const _ as usize
        },
        4088usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_transform2d_xform_inv_rect2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_get_type
                as *const _ as usize
        },
        4096usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_get_type)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_copy
                as *const _ as usize
        },
        4104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_nil
                as *const _ as usize
        },
        4112usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_nil)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_bool
                as *const _ as usize
        },
        4120usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_bool)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_uint
                as *const _ as usize
        },
        4128usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_uint)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_int
                as *const _ as usize
        },
        4136usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_int)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_real
                as *const _ as usize
        },
        4144usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_real)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_string
                as *const _ as usize
        },
        4152usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_vector2
                as *const _ as usize
        },
        4160usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_vector2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_rect2
                as *const _ as usize
        },
        4168usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_rect2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_vector3
                as *const _ as usize
        },
        4176usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_vector3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_transform2d
                as *const _ as usize
        },
        4184usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_transform2d)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_plane
                as *const _ as usize
        },
        4192usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_plane)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_quat
                as *const _ as usize
        },
        4200usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_quat)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_aabb
                as *const _ as usize
        },
        4208usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_aabb)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_basis
                as *const _ as usize
        },
        4216usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_basis)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_transform
                as *const _ as usize
        },
        4224usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_transform)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_color
                as *const _ as usize
        },
        4232usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_color)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_node_path
                as *const _ as usize
        },
        4240usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_node_path)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_rid
                as *const _ as usize
        },
        4248usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_rid)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_object
                as *const _ as usize
        },
        4256usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_object)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_dictionary
                as *const _ as usize
        },
        4264usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_dictionary)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_new_array
                as *const _ as usize
        },
        4272usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_variant_new_pool_byte_array as *const _ as usize
        },
        4280usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_pool_byte_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_variant_new_pool_int_array as *const _ as usize
        },
        4288usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_pool_int_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_variant_new_pool_real_array as *const _ as usize
        },
        4296usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_pool_real_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_variant_new_pool_string_array as *const _ as usize
        },
        4304usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_pool_string_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_variant_new_pool_vector2_array as *const _ as usize
        },
        4312usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_pool_vector2_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_variant_new_pool_vector3_array as *const _ as usize
        },
        4320usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_pool_vector3_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_variant_new_pool_color_array as *const _ as usize
        },
        4328usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_new_pool_color_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_bool
                as *const _ as usize
        },
        4336usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_bool)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_uint
                as *const _ as usize
        },
        4344usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_uint)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_int
                as *const _ as usize
        },
        4352usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_int)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_real
                as *const _ as usize
        },
        4360usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_real)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_string
                as *const _ as usize
        },
        4368usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_vector2
                as *const _ as usize
        },
        4376usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_vector2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_rect2
                as *const _ as usize
        },
        4384usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_rect2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_vector3
                as *const _ as usize
        },
        4392usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_vector3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_transform2d
                as *const _ as usize
        },
        4400usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_transform2d)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_plane
                as *const _ as usize
        },
        4408usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_plane)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_quat
                as *const _ as usize
        },
        4416usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_quat)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_aabb
                as *const _ as usize
        },
        4424usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_aabb)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_basis
                as *const _ as usize
        },
        4432usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_basis)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_transform
                as *const _ as usize
        },
        4440usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_transform)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_color
                as *const _ as usize
        },
        4448usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_color)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_node_path
                as *const _ as usize
        },
        4456usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_node_path)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_rid
                as *const _ as usize
        },
        4464usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_rid)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_object
                as *const _ as usize
        },
        4472usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_object)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_dictionary
                as *const _ as usize
        },
        4480usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_dictionary)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_as_array
                as *const _ as usize
        },
        4488usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_variant_as_pool_byte_array as *const _ as usize
        },
        4496usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_pool_byte_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_variant_as_pool_int_array as *const _ as usize
        },
        4504usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_pool_int_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_variant_as_pool_real_array as *const _ as usize
        },
        4512usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_pool_real_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_variant_as_pool_string_array as *const _ as usize
        },
        4520usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_pool_string_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_variant_as_pool_vector2_array as *const _ as usize
        },
        4528usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_pool_vector2_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_variant_as_pool_vector3_array as *const _ as usize
        },
        4536usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_pool_vector3_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_variant_as_pool_color_array as *const _ as usize
        },
        4544usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_as_pool_color_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_call
                as *const _ as usize
        },
        4552usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_call)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_has_method
                as *const _ as usize
        },
        4560usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_has_method)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_operator_equal
                as *const _ as usize
        },
        4568usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_operator_less
                as *const _ as usize
        },
        4576usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_operator_less)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_hash_compare
                as *const _ as usize
        },
        4584usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_hash_compare)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_booleanize
                as *const _ as usize
        },
        4592usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_booleanize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_variant_destroy
                as *const _ as usize
        },
        4600usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_variant_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_char_string_length
                as *const _ as usize
        },
        4608usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_char_string_length)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_char_string_get_data
                as *const _ as usize
        },
        4616usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_char_string_get_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_char_string_destroy
                as *const _ as usize
        },
        4624usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_char_string_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_new as *const _
                as usize
        },
        4632usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_new_copy
                as *const _ as usize
        },
        4640usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_new_copy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_new_with_wide_string as *const _ as usize
        },
        4648usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_new_with_wide_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_operator_index
                as *const _ as usize
        },
        4656usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_operator_index)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_operator_index_const as *const _ as usize
        },
        4664usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_operator_index_const)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_wide_str
                as *const _ as usize
        },
        4672usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_wide_str)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_operator_equal
                as *const _ as usize
        },
        4680usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_operator_less
                as *const _ as usize
        },
        4688usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_operator_less)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_operator_plus
                as *const _ as usize
        },
        4696usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_operator_plus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_length
                as *const _ as usize
        },
        4704usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_length)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_casecmp_to
                as *const _ as usize
        },
        4712usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_casecmp_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_nocasecmp_to
                as *const _ as usize
        },
        4720usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_nocasecmp_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_naturalnocasecmp_to as *const _ as usize
        },
        4728usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_naturalnocasecmp_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_begins_with
                as *const _ as usize
        },
        4736usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_begins_with)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_begins_with_char_array as *const _ as usize
        },
        4744usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_begins_with_char_array)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_bigrams
                as *const _ as usize
        },
        4752usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_bigrams)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_chr as *const _
                as usize
        },
        4760usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_chr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_ends_with
                as *const _ as usize
        },
        4768usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_ends_with)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_find as *const _
                as usize
        },
        4776usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_find)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_find_from
                as *const _ as usize
        },
        4784usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_find_from)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_findmk
                as *const _ as usize
        },
        4792usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_findmk)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_findmk_from
                as *const _ as usize
        },
        4800usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_findmk_from)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_findmk_from_in_place as *const _ as usize
        },
        4808usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_findmk_from_in_place)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_findn
                as *const _ as usize
        },
        4816usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_findn)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_findn_from
                as *const _ as usize
        },
        4824usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_findn_from)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_find_last
                as *const _ as usize
        },
        4832usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_find_last)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_format
                as *const _ as usize
        },
        4840usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_format)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_format_with_custom_placeholder as *const _ as usize
        },
        4848usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_format_with_custom_placeholder)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_hex_encode_buffer as *const _ as usize
        },
        4856usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_hex_encode_buffer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_hex_to_int
                as *const _ as usize
        },
        4864usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_hex_to_int)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_hex_to_int_without_prefix as *const _ as usize
        },
        4872usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_hex_to_int_without_prefix)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_insert
                as *const _ as usize
        },
        4880usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_insert)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_is_numeric
                as *const _ as usize
        },
        4888usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_is_numeric)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_is_subsequence_of as *const _ as usize
        },
        4896usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_is_subsequence_of)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_is_subsequence_ofi as *const _ as usize
        },
        4904usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_is_subsequence_ofi)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_lpad as *const _
                as usize
        },
        4912usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_lpad)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_lpad_with_custom_character as *const _ as usize
        },
        4920usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_lpad_with_custom_character)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_match
                as *const _ as usize
        },
        4928usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_match)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_matchn
                as *const _ as usize
        },
        4936usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_matchn)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_md5 as *const _
                as usize
        },
        4944usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_md5)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_num as *const _
                as usize
        },
        4952usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_num)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_num_int64
                as *const _ as usize
        },
        4960usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_num_int64)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_num_int64_capitalized as *const _ as usize
        },
        4968usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_num_int64_capitalized)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_num_real
                as *const _ as usize
        },
        4976usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_num_real)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_num_scientific
                as *const _ as usize
        },
        4984usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_num_scientific)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_num_with_decimals as *const _ as usize
        },
        4992usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_num_with_decimals)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_pad_decimals
                as *const _ as usize
        },
        5000usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_pad_decimals)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_pad_zeros
                as *const _ as usize
        },
        5008usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_pad_zeros)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_replace_first
                as *const _ as usize
        },
        5016usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_replace_first)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_replace
                as *const _ as usize
        },
        5024usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_replace)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_replacen
                as *const _ as usize
        },
        5032usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_replacen)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_rfind
                as *const _ as usize
        },
        5040usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_rfind)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_rfindn
                as *const _ as usize
        },
        5048usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_rfindn)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_rfind_from
                as *const _ as usize
        },
        5056usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_rfind_from)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_rfindn_from
                as *const _ as usize
        },
        5064usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_rfindn_from)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_rpad as *const _
                as usize
        },
        5072usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_rpad)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_rpad_with_custom_character as *const _ as usize
        },
        5080usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_rpad_with_custom_character)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_similarity
                as *const _ as usize
        },
        5088usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_similarity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_sprintf
                as *const _ as usize
        },
        5096usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_sprintf)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_substr
                as *const _ as usize
        },
        5104usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_substr)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_to_double
                as *const _ as usize
        },
        5112usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_to_double)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_to_float
                as *const _ as usize
        },
        5120usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_to_float)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_to_int
                as *const _ as usize
        },
        5128usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_to_int)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_camelcase_to_underscore as *const _ as usize
        },
        5136usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_camelcase_to_underscore)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_camelcase_to_underscore_lowercased as *const _ as usize
        },
        5144usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_camelcase_to_underscore_lowercased)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_capitalize
                as *const _ as usize
        },
        5152usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_capitalize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_char_to_double
                as *const _ as usize
        },
        5160usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_char_to_double)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_char_to_int
                as *const _ as usize
        },
        5168usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_char_to_int)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_wchar_to_int
                as *const _ as usize
        },
        5176usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_wchar_to_int)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_char_to_int_with_len as *const _ as usize
        },
        5184usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_char_to_int_with_len)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_char_to_int64_with_len as *const _ as usize
        },
        5192usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_char_to_int64_with_len)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_hex_to_int64
                as *const _ as usize
        },
        5200usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_hex_to_int64)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_hex_to_int64_with_prefix as *const _ as usize
        },
        5208usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_hex_to_int64_with_prefix)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_to_int64
                as *const _ as usize
        },
        5216usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_to_int64)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_unicode_char_to_double as *const _ as usize
        },
        5224usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_unicode_char_to_double)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_get_slice_count
                as *const _ as usize
        },
        5232usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_get_slice_count)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_get_slice
                as *const _ as usize
        },
        5240usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_get_slice)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_get_slicec
                as *const _ as usize
        },
        5248usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_get_slicec)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_split
                as *const _ as usize
        },
        5256usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_split)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_split_allow_empty as *const _ as usize
        },
        5264usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_split_allow_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_split_floats
                as *const _ as usize
        },
        5272usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_split_floats)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_split_floats_allows_empty as *const _ as usize
        },
        5280usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_split_floats_allows_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_split_floats_mk
                as *const _ as usize
        },
        5288usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_split_floats_mk)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_split_floats_mk_allows_empty as *const _ as usize
        },
        5296usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_split_floats_mk_allows_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_split_ints
                as *const _ as usize
        },
        5304usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_split_ints)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_split_ints_allows_empty as *const _ as usize
        },
        5312usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_split_ints_allows_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_split_ints_mk
                as *const _ as usize
        },
        5320usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_split_ints_mk)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_split_ints_mk_allows_empty as *const _ as usize
        },
        5328usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_split_ints_mk_allows_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_split_spaces
                as *const _ as usize
        },
        5336usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_split_spaces)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_char_lowercase
                as *const _ as usize
        },
        5344usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_char_lowercase)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_char_uppercase
                as *const _ as usize
        },
        5352usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_char_uppercase)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_to_lower
                as *const _ as usize
        },
        5360usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_to_lower)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_to_upper
                as *const _ as usize
        },
        5368usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_to_upper)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_get_basename
                as *const _ as usize
        },
        5376usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_get_basename)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_get_extension
                as *const _ as usize
        },
        5384usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_get_extension)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_left as *const _
                as usize
        },
        5392usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_left)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_ord_at
                as *const _ as usize
        },
        5400usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_ord_at)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_plus_file
                as *const _ as usize
        },
        5408usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_plus_file)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_right
                as *const _ as usize
        },
        5416usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_right)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_strip_edges
                as *const _ as usize
        },
        5424usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_strip_edges)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_strip_escapes
                as *const _ as usize
        },
        5432usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_strip_escapes)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_erase
                as *const _ as usize
        },
        5440usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_erase)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_ascii
                as *const _ as usize
        },
        5448usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_ascii)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_ascii_extended
                as *const _ as usize
        },
        5456usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_ascii_extended)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_utf8 as *const _
                as usize
        },
        5464usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_utf8)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_parse_utf8
                as *const _ as usize
        },
        5472usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_parse_utf8)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_parse_utf8_with_len as *const _ as usize
        },
        5480usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_parse_utf8_with_len)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_chars_to_utf8
                as *const _ as usize
        },
        5488usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_chars_to_utf8)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_chars_to_utf8_with_len as *const _ as usize
        },
        5496usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_chars_to_utf8_with_len)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_hash as *const _
                as usize
        },
        5504usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_hash)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_hash64
                as *const _ as usize
        },
        5512usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_hash64)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_hash_chars
                as *const _ as usize
        },
        5520usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_hash_chars)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_hash_chars_with_len as *const _ as usize
        },
        5528usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_hash_chars_with_len)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_hash_utf8_chars
                as *const _ as usize
        },
        5536usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_hash_utf8_chars)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_hash_utf8_chars_with_len as *const _ as usize
        },
        5544usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_hash_utf8_chars_with_len)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_md5_buffer
                as *const _ as usize
        },
        5552usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_md5_buffer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_md5_text
                as *const _ as usize
        },
        5560usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_md5_text)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_sha256_buffer
                as *const _ as usize
        },
        5568usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_sha256_buffer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_sha256_text
                as *const _ as usize
        },
        5576usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_sha256_text)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_empty
                as *const _ as usize
        },
        5584usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_empty)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_get_base_dir
                as *const _ as usize
        },
        5592usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_get_base_dir)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_get_file
                as *const _ as usize
        },
        5600usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_get_file)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_humanize_size
                as *const _ as usize
        },
        5608usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_humanize_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_is_abs_path
                as *const _ as usize
        },
        5616usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_is_abs_path)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_is_rel_path
                as *const _ as usize
        },
        5624usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_is_rel_path)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_is_resource_file
                as *const _ as usize
        },
        5632usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_is_resource_file)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_path_to
                as *const _ as usize
        },
        5640usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_path_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_path_to_file
                as *const _ as usize
        },
        5648usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_path_to_file)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_simplify_path
                as *const _ as usize
        },
        5656usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_simplify_path)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_c_escape
                as *const _ as usize
        },
        5664usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_c_escape)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_c_escape_multiline as *const _ as usize
        },
        5672usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_c_escape_multiline)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_c_unescape
                as *const _ as usize
        },
        5680usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_c_unescape)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_http_escape
                as *const _ as usize
        },
        5688usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_http_escape)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_http_unescape
                as *const _ as usize
        },
        5696usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_http_unescape)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_json_escape
                as *const _ as usize
        },
        5704usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_json_escape)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_word_wrap
                as *const _ as usize
        },
        5712usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_word_wrap)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_xml_escape
                as *const _ as usize
        },
        5720usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_xml_escape)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_xml_escape_with_quotes as *const _ as usize
        },
        5728usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_xml_escape_with_quotes)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_xml_unescape
                as *const _ as usize
        },
        5736usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_xml_unescape)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_percent_decode
                as *const _ as usize
        },
        5744usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_percent_decode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_percent_encode
                as *const _ as usize
        },
        5752usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_percent_encode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_is_valid_float
                as *const _ as usize
        },
        5760usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_is_valid_float)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_is_valid_hex_number as *const _ as usize
        },
        5768usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_is_valid_hex_number)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_is_valid_html_color as *const _ as usize
        },
        5776usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_is_valid_html_color)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_is_valid_identifier as *const _ as usize
        },
        5784usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_is_valid_identifier)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_is_valid_integer
                as *const _ as usize
        },
        5792usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_is_valid_integer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_is_valid_ip_address as *const _ as usize
        },
        5800usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_is_valid_ip_address)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_destroy
                as *const _ as usize
        },
        5808usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_name_new
                as *const _ as usize
        },
        5816usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_name_new)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_name_new_data
                as *const _ as usize
        },
        5824usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_name_new_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_name_get_name
                as *const _ as usize
        },
        5832usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_name_get_name)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_name_get_hash
                as *const _ as usize
        },
        5840usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_name_get_hash)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_name_get_data_unique_pointer as *const _ as usize
        },
        5848usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_name_get_data_unique_pointer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_name_operator_equal as *const _ as usize
        },
        5856usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_name_operator_equal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_string_name_operator_less as *const _ as usize
        },
        5864usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_name_operator_less)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_string_name_destroy
                as *const _ as usize
        },
        5872usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_string_name_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_object_destroy
                as *const _ as usize
        },
        5880usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_object_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_global_get_singleton
                as *const _ as usize
        },
        5888usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_global_get_singleton)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_method_bind_get_method
                as *const _ as usize
        },
        5896usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_method_bind_get_method)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_method_bind_ptrcall
                as *const _ as usize
        },
        5904usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_method_bind_ptrcall)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_method_bind_call
                as *const _ as usize
        },
        5912usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_method_bind_call)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_get_class_constructor
                as *const _ as usize
        },
        5920usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_get_class_constructor)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_get_global_constants
                as *const _ as usize
        },
        5928usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_get_global_constants)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>()))
                .godot_register_native_call_type as *const _ as usize
        },
        5936usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_register_native_call_type)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_alloc as *const _
                as usize
        },
        5944usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_alloc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_realloc as *const _
                as usize
        },
        5952usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_realloc)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_free as *const _
                as usize
        },
        5960usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_free)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_print_error as *const _
                as usize
        },
        5968usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_print_error)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_print_warning
                as *const _ as usize
        },
        5976usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_print_warning)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<godot_gdnative_core_api_struct>())).godot_print as *const _
                as usize
        },
        5984usize,
        concat!(
            "Offset of field: ",
            stringify!(godot_gdnative_core_api_struct),
            "::",
            stringify!(godot_print)
        )
    );
}
impl Default for godot_gdnative_core_api_struct {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
